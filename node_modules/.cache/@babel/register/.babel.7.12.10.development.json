{
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const app = require('./app.js');\n\napp.listen(app.get('port'));\nconsole.log('Server Running on PORT', app.get('port'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInJlcXVpcmUiLCJsaXN0ZW4iLCJnZXQiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFDQSxNQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQW5COztBQUVBRCxHQUFHLENBQUNFLE1BQUosQ0FBV0YsR0FBRyxDQUFDRyxHQUFKLENBQVEsTUFBUixDQUFYO0FBRUFDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHdCQUFaLEVBQXFDTCxHQUFHLENBQUNHLEdBQUosQ0FBUSxNQUFSLENBQXJDIiwic291cmNlUm9vdCI6IkY6XFxEb2N1bWVudHNcXEFycUJJRFxcUGxhdGZvcm1cXFZleXJvbl9hcnFCSURfQVBJX015RVJOXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jb25zdCBhcHAgPSByZXF1aXJlKCcuL2FwcC5qcycpO1xyXG5cclxuYXBwLmxpc3RlbihhcHAuZ2V0KCdwb3J0JykpO1xyXG5cclxuY29uc29sZS5sb2coJ1NlcnZlciBSdW5uaW5nIG9uIFBPUlQnLGFwcC5nZXQoJ3BvcnQnKSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "require",
        "listen",
        "get",
        "console",
        "log"
      ],
      "mappings": "AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,UAAD,CAAnB;;AAEAD,GAAG,CAACE,MAAJ,CAAWF,GAAG,CAACG,GAAJ,CAAQ,MAAR,CAAX;AAEAC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCL,GAAG,CAACG,GAAJ,CAAQ,MAAR,CAArC",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\",
      "sourcesContent": [
        "\r\nconst app = require('./app.js');\r\n\r\napp.listen(app.get('port'));\r\n\r\nconsole.log('Server Running on PORT',app.get('port'));"
      ]
    },
    "sourceType": "module",
    "mtime": 1610570482399
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst morgan = require('morgan');\n\nconst cors = require('cors');\n\nrequire('log-timestamp');\n\nconst app = express(); // Variables \n\napp.set('port', process.env.PORT || 4250);\napp.use(cors());\napp.use(morgan('dev'));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: true\n}));\napp.use('/api/projects', require('./routes/projects.routes'));\napp.use('/api/projects_catalog', require('./routes/projects_catalog.routes')); //\n\napp.use('/api/contractors', require('./routes/contractors.routes'));\napp.use('/api/providers', require('./routes/provider.routes'));\napp.use('/api/services', require('./routes/services.routes'));\napp.use('/api/users', require('./routes/users.routes'));\napp.use('/api/messages', require('./routes/whatsapp.routes'));\napp.use('/api/tasks', require('./routes/tasks.routes')); //\n\napp.use('/api/gantt', require('./routes/gantt.routes'));\napp.use('/api/files', require('./routes/files.routes')); //app.use('/api/projects',require('./routes/projects.routes'));\n\napp.use('/', (req, res) => {\n  console.log('Hola');\n});\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIm1vcmdhbiIsImNvcnMiLCJhcHAiLCJzZXQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInVzZSIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJyZXEiLCJyZXMiLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLE1BQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0FBLE9BQU8sQ0FBQyxlQUFELENBQVA7O0FBQ0EsTUFBTUcsR0FBRyxHQUFHSixPQUFPLEVBQW5CLEMsQ0FFQTs7QUFDQUksR0FBRyxDQUFDQyxHQUFKLENBQVEsTUFBUixFQUFnQkMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBcEM7QUFDQUosR0FBRyxDQUFDSyxHQUFKLENBQVFOLElBQUksRUFBWjtBQUNBQyxHQUFHLENBQUNLLEdBQUosQ0FBUVAsTUFBTSxDQUFDLEtBQUQsQ0FBZDtBQUNBRSxHQUFHLENBQUNLLEdBQUosQ0FBUVQsT0FBTyxDQUFDVSxJQUFSLEVBQVI7QUFDQU4sR0FBRyxDQUFDSyxHQUFKLENBQVFULE9BQU8sQ0FBQ1csVUFBUixDQUFtQjtBQUFDQyxFQUFBQSxRQUFRLEVBQUM7QUFBVixDQUFuQixDQUFSO0FBR0FSLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLGVBQVIsRUFBd0JSLE9BQU8sQ0FBQywwQkFBRCxDQUEvQjtBQUNBRyxHQUFHLENBQUNLLEdBQUosQ0FBUSx1QkFBUixFQUFnQ1IsT0FBTyxDQUFDLGtDQUFELENBQXZDLEUsQ0FBNkU7O0FBQzdFRyxHQUFHLENBQUNLLEdBQUosQ0FBUSxrQkFBUixFQUEyQlIsT0FBTyxDQUFDLDZCQUFELENBQWxDO0FBQ0FHLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLGdCQUFSLEVBQXlCUixPQUFPLENBQUMsMEJBQUQsQ0FBaEM7QUFDQUcsR0FBRyxDQUFDSyxHQUFKLENBQVEsZUFBUixFQUF3QlIsT0FBTyxDQUFDLDBCQUFELENBQS9CO0FBQ0FHLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLFlBQVIsRUFBcUJSLE9BQU8sQ0FBQyx1QkFBRCxDQUE1QjtBQUNBRyxHQUFHLENBQUNLLEdBQUosQ0FBUSxlQUFSLEVBQXdCUixPQUFPLENBQUMsMEJBQUQsQ0FBL0I7QUFDQUcsR0FBRyxDQUFDSyxHQUFKLENBQVEsWUFBUixFQUFxQlIsT0FBTyxDQUFDLHVCQUFELENBQTVCLEUsQ0FBdUQ7O0FBQ3ZERyxHQUFHLENBQUNLLEdBQUosQ0FBUSxZQUFSLEVBQXFCUixPQUFPLENBQUMsdUJBQUQsQ0FBNUI7QUFDQUcsR0FBRyxDQUFDSyxHQUFKLENBQVEsWUFBUixFQUFxQlIsT0FBTyxDQUFDLHVCQUFELENBQTVCLEUsQ0FDQTs7QUFHQUcsR0FBRyxDQUFDSyxHQUFKLENBQVEsR0FBUixFQUFhLENBQUNJLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQ3ZCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxNQUFaO0FBQ0gsQ0FGRDtBQUlBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJkLEdBQWpCIiwic291cmNlUm9vdCI6IkY6XFxEb2N1bWVudHNcXEFycUJJRFxcUGxhdGZvcm1cXFZleXJvbl9hcnFCSURfQVBJX015RVJOXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IG1vcmdhbiA9IHJlcXVpcmUoJ21vcmdhbicpO1xyXG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xyXG5yZXF1aXJlKCdsb2ctdGltZXN0YW1wJyk7XHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuXHJcbi8vIFZhcmlhYmxlcyBcclxuYXBwLnNldCgncG9ydCcsIHByb2Nlc3MuZW52LlBPUlQgfHwgNDI1MCk7XHJcbmFwcC51c2UoY29ycygpKTtcclxuYXBwLnVzZShtb3JnYW4oJ2RldicpKTtcclxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcbmFwcC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHtleHRlbmRlZDp0cnVlfSkpO1xyXG5cclxuXHJcbmFwcC51c2UoJy9hcGkvcHJvamVjdHMnLHJlcXVpcmUoJy4vcm91dGVzL3Byb2plY3RzLnJvdXRlcycpKTtcclxuYXBwLnVzZSgnL2FwaS9wcm9qZWN0c19jYXRhbG9nJyxyZXF1aXJlKCcuL3JvdXRlcy9wcm9qZWN0c19jYXRhbG9nLnJvdXRlcycpKTsvL1xyXG5hcHAudXNlKCcvYXBpL2NvbnRyYWN0b3JzJyxyZXF1aXJlKCcuL3JvdXRlcy9jb250cmFjdG9ycy5yb3V0ZXMnKSk7XHJcbmFwcC51c2UoJy9hcGkvcHJvdmlkZXJzJyxyZXF1aXJlKCcuL3JvdXRlcy9wcm92aWRlci5yb3V0ZXMnKSk7XHJcbmFwcC51c2UoJy9hcGkvc2VydmljZXMnLHJlcXVpcmUoJy4vcm91dGVzL3NlcnZpY2VzLnJvdXRlcycpKTtcclxuYXBwLnVzZSgnL2FwaS91c2VycycscmVxdWlyZSgnLi9yb3V0ZXMvdXNlcnMucm91dGVzJykpO1xyXG5hcHAudXNlKCcvYXBpL21lc3NhZ2VzJyxyZXF1aXJlKCcuL3JvdXRlcy93aGF0c2FwcC5yb3V0ZXMnKSk7XHJcbmFwcC51c2UoJy9hcGkvdGFza3MnLHJlcXVpcmUoJy4vcm91dGVzL3Rhc2tzLnJvdXRlcycpKTsvL1xyXG5hcHAudXNlKCcvYXBpL2dhbnR0JyxyZXF1aXJlKCcuL3JvdXRlcy9nYW50dC5yb3V0ZXMnKSk7XHJcbmFwcC51c2UoJy9hcGkvZmlsZXMnLHJlcXVpcmUoJy4vcm91dGVzL2ZpbGVzLnJvdXRlcycpKTtcclxuLy9hcHAudXNlKCcvYXBpL3Byb2plY3RzJyxyZXF1aXJlKCcuL3JvdXRlcy9wcm9qZWN0cy5yb3V0ZXMnKSk7XHJcblxyXG5cclxuYXBwLnVzZSgnLycsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ0hvbGEnKTtcclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGFwcDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "morgan",
        "cors",
        "app",
        "set",
        "process",
        "env",
        "PORT",
        "use",
        "json",
        "urlencoded",
        "extended",
        "req",
        "res",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACAA,OAAO,CAAC,eAAD,CAAP;;AACA,MAAMG,GAAG,GAAGJ,OAAO,EAAnB,C,CAEA;;AACAI,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AACAJ,GAAG,CAACK,GAAJ,CAAQN,IAAI,EAAZ;AACAC,GAAG,CAACK,GAAJ,CAAQP,MAAM,CAAC,KAAD,CAAd;AACAE,GAAG,CAACK,GAAJ,CAAQT,OAAO,CAACU,IAAR,EAAR;AACAN,GAAG,CAACK,GAAJ,CAAQT,OAAO,CAACW,UAAR,CAAmB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAnB,CAAR;AAGAR,GAAG,CAACK,GAAJ,CAAQ,eAAR,EAAwBR,OAAO,CAAC,0BAAD,CAA/B;AACAG,GAAG,CAACK,GAAJ,CAAQ,uBAAR,EAAgCR,OAAO,CAAC,kCAAD,CAAvC,E,CAA6E;;AAC7EG,GAAG,CAACK,GAAJ,CAAQ,kBAAR,EAA2BR,OAAO,CAAC,6BAAD,CAAlC;AACAG,GAAG,CAACK,GAAJ,CAAQ,gBAAR,EAAyBR,OAAO,CAAC,0BAAD,CAAhC;AACAG,GAAG,CAACK,GAAJ,CAAQ,eAAR,EAAwBR,OAAO,CAAC,0BAAD,CAA/B;AACAG,GAAG,CAACK,GAAJ,CAAQ,YAAR,EAAqBR,OAAO,CAAC,uBAAD,CAA5B;AACAG,GAAG,CAACK,GAAJ,CAAQ,eAAR,EAAwBR,OAAO,CAAC,0BAAD,CAA/B;AACAG,GAAG,CAACK,GAAJ,CAAQ,YAAR,EAAqBR,OAAO,CAAC,uBAAD,CAA5B,E,CAAuD;;AACvDG,GAAG,CAACK,GAAJ,CAAQ,YAAR,EAAqBR,OAAO,CAAC,uBAAD,CAA5B;AACAG,GAAG,CAACK,GAAJ,CAAQ,YAAR,EAAqBR,OAAO,CAAC,uBAAD,CAA5B,E,CACA;;AAGAG,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAa,CAACI,GAAD,EAAMC,GAAN,KAAc;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBd,GAAjB",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\",
      "sourcesContent": [
        "const express = require('express');\r\nconst morgan = require('morgan');\r\nconst cors = require('cors');\r\nrequire('log-timestamp');\r\nconst app = express();\r\n\r\n// Variables \r\napp.set('port', process.env.PORT || 4250);\r\napp.use(cors());\r\napp.use(morgan('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({extended:true}));\r\n\r\n\r\napp.use('/api/projects',require('./routes/projects.routes'));\r\napp.use('/api/projects_catalog',require('./routes/projects_catalog.routes'));//\r\napp.use('/api/contractors',require('./routes/contractors.routes'));\r\napp.use('/api/providers',require('./routes/provider.routes'));\r\napp.use('/api/services',require('./routes/services.routes'));\r\napp.use('/api/users',require('./routes/users.routes'));\r\napp.use('/api/messages',require('./routes/whatsapp.routes'));\r\napp.use('/api/tasks',require('./routes/tasks.routes'));//\r\napp.use('/api/gantt',require('./routes/gantt.routes'));\r\napp.use('/api/files',require('./routes/files.routes'));\r\n//app.use('/api/projects',require('./routes/projects.routes'));\r\n\r\n\r\napp.use('/', (req, res) => {\r\n    console.log('Hola');\r\n});\r\n\r\nmodule.exports = app;"
      ]
    },
    "sourceType": "module",
    "mtime": 1614636843923
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\projects.routes.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\projects.routes.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\projects.routes.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\projects.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
        "sourceFileName": "projects.routes.js"
      }
    },
    "ast": null,
    "code": "const {\n  Router\n} = require('express');\n\nconst router = Router();\n\nconst projectCtrl = require('../controller/projects.controller.js'); // List Projects\n\n\nrouter.get('/', projectCtrl.getProjects); // Create a New Project\n\nrouter.post('/', projectCtrl.createProject); // Read Project\n\nrouter.get('/:id', projectCtrl.getProject); // Edit Project\n\nrouter.put('/:id', projectCtrl.editProject); // Delete Project\n\nrouter.delete('/:id', projectCtrl.deleteProject);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJSb3V0ZXIiLCJyZXF1aXJlIiwicm91dGVyIiwicHJvamVjdEN0cmwiLCJnZXQiLCJnZXRQcm9qZWN0cyIsInBvc3QiLCJjcmVhdGVQcm9qZWN0IiwiZ2V0UHJvamVjdCIsInB1dCIsImVkaXRQcm9qZWN0IiwiZGVsZXRlIiwiZGVsZXRlUHJvamVjdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFhQyxPQUFPLENBQUMsU0FBRCxDQUExQjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE1BQU0sRUFBckI7O0FBR0EsTUFBTUcsV0FBVyxHQUFHRixPQUFPLENBQUMsc0NBQUQsQ0FBM0IsQyxDQUVBOzs7QUFDQUMsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQkQsV0FBVyxDQUFDRSxXQUE1QixFLENBRUE7O0FBQ0FILE1BQU0sQ0FBQ0ksSUFBUCxDQUFZLEdBQVosRUFBaUJILFdBQVcsQ0FBQ0ksYUFBN0IsRSxDQUVBOztBQUNBTCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxNQUFYLEVBQW1CRCxXQUFXLENBQUNLLFVBQS9CLEUsQ0FFQTs7QUFDQU4sTUFBTSxDQUFDTyxHQUFQLENBQVcsTUFBWCxFQUFtQk4sV0FBVyxDQUFDTyxXQUEvQixFLENBRUE7O0FBQ0FSLE1BQU0sQ0FBQ1MsTUFBUCxDQUFjLE1BQWQsRUFBc0JSLFdBQVcsQ0FBQ1MsYUFBbEM7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixNQUFqQiIsInNvdXJjZVJvb3QiOiJGOlxcRG9jdW1lbnRzXFxBcnFCSURcXFBsYXRmb3JtXFxWZXlyb25fYXJxQklEX0FQSV9NeUVSTlxcc3JjXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgUm91dGVyIH0gPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuXHJcbmNvbnN0IHByb2plY3RDdHJsID0gcmVxdWlyZSgnLi4vY29udHJvbGxlci9wcm9qZWN0cy5jb250cm9sbGVyLmpzJyk7XHJcblxyXG4vLyBMaXN0IFByb2plY3RzXHJcbnJvdXRlci5nZXQoJy8nLCBwcm9qZWN0Q3RybC5nZXRQcm9qZWN0cyk7XHJcblxyXG4vLyBDcmVhdGUgYSBOZXcgUHJvamVjdFxyXG5yb3V0ZXIucG9zdCgnLycsIHByb2plY3RDdHJsLmNyZWF0ZVByb2plY3QpO1xyXG5cclxuLy8gUmVhZCBQcm9qZWN0XHJcbnJvdXRlci5nZXQoJy86aWQnLCBwcm9qZWN0Q3RybC5nZXRQcm9qZWN0KTtcclxuXHJcbi8vIEVkaXQgUHJvamVjdFxyXG5yb3V0ZXIucHV0KCcvOmlkJywgcHJvamVjdEN0cmwuZWRpdFByb2plY3QpO1xyXG5cclxuLy8gRGVsZXRlIFByb2plY3Rcclxucm91dGVyLmRlbGV0ZSgnLzppZCcsIHByb2plY3RDdHJsLmRlbGV0ZVByb2plY3QpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "projects.routes.js"
      ],
      "names": [
        "Router",
        "require",
        "router",
        "projectCtrl",
        "get",
        "getProjects",
        "post",
        "createProject",
        "getProject",
        "put",
        "editProject",
        "delete",
        "deleteProject",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,SAAD,CAA1B;;AACA,MAAMC,MAAM,GAAGF,MAAM,EAArB;;AAGA,MAAMG,WAAW,GAAGF,OAAO,CAAC,sCAAD,CAA3B,C,CAEA;;;AACAC,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBD,WAAW,CAACE,WAA5B,E,CAEA;;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBH,WAAW,CAACI,aAA7B,E,CAEA;;AACAL,MAAM,CAACE,GAAP,CAAW,MAAX,EAAmBD,WAAW,CAACK,UAA/B,E,CAEA;;AACAN,MAAM,CAACO,GAAP,CAAW,MAAX,EAAmBN,WAAW,CAACO,WAA/B,E,CAEA;;AACAR,MAAM,CAACS,MAAP,CAAc,MAAd,EAAsBR,WAAW,CAACS,aAAlC;AAEAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "sourcesContent": [
        "const { Router } = require('express');\r\nconst router = Router();\r\n\r\n\r\nconst projectCtrl = require('../controller/projects.controller.js');\r\n\r\n// List Projects\r\nrouter.get('/', projectCtrl.getProjects);\r\n\r\n// Create a New Project\r\nrouter.post('/', projectCtrl.createProject);\r\n\r\n// Read Project\r\nrouter.get('/:id', projectCtrl.getProject);\r\n\r\n// Edit Project\r\nrouter.put('/:id', projectCtrl.editProject);\r\n\r\n// Delete Project\r\nrouter.delete('/:id', projectCtrl.deleteProject);\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1610571222690
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\projects.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\projects.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\projects.controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\projects.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
        "sourceFileName": "projects.controller.js"
      }
    },
    "ast": null,
    "code": "const pool = require('../database'); // const { Project } = require('../models/project.model');\n\n\nconst projectCtrl = {};\n\nprojectCtrl.getProjects = async (req, res) => {\n  const projects = await pool.query('SELECT * FROM veyron_arqbid.t_v_projects_active WHERE project_active = true;');\n  res.send(projects);\n  console.log(projects);\n};\n\nprojectCtrl.createProject = async (req, res) => {\n  const {\n    id_project_type,\n    id_project_client,\n    id_project_contractor,\n    project_name,\n    project_registration,\n    project_start,\n    project_end,\n    project_code,\n    project_manager,\n    project_details,\n    project_active,\n    project_status,\n    project_budget,\n    client_name,\n    project_location,\n    advance_payment,\n    contractor_name,\n    project_area,\n    project_type_d\n  } = req.body;\n  const newProject = {\n    id_project: null,\n    id_project_type,\n    id_project_client,\n    id_project_contractor,\n    project_name,\n    project_registration,\n    project_start,\n    project_end,\n    project_code,\n    project_manager,\n    project_details,\n    project_active,\n    project_status,\n    project_budget,\n    client_name,\n    project_location,\n    advance_payment,\n    contractor_name,\n    project_area,\n    project_type_d\n  };\n  await pool.query('INSERT INTO t_projects set ?', [newProject]).then(function (result) {\n    sendResponse(res, \"Project inserted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n  res.send('message: Project Created...'); //console.log(req.body);\n};\n\nprojectCtrl.getProject = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const projects = await pool.query('SELECT * FROM veyron_arqbid.t_v_projects_active WHERE project_active = true AND id_project = ?;', [id]);\n  res.send(projects);\n  console.log(projects);\n};\n\nprojectCtrl.editProject = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const {\n    id_project_type,\n    id_project_client,\n    id_project_contractor,\n    project_name,\n    project_registration,\n    project_start,\n    project_end,\n    project_code,\n    project_manager,\n    project_details,\n    project_active,\n    project_status,\n    project_budget,\n    client_name,\n    project_location,\n    advance_payment,\n    contractor_name,\n    project_area,\n    project_type_d\n  } = req.body;\n  const editedProject = {\n    id_project_type,\n    id_project_client,\n    id_project_contractor,\n    project_name,\n    project_registration,\n    project_start,\n    project_end,\n    project_code,\n    project_manager,\n    project_details,\n    project_active,\n    project_status,\n    project_budget,\n    client_name,\n    project_location,\n    advance_payment,\n    contractor_name,\n    project_area,\n    project_type_d\n  };\n  await pool.query('UPDATE `veyron_arqbid`.`t_projects` SET ? WHERE `id_project` = ?;', [editedProject, id]).then(function (result) {\n    sendResponse(res, \"Project Updated\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nprojectCtrl.deleteProject = async (req, res) => {\n  const {\n    id\n  } = req.params; //DELETE FROM veyron_arqbid.t_projects WHERE id_project = ?;\n\n  await pool.query(\"UPDATE `veyron_arqbid`.`t_projects` SET `project_active` = '0' WHERE `id_project` = ?;\", [id]).then(function (result) {\n    sendResponse(res, \"Project Deleted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nfunction sendResponse(res, action, tid, error) {\n  if (action == \"error\") console.log(error);\n  var result = {\n    action: action\n  };\n  if (tid !== undefined && tid !== null) result.tid = tid;\n  res.send(result);\n}\n\nmodule.exports = projectCtrl;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "projects.controller.js"
      ],
      "names": [
        "pool",
        "require",
        "projectCtrl",
        "getProjects",
        "req",
        "res",
        "projects",
        "query",
        "send",
        "console",
        "log",
        "createProject",
        "id_project_type",
        "id_project_client",
        "id_project_contractor",
        "project_name",
        "project_registration",
        "project_start",
        "project_end",
        "project_code",
        "project_manager",
        "project_details",
        "project_active",
        "project_status",
        "project_budget",
        "client_name",
        "project_location",
        "advance_payment",
        "contractor_name",
        "project_area",
        "project_type_d",
        "body",
        "newProject",
        "id_project",
        "then",
        "result",
        "sendResponse",
        "insertId",
        "catch",
        "error",
        "getProject",
        "id",
        "params",
        "editProject",
        "editedProject",
        "deleteProject",
        "action",
        "tid",
        "undefined",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "sourcesContent": [
        "const pool = require('../database');\r\n// const { Project } = require('../models/project.model');\r\nconst projectCtrl = {}\r\n\r\nprojectCtrl.getProjects = async (req, res) => {\r\n    const projects = await pool.query('SELECT * FROM veyron_arqbid.t_v_projects_active WHERE project_active = true;');\r\n    res.send(projects);\r\n    console.log(projects);\r\n};\r\n\r\nprojectCtrl.createProject = async(req, res) => {\r\n    const {\r\n        id_project_type,\r\n        id_project_client,\r\n        id_project_contractor,\r\n        project_name,\r\n        project_registration,\r\n        project_start,\r\n        project_end,\r\n        project_code,\r\n        project_manager,\r\n        project_details,\r\n        project_active,\r\n        project_status,\r\n        project_budget,\r\n        client_name,\r\n        project_location,\r\n        advance_payment,\r\n        contractor_name,\r\n        project_area,\r\n        project_type_d} = req.body;\r\n    \r\n    const newProject = {                 \r\n        id_project:null,\r\n        id_project_type,\r\n        id_project_client,\r\n        id_project_contractor,\r\n        project_name,\r\n        project_registration,\r\n        project_start,\r\n        project_end,\r\n        project_code,\r\n        project_manager,\r\n        project_details,\r\n        project_active,\r\n        project_status,\r\n        project_budget,\r\n        client_name,\r\n        project_location,\r\n        advance_payment,\r\n        contractor_name,\r\n        project_area,\r\n        project_type_d          \r\n    };\r\n\r\n    await pool.query('INSERT INTO t_projects set ?', [newProject])\r\n    .then (function (result) {\r\n        sendResponse(res, \"Project inserted\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n    \r\n    res.send('message: Project Created...');\r\n    //console.log(req.body);\r\n};\r\n\r\nprojectCtrl.getProject = async (req, res) => {\r\n    const { id } = req.params;\r\n    const projects = await pool.query('SELECT * FROM veyron_arqbid.t_v_projects_active WHERE project_active = true AND id_project = ?;', [id]);\r\n    res.send(projects);\r\n    console.log(projects);\r\n};\r\n\r\nprojectCtrl.editProject = async(req, res) => {\r\n    const { id } = req.params;\r\n\r\n    const {\r\n        id_project_type,\r\n        id_project_client,\r\n        id_project_contractor,\r\n        project_name,\r\n        project_registration,\r\n        project_start,\r\n        project_end,\r\n        project_code,\r\n        project_manager,\r\n        project_details,\r\n        project_active,\r\n        project_status,\r\n        project_budget,\r\n        client_name,\r\n        project_location,\r\n        advance_payment,\r\n        contractor_name,\r\n        project_area,\r\n        project_type_d} = req.body;\r\n    \r\n    const editedProject = {                 \r\n        id_project_type,\r\n        id_project_client,\r\n        id_project_contractor,\r\n        project_name,\r\n        project_registration,\r\n        project_start,\r\n        project_end,\r\n        project_code,\r\n        project_manager,\r\n        project_details,\r\n        project_active,\r\n        project_status,\r\n        project_budget,\r\n        client_name,\r\n        project_location,\r\n        advance_payment,\r\n        contractor_name,\r\n        project_area,\r\n        project_type_d          \r\n    };\r\n\r\n    await pool.query('UPDATE `veyron_arqbid`.`t_projects` SET ? WHERE `id_project` = ?;', [editedProject, id])\r\n    .then (function (result) {\r\n        sendResponse(res, \"Project Updated\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n};\r\n\r\nprojectCtrl.deleteProject = async (req, res) => {\r\n    const { id } = req.params;\r\n    //DELETE FROM veyron_arqbid.t_projects WHERE id_project = ?;\r\n    await pool.query(\"UPDATE `veyron_arqbid`.`t_projects` SET `project_active` = '0' WHERE `id_project` = ?;\", [id]).then (function (result) {\r\n      sendResponse(res, \"Project Deleted\", result.insertId);\r\n    })\r\n    .catch(function(error) {\r\n      sendResponse(res, \"error\", null, error); \r\n    });\r\n};\r\n\r\nfunction sendResponse(res, action, tid, error) {\r\n \r\n    if (action == \"error\")\r\n      console.log(error);\r\n   \r\n    var result = {\r\n      action: action\r\n    };\r\n    if (tid !== undefined && tid !== null)\r\n      result.tid = tid;\r\n   \r\n    res.send(result);\r\n  }\r\n\r\nmodule.exports =  projectCtrl;"
      ]
    },
    "sourceType": "module",
    "mtime": 1614188748657
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\database.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\database.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\database.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "const mysql = require('mysql');\n\nconst {\n  promisify\n} = require('util');\n\nconst {\n  database_remote\n} = require('./keys.js');\n\nconst pool = mysql.createPool(database_remote);\npool.getConnection((err, connection) => {\n  if (err) {\n    switch (err.code) {\n      case 'PROTOCOL_CONNECTION_LOST':\n        console.log('DATABASE CONNECTION WAS CLOSED');\n        break;\n\n      case 'ER_CON_COUNT_ERROR':\n        console.log('DATABASE HAS TO MANY CONNECTIONS');\n        break;\n\n      case 'ECONNREFUSED':\n        console.log('DATABASE CONNECTION WAS REFUSED');\n        break;\n\n      case 'ER_ACCESS_DENIED_ERROR':\n        console.log('DATABASE CONNECTION DENIED');\n        break;\n\n      case 'ER_BAD_DB_ERROR':\n        console.log('DATABASE NOT EXIST.');\n        break;\n\n      case 'ENOTFOUND':\n        console.log('LOCALHOST NOT EXIST.');\n        break;\n\n      case 'ETIMEDOUT':\n        console.log('ETIMEDOUT.');\n        break;\n\n      default:\n        console.log(err.code, err.message);\n    }\n  }\n\n  if (connection) connection.release();\n  console.log('DATABASE [' + database_remote.database + '] is Connected at Host: ' + database_remote.host + ' by User[' + database_remote.user + '].'); //'+ app.get('port') +\n\n  return;\n});\npool.query = promisify(pool.query);\nmodule.exports = pool;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbIm15c3FsIiwicmVxdWlyZSIsInByb21pc2lmeSIsImRhdGFiYXNlX3JlbW90ZSIsInBvb2wiLCJjcmVhdGVQb29sIiwiZ2V0Q29ubmVjdGlvbiIsImVyciIsImNvbm5lY3Rpb24iLCJjb2RlIiwiY29uc29sZSIsImxvZyIsIm1lc3NhZ2UiLCJyZWxlYXNlIiwiZGF0YWJhc2UiLCJob3N0IiwidXNlciIsInF1ZXJ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFJQyxPQUFPLENBQUMsT0FBRCxDQUF0Qjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBZ0JELE9BQU8sQ0FBQyxNQUFELENBQTdCOztBQUVBLE1BQU07QUFBQ0UsRUFBQUE7QUFBRCxJQUFvQkYsT0FBTyxDQUFDLFdBQUQsQ0FBakM7O0FBRUEsTUFBTUcsSUFBSSxHQUFHSixLQUFLLENBQUNLLFVBQU4sQ0FBaUJGLGVBQWpCLENBQWI7QUFFQUMsSUFBSSxDQUFDRSxhQUFMLENBQW1CLENBQUNDLEdBQUQsRUFBTUMsVUFBTixLQUFxQjtBQUNwQyxNQUFJRCxHQUFKLEVBQVE7QUFDSixZQUFRQSxHQUFHLENBQUNFLElBQVo7QUFDSSxXQUFLLDBCQUFMO0FBQ0lDLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdDQUFaO0FBQ0E7O0FBQ0osV0FBSyxvQkFBTDtBQUNJRCxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxrQ0FBWjtBQUNBOztBQUNKLFdBQUssY0FBTDtBQUNJRCxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQ0FBWjtBQUNBOztBQUNKLFdBQUssd0JBQUw7QUFDSUQsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksNEJBQVo7QUFDQTs7QUFDSixXQUFLLGlCQUFMO0FBQ0lELFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFCQUFaO0FBQ0E7O0FBQ0osV0FBSyxXQUFMO0FBQ0lELFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNCQUFaO0FBQ0E7O0FBQ0osV0FBSyxXQUFMO0FBQ0lELFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVo7QUFDQTs7QUFDSjtBQUNJRCxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUosR0FBRyxDQUFDRSxJQUFoQixFQUFxQkYsR0FBRyxDQUFDSyxPQUF6QjtBQXZCUjtBQXlCSDs7QUFDRCxNQUFJSixVQUFKLEVBQWdCQSxVQUFVLENBQUNLLE9BQVg7QUFDaEJILEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGVBQWNSLGVBQWUsQ0FBQ1csUUFBOUIsR0FBd0MsMEJBQXhDLEdBQW9FWCxlQUFlLENBQUNZLElBQXBGLEdBQXlGLFdBQXpGLEdBQXNHWixlQUFlLENBQUNhLElBQXRILEdBQTRILElBQXhJLEVBN0JvQyxDQTZCMkc7O0FBQy9JO0FBQ0gsQ0EvQkQ7QUFpQ0FaLElBQUksQ0FBQ2EsS0FBTCxHQUFhZixTQUFTLENBQUNFLElBQUksQ0FBQ2EsS0FBTixDQUF0QjtBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJmLElBQWpCIiwic291cmNlUm9vdCI6IkY6XFxEb2N1bWVudHNcXEFycUJJRFxcUGxhdGZvcm1cXFZleXJvbl9hcnFCSURfQVBJX015RVJOXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG15c3FsID0gIHJlcXVpcmUoJ215c3FsJyk7XHJcbmNvbnN0IHsgcHJvbWlzaWZ5IH0gPSByZXF1aXJlKCd1dGlsJyk7XHJcblxyXG5jb25zdCB7ZGF0YWJhc2VfcmVtb3RlfSA9IHJlcXVpcmUoJy4va2V5cy5qcycpO1xyXG5cclxuY29uc3QgcG9vbCA9IG15c3FsLmNyZWF0ZVBvb2woZGF0YWJhc2VfcmVtb3RlKTtcclxuXHJcbnBvb2wuZ2V0Q29ubmVjdGlvbigoZXJyLCBjb25uZWN0aW9uKSA9PiB7XHJcbiAgICBpZiAoZXJyKXtcclxuICAgICAgICBzd2l0Y2ggKGVyci5jb2RlKXtcclxuICAgICAgICAgICAgY2FzZSAnUFJPVE9DT0xfQ09OTkVDVElPTl9MT1NUJzpcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdEQVRBQkFTRSBDT05ORUNUSU9OIFdBUyBDTE9TRUQnKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdFUl9DT05fQ09VTlRfRVJST1InOlxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0RBVEFCQVNFIEhBUyBUTyBNQU5ZIENPTk5FQ1RJT05TJyk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAnRUNPTk5SRUZVU0VEJzpcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdEQVRBQkFTRSBDT05ORUNUSU9OIFdBUyBSRUZVU0VEJyk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAnRVJfQUNDRVNTX0RFTklFRF9FUlJPUic6XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnREFUQUJBU0UgQ09OTkVDVElPTiBERU5JRUQnKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdFUl9CQURfREJfRVJST1InOlxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0RBVEFCQVNFIE5PVCBFWElTVC4nKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlICdFTk9URk9VTkQnOlxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0xPQ0FMSE9TVCBOT1QgRVhJU1QuJyk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAnRVRJTUVET1VUJzogICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnRVRJTUVET1VULicpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIuY29kZSxlcnIubWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKGNvbm5lY3Rpb24pIGNvbm5lY3Rpb24ucmVsZWFzZSgpO1xyXG4gICAgY29uc29sZS5sb2coJ0RBVEFCQVNFIFsnKyBkYXRhYmFzZV9yZW1vdGUuZGF0YWJhc2UgKyddIGlzIENvbm5lY3RlZCBhdCBIb3N0OiAnKyBkYXRhYmFzZV9yZW1vdGUuaG9zdCsnIGJ5IFVzZXJbJysgZGF0YWJhc2VfcmVtb3RlLnVzZXIgKyddLicpOyAvLycrIGFwcC5nZXQoJ3BvcnQnKSArXHJcbiAgICByZXR1cm47XHJcbn0pO1xyXG5cclxucG9vbC5xdWVyeSA9IHByb21pc2lmeShwb29sLnF1ZXJ5KVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBwb29sOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "mysql",
        "require",
        "promisify",
        "database_remote",
        "pool",
        "createPool",
        "getConnection",
        "err",
        "connection",
        "code",
        "console",
        "log",
        "message",
        "release",
        "database",
        "host",
        "user",
        "query",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,KAAK,GAAIC,OAAO,CAAC,OAAD,CAAtB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAgBD,OAAO,CAAC,MAAD,CAA7B;;AAEA,MAAM;AAACE,EAAAA;AAAD,IAAoBF,OAAO,CAAC,WAAD,CAAjC;;AAEA,MAAMG,IAAI,GAAGJ,KAAK,CAACK,UAAN,CAAiBF,eAAjB,CAAb;AAEAC,IAAI,CAACE,aAAL,CAAmB,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACpC,MAAID,GAAJ,EAAQ;AACJ,YAAQA,GAAG,CAACE,IAAZ;AACI,WAAK,0BAAL;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA;;AACJ,WAAK,oBAAL;AACID,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACA;;AACJ,WAAK,cAAL;AACID,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA;;AACJ,WAAK,wBAAL;AACID,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA;;AACJ,WAAK,iBAAL;AACID,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA;;AACJ,WAAK,WAAL;AACID,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA;;AACJ,WAAK,WAAL;AACID,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA;;AACJ;AACID,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,IAAhB,EAAqBF,GAAG,CAACK,OAAzB;AAvBR;AAyBH;;AACD,MAAIJ,UAAJ,EAAgBA,UAAU,CAACK,OAAX;AAChBH,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAcR,eAAe,CAACW,QAA9B,GAAwC,0BAAxC,GAAoEX,eAAe,CAACY,IAApF,GAAyF,WAAzF,GAAsGZ,eAAe,CAACa,IAAtH,GAA4H,IAAxI,EA7BoC,CA6B2G;;AAC/I;AACH,CA/BD;AAiCAZ,IAAI,CAACa,KAAL,GAAaf,SAAS,CAACE,IAAI,CAACa,KAAN,CAAtB;AAEAC,MAAM,CAACC,OAAP,GAAiBf,IAAjB",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\",
      "sourcesContent": [
        "const mysql =  require('mysql');\r\nconst { promisify } = require('util');\r\n\r\nconst {database_remote} = require('./keys.js');\r\n\r\nconst pool = mysql.createPool(database_remote);\r\n\r\npool.getConnection((err, connection) => {\r\n    if (err){\r\n        switch (err.code){\r\n            case 'PROTOCOL_CONNECTION_LOST':\r\n                console.log('DATABASE CONNECTION WAS CLOSED');\r\n                break;\r\n            case 'ER_CON_COUNT_ERROR':\r\n                console.log('DATABASE HAS TO MANY CONNECTIONS');\r\n                break;\r\n            case 'ECONNREFUSED':\r\n                console.log('DATABASE CONNECTION WAS REFUSED');\r\n                break;\r\n            case 'ER_ACCESS_DENIED_ERROR':\r\n                console.log('DATABASE CONNECTION DENIED');\r\n                break;\r\n            case 'ER_BAD_DB_ERROR':\r\n                console.log('DATABASE NOT EXIST.');\r\n                break;\r\n            case 'ENOTFOUND':\r\n                console.log('LOCALHOST NOT EXIST.');\r\n                break;\r\n            case 'ETIMEDOUT':                \r\n                console.log('ETIMEDOUT.');\r\n                break;\r\n            default:\r\n                console.log(err.code,err.message);\r\n        }\r\n    }\r\n    if (connection) connection.release();\r\n    console.log('DATABASE ['+ database_remote.database +'] is Connected at Host: '+ database_remote.host+' by User['+ database_remote.user +'].'); //'+ app.get('port') +\r\n    return;\r\n});\r\n\r\npool.query = promisify(pool.query)\r\n\r\nmodule.exports = pool;"
      ]
    },
    "sourceType": "module",
    "mtime": 1611811586041
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\keys.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\keys.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\keys.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\keys.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\",
        "sourceFileName": "keys.js"
      }
    },
    "ast": null,
    "code": "module.exports = {\n  database_remote: {\n    host: '38.17.53.108',\n    // 'localhost',\n    user: 'remote',\n    // root',\n    password: 'BsSH2BAnetAs5nV',\n    //'password',\n    database: 'veyron_arqbid',\n    port: 17536\n  },\n  database_remote1: {\n    host: 'localhost',\n    user: 'root',\n    password: 'password',\n    database: 'veyron_arqbid',\n    port: 3306\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtleXMuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImRhdGFiYXNlX3JlbW90ZSIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsInBvcnQiLCJkYXRhYmFzZV9yZW1vdGUxIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLGVBQWUsRUFBRztBQUNkQyxJQUFBQSxJQUFJLEVBQUUsY0FEUTtBQUNRO0FBQ3RCQyxJQUFBQSxJQUFJLEVBQUMsUUFGUztBQUVDO0FBQ2ZDLElBQUFBLFFBQVEsRUFBQyxpQkFISztBQUdjO0FBQzVCQyxJQUFBQSxRQUFRLEVBQUUsZUFKSTtBQUtkQyxJQUFBQSxJQUFJLEVBQUM7QUFMUyxHQURMO0FBUWJDLEVBQUFBLGdCQUFnQixFQUFHO0FBQ2ZMLElBQUFBLElBQUksRUFBRSxXQURTO0FBRWZDLElBQUFBLElBQUksRUFBQyxNQUZVO0FBR2ZDLElBQUFBLFFBQVEsRUFBQyxVQUhNO0FBSWZDLElBQUFBLFFBQVEsRUFBRSxlQUpLO0FBS2ZDLElBQUFBLElBQUksRUFBQztBQUxVO0FBUk4sQ0FBakIiLCJzb3VyY2VSb290IjoiRjpcXERvY3VtZW50c1xcQXJxQklEXFxQbGF0Zm9ybVxcVmV5cm9uX2FycUJJRF9BUElfTXlFUk5cXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBkYXRhYmFzZV9yZW1vdGUgOiB7XHJcbiAgICAgICAgaG9zdDogJzM4LjE3LjUzLjEwOCcsIC8vICdsb2NhbGhvc3QnLFxyXG4gICAgICAgIHVzZXI6J3JlbW90ZScsIC8vIHJvb3QnLFxyXG4gICAgICAgIHBhc3N3b3JkOidCc1NIMkJBbmV0QXM1blYnLCAvLydwYXNzd29yZCcsXHJcbiAgICAgICAgZGF0YWJhc2U6ICd2ZXlyb25fYXJxYmlkJywgXHJcbiAgICAgICAgcG9ydDoxNzUzNlxyXG4gICAgfSxcclxuICAgIGRhdGFiYXNlX3JlbW90ZTEgOiB7XHJcbiAgICAgICAgaG9zdDogJ2xvY2FsaG9zdCcsXHJcbiAgICAgICAgdXNlcjoncm9vdCcsXHJcbiAgICAgICAgcGFzc3dvcmQ6J3Bhc3N3b3JkJyxcclxuICAgICAgICBkYXRhYmFzZTogJ3ZleXJvbl9hcnFiaWQnLCBcclxuICAgICAgICBwb3J0OjMzMDZcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "keys.js"
      ],
      "names": [
        "module",
        "exports",
        "database_remote",
        "host",
        "user",
        "password",
        "database",
        "port",
        "database_remote1"
      ],
      "mappings": "AAAAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,eAAe,EAAG;AACdC,IAAAA,IAAI,EAAE,cADQ;AACQ;AACtBC,IAAAA,IAAI,EAAC,QAFS;AAEC;AACfC,IAAAA,QAAQ,EAAC,iBAHK;AAGc;AAC5BC,IAAAA,QAAQ,EAAE,eAJI;AAKdC,IAAAA,IAAI,EAAC;AALS,GADL;AAQbC,EAAAA,gBAAgB,EAAG;AACfL,IAAAA,IAAI,EAAE,WADS;AAEfC,IAAAA,IAAI,EAAC,MAFU;AAGfC,IAAAA,QAAQ,EAAC,UAHM;AAIfC,IAAAA,QAAQ,EAAE,eAJK;AAKfC,IAAAA,IAAI,EAAC;AALU;AARN,CAAjB",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\",
      "sourcesContent": [
        "module.exports = {\r\n    database_remote : {\r\n        host: '38.17.53.108', // 'localhost',\r\n        user:'remote', // root',\r\n        password:'BsSH2BAnetAs5nV', //'password',\r\n        database: 'veyron_arqbid', \r\n        port:17536\r\n    },\r\n    database_remote1 : {\r\n        host: 'localhost',\r\n        user:'root',\r\n        password:'password',\r\n        database: 'veyron_arqbid', \r\n        port:3306\r\n    }\r\n    \r\n    \r\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1612405079324
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\projects_catalog.routes.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\projects_catalog.routes.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\projects_catalog.routes.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\projects_catalog.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
        "sourceFileName": "projects_catalog.routes.js"
      }
    },
    "ast": null,
    "code": "const {\n  Router\n} = require('express');\n\nconst router = Router();\n\nconst project_CatCtrl = require('../controller/projects_catalog.controller.js'); // List Projects\n\n\nrouter.get('/', project_CatCtrl.getProjects); // Create a New Project\n\nrouter.post('/', project_CatCtrl.createProject); // Read Project\n\nrouter.get('/:id', project_CatCtrl.getProject); // Edit Project\n\nrouter.put('/:id', project_CatCtrl.editProject); // Delete Project\n\nrouter.delete('/:id', project_CatCtrl.deleteProject);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzX2NhdGFsb2cucm91dGVzLmpzIl0sIm5hbWVzIjpbIlJvdXRlciIsInJlcXVpcmUiLCJyb3V0ZXIiLCJwcm9qZWN0X0NhdEN0cmwiLCJnZXQiLCJnZXRQcm9qZWN0cyIsInBvc3QiLCJjcmVhdGVQcm9qZWN0IiwiZ2V0UHJvamVjdCIsInB1dCIsImVkaXRQcm9qZWN0IiwiZGVsZXRlIiwiZGVsZXRlUHJvamVjdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFhQyxPQUFPLENBQUMsU0FBRCxDQUExQjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE1BQU0sRUFBckI7O0FBR0EsTUFBTUcsZUFBZSxHQUFHRixPQUFPLENBQUMsOENBQUQsQ0FBL0IsQyxDQUVBOzs7QUFDQUMsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQkQsZUFBZSxDQUFDRSxXQUFoQyxFLENBRUE7O0FBQ0FILE1BQU0sQ0FBQ0ksSUFBUCxDQUFZLEdBQVosRUFBaUJILGVBQWUsQ0FBQ0ksYUFBakMsRSxDQUVBOztBQUNBTCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxNQUFYLEVBQW1CRCxlQUFlLENBQUNLLFVBQW5DLEUsQ0FFQTs7QUFDQU4sTUFBTSxDQUFDTyxHQUFQLENBQVcsTUFBWCxFQUFtQk4sZUFBZSxDQUFDTyxXQUFuQyxFLENBRUE7O0FBQ0FSLE1BQU0sQ0FBQ1MsTUFBUCxDQUFjLE1BQWQsRUFBc0JSLGVBQWUsQ0FBQ1MsYUFBdEM7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixNQUFqQiIsInNvdXJjZVJvb3QiOiJGOlxcRG9jdW1lbnRzXFxBcnFCSURcXFBsYXRmb3JtXFxWZXlyb25fYXJxQklEX0FQSV9NeUVSTlxcc3JjXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgUm91dGVyIH0gPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuXHJcbmNvbnN0IHByb2plY3RfQ2F0Q3RybCA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXIvcHJvamVjdHNfY2F0YWxvZy5jb250cm9sbGVyLmpzJyk7XHJcblxyXG4vLyBMaXN0IFByb2plY3RzXHJcbnJvdXRlci5nZXQoJy8nLCBwcm9qZWN0X0NhdEN0cmwuZ2V0UHJvamVjdHMpO1xyXG5cclxuLy8gQ3JlYXRlIGEgTmV3IFByb2plY3Rcclxucm91dGVyLnBvc3QoJy8nLCBwcm9qZWN0X0NhdEN0cmwuY3JlYXRlUHJvamVjdCk7XHJcblxyXG4vLyBSZWFkIFByb2plY3Rcclxucm91dGVyLmdldCgnLzppZCcsIHByb2plY3RfQ2F0Q3RybC5nZXRQcm9qZWN0KTtcclxuXHJcbi8vIEVkaXQgUHJvamVjdFxyXG5yb3V0ZXIucHV0KCcvOmlkJywgcHJvamVjdF9DYXRDdHJsLmVkaXRQcm9qZWN0KTtcclxuXHJcbi8vIERlbGV0ZSBQcm9qZWN0XHJcbnJvdXRlci5kZWxldGUoJy86aWQnLCBwcm9qZWN0X0NhdEN0cmwuZGVsZXRlUHJvamVjdCk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "projects_catalog.routes.js"
      ],
      "names": [
        "Router",
        "require",
        "router",
        "project_CatCtrl",
        "get",
        "getProjects",
        "post",
        "createProject",
        "getProject",
        "put",
        "editProject",
        "delete",
        "deleteProject",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,SAAD,CAA1B;;AACA,MAAMC,MAAM,GAAGF,MAAM,EAArB;;AAGA,MAAMG,eAAe,GAAGF,OAAO,CAAC,8CAAD,CAA/B,C,CAEA;;;AACAC,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBD,eAAe,CAACE,WAAhC,E,CAEA;;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBH,eAAe,CAACI,aAAjC,E,CAEA;;AACAL,MAAM,CAACE,GAAP,CAAW,MAAX,EAAmBD,eAAe,CAACK,UAAnC,E,CAEA;;AACAN,MAAM,CAACO,GAAP,CAAW,MAAX,EAAmBN,eAAe,CAACO,WAAnC,E,CAEA;;AACAR,MAAM,CAACS,MAAP,CAAc,MAAd,EAAsBR,eAAe,CAACS,aAAtC;AAEAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "sourcesContent": [
        "const { Router } = require('express');\r\nconst router = Router();\r\n\r\n\r\nconst project_CatCtrl = require('../controller/projects_catalog.controller.js');\r\n\r\n// List Projects\r\nrouter.get('/', project_CatCtrl.getProjects);\r\n\r\n// Create a New Project\r\nrouter.post('/', project_CatCtrl.createProject);\r\n\r\n// Read Project\r\nrouter.get('/:id', project_CatCtrl.getProject);\r\n\r\n// Edit Project\r\nrouter.put('/:id', project_CatCtrl.editProject);\r\n\r\n// Delete Project\r\nrouter.delete('/:id', project_CatCtrl.deleteProject);\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1611252860096
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\projects_catalog.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\projects_catalog.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\projects_catalog.controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\projects_catalog.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
        "sourceFileName": "projects_catalog.controller.js"
      }
    },
    "ast": null,
    "code": "const pool = require('../database');\n\nconst project_CatCtrl = {};\n\nproject_CatCtrl.getProjects = async (req, res) => {\n  const projects = await pool.query('SELECT * FROM veyron_arqbid.t_v_projects_type WHERE projects_status = true;');\n  res.send(projects);\n  console.log(projects);\n};\n\nproject_CatCtrl.createProject = async (req, res) => {\n  const {\n    id_project_type,\n    project_name,\n    project_registration,\n    project_duration,\n    project_code,\n    project_manager,\n    project_details,\n    projects_status,\n    project_type\n  } = req.body;\n  const newProject = {\n    id_project_type: null,\n    project_name,\n    project_registration,\n    project_duration,\n    project_code,\n    project_manager,\n    project_details,\n    projects_status,\n    project_type\n  };\n  await pool.query('INSERT INTO t_projects_types set ?', [newProject]).then(function (result) {\n    sendResponse(res, \"Project inserted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n  res.send('message: Project Created...'); //console.log(req.body);\n};\n\nproject_CatCtrl.getProject = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const projects = await pool.query('SELECT * FROM veyron_arqbid.t_v_projects_type WHERE projects_status = true AND id_project_type = ?;', [id]);\n  res.send(projects);\n  console.log(projects);\n};\n\nproject_CatCtrl.editProject = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const {\n    //id_project_type,\n    project_name,\n    project_registration,\n    project_duration,\n    project_code,\n    project_manager,\n    project_details,\n    projects_status,\n    project_type\n  } = req.body;\n  const editedProject = {\n    id_project_type: null,\n    project_name,\n    project_registration,\n    project_duration,\n    project_code,\n    project_manager,\n    project_details,\n    projects_status,\n    project_type\n  };\n  await pool.query('UPDATE `veyron_arqbid`.`t_projects_types` SET ? WHERE `id_project_type` = ?;', [editedProject, id]).then(function (result) {\n    sendResponse(res, \"Project Updated\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nproject_CatCtrl.deleteProject = async (req, res) => {\n  const {\n    id\n  } = req.params; //DELETE FROM veyron_arqbid.t_projects WHERE id_project = ?;\n\n  await pool.query(\"UPDATE`veyron_arqbid`.`t_projects_types` SET `projects_status` = '0' WHERE `id_project_type` = ?;\", [id]).then(function (result) {\n    sendResponse(res, \"Project Deleted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nfunction sendResponse(res, action, tid, error) {\n  if (action == \"error\") console.log(error);\n  var result = {\n    action: action\n  };\n  if (tid !== undefined && tid !== null) result.tid = tid;\n  res.send(result);\n}\n\nmodule.exports = project_CatCtrl;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "projects_catalog.controller.js"
      ],
      "names": [
        "pool",
        "require",
        "project_CatCtrl",
        "getProjects",
        "req",
        "res",
        "projects",
        "query",
        "send",
        "console",
        "log",
        "createProject",
        "id_project_type",
        "project_name",
        "project_registration",
        "project_duration",
        "project_code",
        "project_manager",
        "project_details",
        "projects_status",
        "project_type",
        "body",
        "newProject",
        "then",
        "result",
        "sendResponse",
        "insertId",
        "catch",
        "error",
        "getProject",
        "id",
        "params",
        "editProject",
        "editedProject",
        "deleteProject",
        "action",
        "tid",
        "undefined",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "sourcesContent": [
        "const pool = require('../database');\r\n\r\nconst project_CatCtrl = {}\r\n\r\nproject_CatCtrl.getProjects = async (req, res) => {\r\n    const projects = await pool.query('SELECT * FROM veyron_arqbid.t_v_projects_type WHERE projects_status = true;');\r\n    res.send(projects);\r\n    console.log(projects);\r\n};\r\n\r\nproject_CatCtrl.createProject = async(req, res) => {\r\n    const {\r\n        id_project_type,\r\n        project_name,\r\n        project_registration,\r\n        project_duration,\r\n        project_code,\r\n        project_manager,\r\n        project_details,\r\n        projects_status,\r\n        project_type\r\n    } = req.body;\r\n    \r\n    const newProject = {                 \r\n        id_project_type:null,\r\n        project_name,\r\n        project_registration,\r\n        project_duration,\r\n        project_code,\r\n        project_manager,\r\n        project_details,\r\n        projects_status,\r\n        project_type         \r\n    };\r\n\r\n    await pool.query('INSERT INTO t_projects_types set ?', [newProject])\r\n    .then (function (result) {\r\n        sendResponse(res, \"Project inserted\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n    \r\n    res.send('message: Project Created...');\r\n    //console.log(req.body);\r\n};\r\n\r\nproject_CatCtrl.getProject = async (req, res) => {\r\n    const { id } = req.params;\r\n    const projects = await pool.query('SELECT * FROM veyron_arqbid.t_v_projects_type WHERE projects_status = true AND id_project_type = ?;', [id]);\r\n    res.send(projects);\r\n    console.log(projects);\r\n};\r\n\r\nproject_CatCtrl.editProject = async(req, res) => {\r\n    const { id } = req.params;\r\n\r\n    const {\r\n        //id_project_type,\r\n        project_name,\r\n        project_registration,\r\n        project_duration,\r\n        project_code,\r\n        project_manager,\r\n        project_details,\r\n        projects_status,\r\n        project_type\r\n    } = req.body;\r\n    \r\n    const editedProject = {                 \r\n        id_project_type:null,\r\n        project_name,\r\n        project_registration,\r\n        project_duration,\r\n        project_code,\r\n        project_manager,\r\n        project_details,\r\n        projects_status,\r\n        project_type         \r\n    };\r\n\r\n    await pool.query('UPDATE `veyron_arqbid`.`t_projects_types` SET ? WHERE `id_project_type` = ?;', [editedProject, id])\r\n    .then (function (result) {\r\n        sendResponse(res, \"Project Updated\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n    \r\n    \r\n};\r\n\r\nproject_CatCtrl.deleteProject = async (req, res) => {\r\n    const { id } = req.params;\r\n    //DELETE FROM veyron_arqbid.t_projects WHERE id_project = ?;\r\n    await pool.query(\"UPDATE`veyron_arqbid`.`t_projects_types` SET `projects_status` = '0' WHERE `id_project_type` = ?;\", [id]).then (function (result) {\r\n      sendResponse(res, \"Project Deleted\", result.insertId);\r\n    })\r\n    .catch(function(error) {\r\n      sendResponse(res, \"error\", null, error); \r\n    });\r\n};\r\n\r\n\r\nfunction sendResponse(res, action, tid, error) {\r\n \r\n    if (action == \"error\")\r\n      console.log(error);\r\n   \r\n    var result = {\r\n      action: action\r\n    };\r\n    if (tid !== undefined && tid !== null)\r\n      result.tid = tid;\r\n   \r\n    res.send(result);\r\n  }\r\n\r\nmodule.exports =  project_CatCtrl;"
      ]
    },
    "sourceType": "module",
    "mtime": 1614188727705
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\contractors.routes.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\contractors.routes.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\contractors.routes.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\contractors.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
        "sourceFileName": "contractors.routes.js"
      }
    },
    "ast": null,
    "code": "const {\n  Router\n} = require('express');\n\nconst router = Router();\n\nconst contractorCtrl = require('../controller/contractors.controller.js'); // List Contractors\n\n\nrouter.get('/', contractorCtrl.getContractors); // Create a New Contractor\n\nrouter.post('/', contractorCtrl.createContractor); // Read Contractor\n\nrouter.get('/:id', contractorCtrl.getContractor); // Edit Contractor\n\nrouter.put('/:id', contractorCtrl.editContractor); // Delete Contractor\n\nrouter.delete('/:id', contractorCtrl.deleteContractor);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyYWN0b3JzLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJSb3V0ZXIiLCJyZXF1aXJlIiwicm91dGVyIiwiY29udHJhY3RvckN0cmwiLCJnZXQiLCJnZXRDb250cmFjdG9ycyIsInBvc3QiLCJjcmVhdGVDb250cmFjdG9yIiwiZ2V0Q29udHJhY3RvciIsInB1dCIsImVkaXRDb250cmFjdG9yIiwiZGVsZXRlIiwiZGVsZXRlQ29udHJhY3RvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFhQyxPQUFPLENBQUMsU0FBRCxDQUExQjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE1BQU0sRUFBckI7O0FBR0EsTUFBTUcsY0FBYyxHQUFHRixPQUFPLENBQUMseUNBQUQsQ0FBOUIsQyxDQUVBOzs7QUFDQUMsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQkQsY0FBYyxDQUFDRSxjQUEvQixFLENBRUE7O0FBQ0FILE1BQU0sQ0FBQ0ksSUFBUCxDQUFZLEdBQVosRUFBaUJILGNBQWMsQ0FBQ0ksZ0JBQWhDLEUsQ0FFQTs7QUFDQUwsTUFBTSxDQUFDRSxHQUFQLENBQVcsTUFBWCxFQUFtQkQsY0FBYyxDQUFDSyxhQUFsQyxFLENBRUE7O0FBQ0FOLE1BQU0sQ0FBQ08sR0FBUCxDQUFXLE1BQVgsRUFBbUJOLGNBQWMsQ0FBQ08sY0FBbEMsRSxDQUVBOztBQUNBUixNQUFNLENBQUNTLE1BQVAsQ0FBYyxNQUFkLEVBQXNCUixjQUFjLENBQUNTLGdCQUFyQztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJaLE1BQWpCIiwic291cmNlUm9vdCI6IkY6XFxEb2N1bWVudHNcXEFycUJJRFxcUGxhdGZvcm1cXFZleXJvbl9hcnFCSURfQVBJX015RVJOXFxzcmNcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBSb3V0ZXIgfSA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XHJcblxyXG5cclxuY29uc3QgY29udHJhY3RvckN0cmwgPSByZXF1aXJlKCcuLi9jb250cm9sbGVyL2NvbnRyYWN0b3JzLmNvbnRyb2xsZXIuanMnKTtcclxuXHJcbi8vIExpc3QgQ29udHJhY3RvcnNcclxucm91dGVyLmdldCgnLycsIGNvbnRyYWN0b3JDdHJsLmdldENvbnRyYWN0b3JzKTtcclxuXHJcbi8vIENyZWF0ZSBhIE5ldyBDb250cmFjdG9yXHJcbnJvdXRlci5wb3N0KCcvJywgY29udHJhY3RvckN0cmwuY3JlYXRlQ29udHJhY3Rvcik7XHJcblxyXG4vLyBSZWFkIENvbnRyYWN0b3Jcclxucm91dGVyLmdldCgnLzppZCcsIGNvbnRyYWN0b3JDdHJsLmdldENvbnRyYWN0b3IpO1xyXG5cclxuLy8gRWRpdCBDb250cmFjdG9yXHJcbnJvdXRlci5wdXQoJy86aWQnLCBjb250cmFjdG9yQ3RybC5lZGl0Q29udHJhY3Rvcik7XHJcblxyXG4vLyBEZWxldGUgQ29udHJhY3RvclxyXG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgY29udHJhY3RvckN0cmwuZGVsZXRlQ29udHJhY3Rvcik7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "contractors.routes.js"
      ],
      "names": [
        "Router",
        "require",
        "router",
        "contractorCtrl",
        "get",
        "getContractors",
        "post",
        "createContractor",
        "getContractor",
        "put",
        "editContractor",
        "delete",
        "deleteContractor",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,SAAD,CAA1B;;AACA,MAAMC,MAAM,GAAGF,MAAM,EAArB;;AAGA,MAAMG,cAAc,GAAGF,OAAO,CAAC,yCAAD,CAA9B,C,CAEA;;;AACAC,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBD,cAAc,CAACE,cAA/B,E,CAEA;;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBH,cAAc,CAACI,gBAAhC,E,CAEA;;AACAL,MAAM,CAACE,GAAP,CAAW,MAAX,EAAmBD,cAAc,CAACK,aAAlC,E,CAEA;;AACAN,MAAM,CAACO,GAAP,CAAW,MAAX,EAAmBN,cAAc,CAACO,cAAlC,E,CAEA;;AACAR,MAAM,CAACS,MAAP,CAAc,MAAd,EAAsBR,cAAc,CAACS,gBAArC;AAEAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "sourcesContent": [
        "const { Router } = require('express');\r\nconst router = Router();\r\n\r\n\r\nconst contractorCtrl = require('../controller/contractors.controller.js');\r\n\r\n// List Contractors\r\nrouter.get('/', contractorCtrl.getContractors);\r\n\r\n// Create a New Contractor\r\nrouter.post('/', contractorCtrl.createContractor);\r\n\r\n// Read Contractor\r\nrouter.get('/:id', contractorCtrl.getContractor);\r\n\r\n// Edit Contractor\r\nrouter.put('/:id', contractorCtrl.editContractor);\r\n\r\n// Delete Contractor\r\nrouter.delete('/:id', contractorCtrl.deleteContractor);\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1612985297458
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\services.routes.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\services.routes.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\services.routes.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\services.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
        "sourceFileName": "services.routes.js"
      }
    },
    "ast": null,
    "code": "const {\n  Router\n} = require('express');\n\nconst router = Router();\n\nconst serviceCtrl = require('../controller/services.controller.js'); // List Services\n\n\nrouter.get('/', serviceCtrl.getServices); // Create a New Service\n\nrouter.post('/', serviceCtrl.createService); // Read Service\n\nrouter.get('/:id', serviceCtrl.getService); // Edit Service\n\nrouter.put('/:id', serviceCtrl.editService); // Delete Service\n\nrouter.delete('/:id', serviceCtrl.deleteService);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJSb3V0ZXIiLCJyZXF1aXJlIiwicm91dGVyIiwic2VydmljZUN0cmwiLCJnZXQiLCJnZXRTZXJ2aWNlcyIsInBvc3QiLCJjcmVhdGVTZXJ2aWNlIiwiZ2V0U2VydmljZSIsInB1dCIsImVkaXRTZXJ2aWNlIiwiZGVsZXRlIiwiZGVsZXRlU2VydmljZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFhQyxPQUFPLENBQUMsU0FBRCxDQUExQjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE1BQU0sRUFBckI7O0FBR0EsTUFBTUcsV0FBVyxHQUFHRixPQUFPLENBQUMsc0NBQUQsQ0FBM0IsQyxDQUVBOzs7QUFDQUMsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQkQsV0FBVyxDQUFDRSxXQUE1QixFLENBRUE7O0FBQ0FILE1BQU0sQ0FBQ0ksSUFBUCxDQUFZLEdBQVosRUFBaUJILFdBQVcsQ0FBQ0ksYUFBN0IsRSxDQUVBOztBQUNBTCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxNQUFYLEVBQW1CRCxXQUFXLENBQUNLLFVBQS9CLEUsQ0FFQTs7QUFDQU4sTUFBTSxDQUFDTyxHQUFQLENBQVcsTUFBWCxFQUFtQk4sV0FBVyxDQUFDTyxXQUEvQixFLENBRUE7O0FBQ0FSLE1BQU0sQ0FBQ1MsTUFBUCxDQUFjLE1BQWQsRUFBc0JSLFdBQVcsQ0FBQ1MsYUFBbEM7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixNQUFqQiIsInNvdXJjZVJvb3QiOiJGOlxcRG9jdW1lbnRzXFxBcnFCSURcXFBsYXRmb3JtXFxWZXlyb25fYXJxQklEX0FQSV9NeUVSTlxcc3JjXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgUm91dGVyIH0gPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuXHJcbmNvbnN0IHNlcnZpY2VDdHJsID0gcmVxdWlyZSgnLi4vY29udHJvbGxlci9zZXJ2aWNlcy5jb250cm9sbGVyLmpzJyk7XHJcblxyXG4vLyBMaXN0IFNlcnZpY2VzXHJcbnJvdXRlci5nZXQoJy8nLCBzZXJ2aWNlQ3RybC5nZXRTZXJ2aWNlcyk7XHJcblxyXG4vLyBDcmVhdGUgYSBOZXcgU2VydmljZVxyXG5yb3V0ZXIucG9zdCgnLycsIHNlcnZpY2VDdHJsLmNyZWF0ZVNlcnZpY2UpO1xyXG5cclxuLy8gUmVhZCBTZXJ2aWNlXHJcbnJvdXRlci5nZXQoJy86aWQnLCBzZXJ2aWNlQ3RybC5nZXRTZXJ2aWNlKTtcclxuXHJcbi8vIEVkaXQgU2VydmljZVxyXG5yb3V0ZXIucHV0KCcvOmlkJywgc2VydmljZUN0cmwuZWRpdFNlcnZpY2UpO1xyXG5cclxuLy8gRGVsZXRlIFNlcnZpY2Vcclxucm91dGVyLmRlbGV0ZSgnLzppZCcsIHNlcnZpY2VDdHJsLmRlbGV0ZVNlcnZpY2UpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "services.routes.js"
      ],
      "names": [
        "Router",
        "require",
        "router",
        "serviceCtrl",
        "get",
        "getServices",
        "post",
        "createService",
        "getService",
        "put",
        "editService",
        "delete",
        "deleteService",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,SAAD,CAA1B;;AACA,MAAMC,MAAM,GAAGF,MAAM,EAArB;;AAGA,MAAMG,WAAW,GAAGF,OAAO,CAAC,sCAAD,CAA3B,C,CAEA;;;AACAC,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBD,WAAW,CAACE,WAA5B,E,CAEA;;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBH,WAAW,CAACI,aAA7B,E,CAEA;;AACAL,MAAM,CAACE,GAAP,CAAW,MAAX,EAAmBD,WAAW,CAACK,UAA/B,E,CAEA;;AACAN,MAAM,CAACO,GAAP,CAAW,MAAX,EAAmBN,WAAW,CAACO,WAA/B,E,CAEA;;AACAR,MAAM,CAACS,MAAP,CAAc,MAAd,EAAsBR,WAAW,CAACS,aAAlC;AAEAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "sourcesContent": [
        "const { Router } = require('express');\r\nconst router = Router();\r\n\r\n\r\nconst serviceCtrl = require('../controller/services.controller.js');\r\n\r\n// List Services\r\nrouter.get('/', serviceCtrl.getServices);\r\n\r\n// Create a New Service\r\nrouter.post('/', serviceCtrl.createService);\r\n\r\n// Read Service\r\nrouter.get('/:id', serviceCtrl.getService);\r\n\r\n// Edit Service\r\nrouter.put('/:id', serviceCtrl.editService);\r\n\r\n// Delete Service\r\nrouter.delete('/:id', serviceCtrl.deleteService);\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1611252367243
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\services.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\services.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\services.controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\services.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
        "sourceFileName": "services.controller.js"
      }
    },
    "ast": null,
    "code": "const pool = require('../database');\n\nconst serviceCtrl = {};\n\nserviceCtrl.getServices = async (req, res) => {\n  const Services = await pool.query('SELECT * FROM veyron_arqbid.t_v_services_active WHERE active = true;');\n  res.send(Services);\n  console.log(Services);\n};\n\nserviceCtrl.createService = async (req, res) => {\n  const {\n    id,\n    name,\n    switch_no,\n    img_url,\n    active\n  } = req.body;\n  const newService = {\n    id: null,\n    name,\n    switch_no,\n    img_url,\n    active\n  };\n  await pool.query('INSERT INTO veyron_arqbid.t_services SET ?', [newService]).then(function (result) {\n    sendResponse(res, \"Service inserted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n  res.send('message: Service Created...'); //console.log(req.body);\n};\n\nserviceCtrl.getService = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const Services = await pool.query('SELECT * FROM veyron_arqbid.t_v_services_active WHERE active = true AND id = ?;', [id]);\n  res.send(Services);\n  console.log(Services);\n};\n\nserviceCtrl.editService = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const {\n    name,\n    switch_no,\n    img_url,\n    active\n  } = req.body;\n  const editedService = {\n    name,\n    switch_no,\n    img_url,\n    active\n  };\n  await pool.query('UPDATE veyron_arqbid.t_services SET ? WHERE `id` = ?;', [editedService, id]).then(function (result) {\n    sendResponse(res, \"Service Updated\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nserviceCtrl.deleteService = async (req, res) => {\n  const {\n    id\n  } = req.params; //DELETE FROM veyron_arqbid.t_Services WHERE id_Service = ?;\n\n  await pool.query(\"UPDATE `veyron_arqbid`.`t_Services` SET `Service_active` = '0' WHERE `id_Service` = ?;\", [id]).then(function (result) {\n    sendResponse(res, \"Service Deleted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nfunction sendResponse(res, action, tid, error) {\n  if (action == \"error\") console.log(error);\n  var result = {\n    action: action\n  };\n  if (tid !== undefined && tid !== null) result.tid = tid;\n  res.send(result);\n}\n\nmodule.exports = serviceCtrl;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsicG9vbCIsInJlcXVpcmUiLCJzZXJ2aWNlQ3RybCIsImdldFNlcnZpY2VzIiwicmVxIiwicmVzIiwiU2VydmljZXMiLCJxdWVyeSIsInNlbmQiLCJjb25zb2xlIiwibG9nIiwiY3JlYXRlU2VydmljZSIsImlkIiwibmFtZSIsInN3aXRjaF9ubyIsImltZ191cmwiLCJhY3RpdmUiLCJib2R5IiwibmV3U2VydmljZSIsInRoZW4iLCJyZXN1bHQiLCJzZW5kUmVzcG9uc2UiLCJpbnNlcnRJZCIsImNhdGNoIiwiZXJyb3IiLCJnZXRTZXJ2aWNlIiwicGFyYW1zIiwiZWRpdFNlcnZpY2UiLCJlZGl0ZWRTZXJ2aWNlIiwiZGVsZXRlU2VydmljZSIsImFjdGlvbiIsInRpZCIsInVuZGVmaW5lZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLGFBQUQsQ0FBcEI7O0FBRUEsTUFBTUMsV0FBVyxHQUFHLEVBQXBCOztBQUVBQSxXQUFXLENBQUNDLFdBQVosR0FBMEIsT0FBT0MsR0FBUCxFQUFZQyxHQUFaLEtBQW9CO0FBQzFDLFFBQU1DLFFBQVEsR0FBRyxNQUFNTixJQUFJLENBQUNPLEtBQUwsQ0FBVyxzRUFBWCxDQUF2QjtBQUNBRixFQUFBQSxHQUFHLENBQUNHLElBQUosQ0FBU0YsUUFBVDtBQUNBRyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUosUUFBWjtBQUNILENBSkQ7O0FBTUFKLFdBQVcsQ0FBQ1MsYUFBWixHQUE0QixPQUFNUCxHQUFOLEVBQVdDLEdBQVgsS0FBbUI7QUFDM0MsUUFBTTtBQUNGTyxJQUFBQSxFQURFO0FBRUZDLElBQUFBLElBRkU7QUFHRkMsSUFBQUEsU0FIRTtBQUlGQyxJQUFBQSxPQUpFO0FBS0ZDLElBQUFBO0FBTEUsTUFNRlosR0FBRyxDQUFDYSxJQU5SO0FBUUEsUUFBTUMsVUFBVSxHQUFHO0FBQ2ZOLElBQUFBLEVBQUUsRUFBQyxJQURZO0FBRWZDLElBQUFBLElBRmU7QUFHZkMsSUFBQUEsU0FIZTtBQUlmQyxJQUFBQSxPQUplO0FBS2ZDLElBQUFBO0FBTGUsR0FBbkI7QUFRQSxRQUFNaEIsSUFBSSxDQUFDTyxLQUFMLENBQVcsNENBQVgsRUFBeUQsQ0FBQ1csVUFBRCxDQUF6RCxFQUNMQyxJQURLLENBQ0MsVUFBVUMsTUFBVixFQUFrQjtBQUNyQkMsSUFBQUEsWUFBWSxDQUFDaEIsR0FBRCxFQUFNLGtCQUFOLEVBQTBCZSxNQUFNLENBQUNFLFFBQWpDLENBQVo7QUFDRCxHQUhHLEVBSUhDLEtBSkcsQ0FJRyxVQUFTQyxLQUFULEVBQWdCO0FBQ3JCSCxJQUFBQSxZQUFZLENBQUNoQixHQUFELEVBQU0sT0FBTixFQUFlLElBQWYsRUFBcUJtQixLQUFyQixDQUFaO0FBQ0QsR0FORyxDQUFOO0FBUUFuQixFQUFBQSxHQUFHLENBQUNHLElBQUosQ0FBUyw2QkFBVCxFQXpCMkMsQ0EwQjNDO0FBQ0gsQ0EzQkQ7O0FBNkJBTixXQUFXLENBQUN1QixVQUFaLEdBQXlCLE9BQU9yQixHQUFQLEVBQVlDLEdBQVosS0FBb0I7QUFDekMsUUFBTTtBQUFFTyxJQUFBQTtBQUFGLE1BQVNSLEdBQUcsQ0FBQ3NCLE1BQW5CO0FBQ0EsUUFBTXBCLFFBQVEsR0FBRyxNQUFNTixJQUFJLENBQUNPLEtBQUwsQ0FBVyxpRkFBWCxFQUE4RixDQUFDSyxFQUFELENBQTlGLENBQXZCO0FBQ0FQLEVBQUFBLEdBQUcsQ0FBQ0csSUFBSixDQUFTRixRQUFUO0FBQ0FHLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixRQUFaO0FBQ0gsQ0FMRDs7QUFPQUosV0FBVyxDQUFDeUIsV0FBWixHQUEwQixPQUFNdkIsR0FBTixFQUFXQyxHQUFYLEtBQW1CO0FBQ3pDLFFBQU07QUFBRU8sSUFBQUE7QUFBRixNQUFTUixHQUFHLENBQUNzQixNQUFuQjtBQUVBLFFBQU07QUFDRmIsSUFBQUEsSUFERTtBQUVGQyxJQUFBQSxTQUZFO0FBR0ZDLElBQUFBLE9BSEU7QUFJRkMsSUFBQUE7QUFKRSxNQUtGWixHQUFHLENBQUNhLElBTFI7QUFPQSxRQUFNVyxhQUFhLEdBQUc7QUFDbEJmLElBQUFBLElBRGtCO0FBRWxCQyxJQUFBQSxTQUZrQjtBQUdsQkMsSUFBQUEsT0FIa0I7QUFJbEJDLElBQUFBO0FBSmtCLEdBQXRCO0FBT0EsUUFBTWhCLElBQUksQ0FBQ08sS0FBTCxDQUFXLHVEQUFYLEVBQW9FLENBQUNxQixhQUFELEVBQWdCaEIsRUFBaEIsQ0FBcEUsRUFDTE8sSUFESyxDQUNDLFVBQVVDLE1BQVYsRUFBa0I7QUFDckJDLElBQUFBLFlBQVksQ0FBQ2hCLEdBQUQsRUFBTSxpQkFBTixFQUF5QmUsTUFBTSxDQUFDRSxRQUFoQyxDQUFaO0FBQ0QsR0FIRyxFQUlIQyxLQUpHLENBSUcsVUFBU0MsS0FBVCxFQUFnQjtBQUNyQkgsSUFBQUEsWUFBWSxDQUFDaEIsR0FBRCxFQUFNLE9BQU4sRUFBZSxJQUFmLEVBQXFCbUIsS0FBckIsQ0FBWjtBQUNELEdBTkcsQ0FBTjtBQU9ILENBeEJEOztBQTBCQXRCLFdBQVcsQ0FBQzJCLGFBQVosR0FBNEIsT0FBT3pCLEdBQVAsRUFBWUMsR0FBWixLQUFvQjtBQUM1QyxRQUFNO0FBQUVPLElBQUFBO0FBQUYsTUFBU1IsR0FBRyxDQUFDc0IsTUFBbkIsQ0FENEMsQ0FFNUM7O0FBQ0EsUUFBTTFCLElBQUksQ0FBQ08sS0FBTCxDQUFXLHdGQUFYLEVBQXFHLENBQUNLLEVBQUQsQ0FBckcsRUFBMkdPLElBQTNHLENBQWlILFVBQVVDLE1BQVYsRUFBa0I7QUFDdklDLElBQUFBLFlBQVksQ0FBQ2hCLEdBQUQsRUFBTSxpQkFBTixFQUF5QmUsTUFBTSxDQUFDRSxRQUFoQyxDQUFaO0FBQ0QsR0FGSyxFQUdMQyxLQUhLLENBR0MsVUFBU0MsS0FBVCxFQUFnQjtBQUNyQkgsSUFBQUEsWUFBWSxDQUFDaEIsR0FBRCxFQUFNLE9BQU4sRUFBZSxJQUFmLEVBQXFCbUIsS0FBckIsQ0FBWjtBQUNELEdBTEssQ0FBTjtBQU1ILENBVEQ7O0FBV0EsU0FBU0gsWUFBVCxDQUFzQmhCLEdBQXRCLEVBQTJCeUIsTUFBM0IsRUFBbUNDLEdBQW5DLEVBQXdDUCxLQUF4QyxFQUErQztBQUUzQyxNQUFJTSxNQUFNLElBQUksT0FBZCxFQUNFckIsT0FBTyxDQUFDQyxHQUFSLENBQVljLEtBQVo7QUFFRixNQUFJSixNQUFNLEdBQUc7QUFDWFUsSUFBQUEsTUFBTSxFQUFFQTtBQURHLEdBQWI7QUFHQSxNQUFJQyxHQUFHLEtBQUtDLFNBQVIsSUFBcUJELEdBQUcsS0FBSyxJQUFqQyxFQUNFWCxNQUFNLENBQUNXLEdBQVAsR0FBYUEsR0FBYjtBQUVGMUIsRUFBQUEsR0FBRyxDQUFDRyxJQUFKLENBQVNZLE1BQVQ7QUFDRDs7QUFFSGEsTUFBTSxDQUFDQyxPQUFQLEdBQWtCaEMsV0FBbEIiLCJzb3VyY2VSb290IjoiRjpcXERvY3VtZW50c1xcQXJxQklEXFxQbGF0Zm9ybVxcVmV5cm9uX2FycUJJRF9BUElfTXlFUk5cXHNyY1xcY29udHJvbGxlclxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcG9vbCA9IHJlcXVpcmUoJy4uL2RhdGFiYXNlJyk7XHJcblxyXG5jb25zdCBzZXJ2aWNlQ3RybCA9IHt9XHJcblxyXG5zZXJ2aWNlQ3RybC5nZXRTZXJ2aWNlcyA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc3QgU2VydmljZXMgPSBhd2FpdCBwb29sLnF1ZXJ5KCdTRUxFQ1QgKiBGUk9NIHZleXJvbl9hcnFiaWQudF92X3NlcnZpY2VzX2FjdGl2ZSBXSEVSRSBhY3RpdmUgPSB0cnVlOycpO1xyXG4gICAgcmVzLnNlbmQoU2VydmljZXMpO1xyXG4gICAgY29uc29sZS5sb2coU2VydmljZXMpO1xyXG59O1xyXG5cclxuc2VydmljZUN0cmwuY3JlYXRlU2VydmljZSA9IGFzeW5jKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjb25zdCB7XHJcbiAgICAgICAgaWQsXHJcbiAgICAgICAgbmFtZSxcclxuICAgICAgICBzd2l0Y2hfbm8sXHJcbiAgICAgICAgaW1nX3VybCxcclxuICAgICAgICBhY3RpdmVcclxuICAgIH0gPSByZXEuYm9keTtcclxuICAgIFxyXG4gICAgY29uc3QgbmV3U2VydmljZSA9IHsgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgIGlkOm51bGwsXHJcbiAgICAgICAgbmFtZSxcclxuICAgICAgICBzd2l0Y2hfbm8sXHJcbiAgICAgICAgaW1nX3VybCxcclxuICAgICAgICBhY3RpdmUgICAgICAgICAgXHJcbiAgICB9O1xyXG5cclxuICAgIGF3YWl0IHBvb2wucXVlcnkoJ0lOU0VSVCBJTlRPIHZleXJvbl9hcnFiaWQudF9zZXJ2aWNlcyBTRVQgPycsIFtuZXdTZXJ2aWNlXSlcclxuICAgIC50aGVuIChmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgc2VuZFJlc3BvbnNlKHJlcywgXCJTZXJ2aWNlIGluc2VydGVkXCIsIHJlc3VsdC5pbnNlcnRJZCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xyXG4gICAgICAgIHNlbmRSZXNwb25zZShyZXMsIFwiZXJyb3JcIiwgbnVsbCwgZXJyb3IpOyBcclxuICAgICAgfSk7XHJcbiAgICBcclxuICAgIHJlcy5zZW5kKCdtZXNzYWdlOiBTZXJ2aWNlIENyZWF0ZWQuLi4nKTtcclxuICAgIC8vY29uc29sZS5sb2cocmVxLmJvZHkpO1xyXG59O1xyXG5cclxuc2VydmljZUN0cmwuZ2V0U2VydmljZSA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcclxuICAgIGNvbnN0IFNlcnZpY2VzID0gYXdhaXQgcG9vbC5xdWVyeSgnU0VMRUNUICogRlJPTSB2ZXlyb25fYXJxYmlkLnRfdl9zZXJ2aWNlc19hY3RpdmUgV0hFUkUgYWN0aXZlID0gdHJ1ZSBBTkQgaWQgPSA/OycsIFtpZF0pO1xyXG4gICAgcmVzLnNlbmQoU2VydmljZXMpO1xyXG4gICAgY29uc29sZS5sb2coU2VydmljZXMpO1xyXG59O1xyXG5cclxuc2VydmljZUN0cmwuZWRpdFNlcnZpY2UgPSBhc3luYyhyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcclxuXHJcbiAgICBjb25zdCB7XHJcbiAgICAgICAgbmFtZSxcclxuICAgICAgICBzd2l0Y2hfbm8sXHJcbiAgICAgICAgaW1nX3VybCxcclxuICAgICAgICBhY3RpdmVcclxuICAgIH0gPSByZXEuYm9keTtcclxuICAgIFxyXG4gICAgY29uc3QgZWRpdGVkU2VydmljZSA9IHsgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgIG5hbWUsXHJcbiAgICAgICAgc3dpdGNoX25vLFxyXG4gICAgICAgIGltZ191cmwsXHJcbiAgICAgICAgYWN0aXZlICAgICAgICAgIFxyXG4gICAgfTtcclxuXHJcbiAgICBhd2FpdCBwb29sLnF1ZXJ5KCdVUERBVEUgdmV5cm9uX2FycWJpZC50X3NlcnZpY2VzIFNFVCA/IFdIRVJFIGBpZGAgPSA/OycsIFtlZGl0ZWRTZXJ2aWNlLCBpZF0pXHJcbiAgICAudGhlbiAoZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgIHNlbmRSZXNwb25zZShyZXMsIFwiU2VydmljZSBVcGRhdGVkXCIsIHJlc3VsdC5pbnNlcnRJZCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xyXG4gICAgICAgIHNlbmRSZXNwb25zZShyZXMsIFwiZXJyb3JcIiwgbnVsbCwgZXJyb3IpOyBcclxuICAgICAgfSk7XHJcbn07XHJcblxyXG5zZXJ2aWNlQ3RybC5kZWxldGVTZXJ2aWNlID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xyXG4gICAgLy9ERUxFVEUgRlJPTSB2ZXlyb25fYXJxYmlkLnRfU2VydmljZXMgV0hFUkUgaWRfU2VydmljZSA9ID87XHJcbiAgICBhd2FpdCBwb29sLnF1ZXJ5KFwiVVBEQVRFIGB2ZXlyb25fYXJxYmlkYC5gdF9TZXJ2aWNlc2AgU0VUIGBTZXJ2aWNlX2FjdGl2ZWAgPSAnMCcgV0hFUkUgYGlkX1NlcnZpY2VgID0gPztcIiwgW2lkXSkudGhlbiAoZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICBzZW5kUmVzcG9uc2UocmVzLCBcIlNlcnZpY2UgRGVsZXRlZFwiLCByZXN1bHQuaW5zZXJ0SWQpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xyXG4gICAgICBzZW5kUmVzcG9uc2UocmVzLCBcImVycm9yXCIsIG51bGwsIGVycm9yKTsgXHJcbiAgICB9KTtcclxufTtcclxuXHJcbmZ1bmN0aW9uIHNlbmRSZXNwb25zZShyZXMsIGFjdGlvbiwgdGlkLCBlcnJvcikge1xyXG4gXHJcbiAgICBpZiAoYWN0aW9uID09IFwiZXJyb3JcIilcclxuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICBcclxuICAgIHZhciByZXN1bHQgPSB7XHJcbiAgICAgIGFjdGlvbjogYWN0aW9uXHJcbiAgICB9O1xyXG4gICAgaWYgKHRpZCAhPT0gdW5kZWZpbmVkICYmIHRpZCAhPT0gbnVsbClcclxuICAgICAgcmVzdWx0LnRpZCA9IHRpZDtcclxuICAgXHJcbiAgICByZXMuc2VuZChyZXN1bHQpO1xyXG4gIH1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gIHNlcnZpY2VDdHJsOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "services.controller.js"
      ],
      "names": [
        "pool",
        "require",
        "serviceCtrl",
        "getServices",
        "req",
        "res",
        "Services",
        "query",
        "send",
        "console",
        "log",
        "createService",
        "id",
        "name",
        "switch_no",
        "img_url",
        "active",
        "body",
        "newService",
        "then",
        "result",
        "sendResponse",
        "insertId",
        "catch",
        "error",
        "getService",
        "params",
        "editService",
        "editedService",
        "deleteService",
        "action",
        "tid",
        "undefined",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "sourcesContent": [
        "const pool = require('../database');\r\n\r\nconst serviceCtrl = {}\r\n\r\nserviceCtrl.getServices = async (req, res) => {\r\n    const Services = await pool.query('SELECT * FROM veyron_arqbid.t_v_services_active WHERE active = true;');\r\n    res.send(Services);\r\n    console.log(Services);\r\n};\r\n\r\nserviceCtrl.createService = async(req, res) => {\r\n    const {\r\n        id,\r\n        name,\r\n        switch_no,\r\n        img_url,\r\n        active\r\n    } = req.body;\r\n    \r\n    const newService = {                 \r\n        id:null,\r\n        name,\r\n        switch_no,\r\n        img_url,\r\n        active          \r\n    };\r\n\r\n    await pool.query('INSERT INTO veyron_arqbid.t_services SET ?', [newService])\r\n    .then (function (result) {\r\n        sendResponse(res, \"Service inserted\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n    \r\n    res.send('message: Service Created...');\r\n    //console.log(req.body);\r\n};\r\n\r\nserviceCtrl.getService = async (req, res) => {\r\n    const { id } = req.params;\r\n    const Services = await pool.query('SELECT * FROM veyron_arqbid.t_v_services_active WHERE active = true AND id = ?;', [id]);\r\n    res.send(Services);\r\n    console.log(Services);\r\n};\r\n\r\nserviceCtrl.editService = async(req, res) => {\r\n    const { id } = req.params;\r\n\r\n    const {\r\n        name,\r\n        switch_no,\r\n        img_url,\r\n        active\r\n    } = req.body;\r\n    \r\n    const editedService = {                 \r\n        name,\r\n        switch_no,\r\n        img_url,\r\n        active          \r\n    };\r\n\r\n    await pool.query('UPDATE veyron_arqbid.t_services SET ? WHERE `id` = ?;', [editedService, id])\r\n    .then (function (result) {\r\n        sendResponse(res, \"Service Updated\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n};\r\n\r\nserviceCtrl.deleteService = async (req, res) => {\r\n    const { id } = req.params;\r\n    //DELETE FROM veyron_arqbid.t_Services WHERE id_Service = ?;\r\n    await pool.query(\"UPDATE `veyron_arqbid`.`t_Services` SET `Service_active` = '0' WHERE `id_Service` = ?;\", [id]).then (function (result) {\r\n      sendResponse(res, \"Service Deleted\", result.insertId);\r\n    })\r\n    .catch(function(error) {\r\n      sendResponse(res, \"error\", null, error); \r\n    });\r\n};\r\n\r\nfunction sendResponse(res, action, tid, error) {\r\n \r\n    if (action == \"error\")\r\n      console.log(error);\r\n   \r\n    var result = {\r\n      action: action\r\n    };\r\n    if (tid !== undefined && tid !== null)\r\n      result.tid = tid;\r\n   \r\n    res.send(result);\r\n  }\r\n\r\nmodule.exports =  serviceCtrl;"
      ]
    },
    "sourceType": "module",
    "mtime": 1614188789749
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\users.routes.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\users.routes.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\users.routes.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\users.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
        "sourceFileName": "users.routes.js"
      }
    },
    "ast": null,
    "code": "const {\n  Router\n} = require('express');\n\nconst router = Router();\n\nconst userCtrl = require('../controller/users.controller.js'); // List Users\n\n\nrouter.get('/', userCtrl.getUsers); // Create a New User\n\nrouter.post('/', userCtrl.createUser); // Read User\n\nrouter.get('/:id', userCtrl.getUser); // Edit User\n\nrouter.put('/:id', userCtrl.editUser); // Delete User\n\nrouter.delete('/:id', userCtrl.deleteUser);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJSb3V0ZXIiLCJyZXF1aXJlIiwicm91dGVyIiwidXNlckN0cmwiLCJnZXQiLCJnZXRVc2VycyIsInBvc3QiLCJjcmVhdGVVc2VyIiwiZ2V0VXNlciIsInB1dCIsImVkaXRVc2VyIiwiZGVsZXRlIiwiZGVsZXRlVXNlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFhQyxPQUFPLENBQUMsU0FBRCxDQUExQjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE1BQU0sRUFBckI7O0FBR0EsTUFBTUcsUUFBUSxHQUFHRixPQUFPLENBQUMsbUNBQUQsQ0FBeEIsQyxDQUVBOzs7QUFDQUMsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQkQsUUFBUSxDQUFDRSxRQUF6QixFLENBRUE7O0FBQ0FILE1BQU0sQ0FBQ0ksSUFBUCxDQUFZLEdBQVosRUFBaUJILFFBQVEsQ0FBQ0ksVUFBMUIsRSxDQUVBOztBQUNBTCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxNQUFYLEVBQW1CRCxRQUFRLENBQUNLLE9BQTVCLEUsQ0FFQTs7QUFDQU4sTUFBTSxDQUFDTyxHQUFQLENBQVcsTUFBWCxFQUFtQk4sUUFBUSxDQUFDTyxRQUE1QixFLENBRUE7O0FBQ0FSLE1BQU0sQ0FBQ1MsTUFBUCxDQUFjLE1BQWQsRUFBc0JSLFFBQVEsQ0FBQ1MsVUFBL0I7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixNQUFqQiIsInNvdXJjZVJvb3QiOiJGOlxcRG9jdW1lbnRzXFxBcnFCSURcXFBsYXRmb3JtXFxWZXlyb25fYXJxQklEX0FQSV9NeUVSTlxcc3JjXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgUm91dGVyIH0gPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuXHJcbmNvbnN0IHVzZXJDdHJsID0gcmVxdWlyZSgnLi4vY29udHJvbGxlci91c2Vycy5jb250cm9sbGVyLmpzJyk7XHJcblxyXG4vLyBMaXN0IFVzZXJzXHJcbnJvdXRlci5nZXQoJy8nLCB1c2VyQ3RybC5nZXRVc2Vycyk7XHJcblxyXG4vLyBDcmVhdGUgYSBOZXcgVXNlclxyXG5yb3V0ZXIucG9zdCgnLycsIHVzZXJDdHJsLmNyZWF0ZVVzZXIpO1xyXG5cclxuLy8gUmVhZCBVc2VyXHJcbnJvdXRlci5nZXQoJy86aWQnLCB1c2VyQ3RybC5nZXRVc2VyKTtcclxuXHJcbi8vIEVkaXQgVXNlclxyXG5yb3V0ZXIucHV0KCcvOmlkJywgdXNlckN0cmwuZWRpdFVzZXIpO1xyXG5cclxuLy8gRGVsZXRlIFVzZXJcclxucm91dGVyLmRlbGV0ZSgnLzppZCcsIHVzZXJDdHJsLmRlbGV0ZVVzZXIpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "users.routes.js"
      ],
      "names": [
        "Router",
        "require",
        "router",
        "userCtrl",
        "get",
        "getUsers",
        "post",
        "createUser",
        "getUser",
        "put",
        "editUser",
        "delete",
        "deleteUser",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,SAAD,CAA1B;;AACA,MAAMC,MAAM,GAAGF,MAAM,EAArB;;AAGA,MAAMG,QAAQ,GAAGF,OAAO,CAAC,mCAAD,CAAxB,C,CAEA;;;AACAC,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBD,QAAQ,CAACE,QAAzB,E,CAEA;;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBH,QAAQ,CAACI,UAA1B,E,CAEA;;AACAL,MAAM,CAACE,GAAP,CAAW,MAAX,EAAmBD,QAAQ,CAACK,OAA5B,E,CAEA;;AACAN,MAAM,CAACO,GAAP,CAAW,MAAX,EAAmBN,QAAQ,CAACO,QAA5B,E,CAEA;;AACAR,MAAM,CAACS,MAAP,CAAc,MAAd,EAAsBR,QAAQ,CAACS,UAA/B;AAEAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "sourcesContent": [
        "const { Router } = require('express');\r\nconst router = Router();\r\n\r\n\r\nconst userCtrl = require('../controller/users.controller.js');\r\n\r\n// List Users\r\nrouter.get('/', userCtrl.getUsers);\r\n\r\n// Create a New User\r\nrouter.post('/', userCtrl.createUser);\r\n\r\n// Read User\r\nrouter.get('/:id', userCtrl.getUser);\r\n\r\n// Edit User\r\nrouter.put('/:id', userCtrl.editUser);\r\n\r\n// Delete User\r\nrouter.delete('/:id', userCtrl.deleteUser);\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1611691189830
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\users.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\users.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\users.controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\users.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
        "sourceFileName": "users.controller.js"
      }
    },
    "ast": null,
    "code": "const pool = require('../database');\n\nconst productCtrl = {};\n\nproductCtrl.getUsers = async (req, res) => {\n  const Users = await pool.query('SELECT * FROM veyron_arqbid.t_v_Users_active WHERE User_active = true;');\n  res.send(Users);\n  console.log(Users);\n};\n\nproductCtrl.createUser = async (req, res) => {\n  const {\n    id_User_type,\n    id_User_client,\n    id_User_contractor,\n    User_name,\n    User_registration,\n    User_start,\n    User_end,\n    User_code,\n    User_manager,\n    User_details,\n    User_active,\n    User_status,\n    User_budget,\n    client_name,\n    User_location,\n    advance_payment,\n    contractor_name,\n    User_area,\n    User_type_d\n  } = req.body;\n  const newUser = {\n    id_User: null,\n    id_User_type,\n    id_User_client,\n    id_User_contractor,\n    User_name,\n    User_registration,\n    User_start,\n    User_end,\n    User_code,\n    User_manager,\n    User_details,\n    User_active,\n    User_status,\n    User_budget,\n    client_name,\n    User_location,\n    advance_payment,\n    contractor_name,\n    User_area,\n    User_type_d\n  };\n  await pool.query('INSERT INTO t_Users set ?', [newUser]).then(function (result) {\n    sendResponse(res, \"User inserted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n  res.send('message: User Created...'); //console.log(req.body);\n};\n\nproductCtrl.getUser = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const Users = await pool.query('SELECT * FROM veyron_arqbid.t_v_Users_active WHERE User_active = true AND id_User = ?;', [id]);\n  res.send(Users);\n  console.log(Users);\n};\n\nproductCtrl.editUser = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const {\n    id_User_type,\n    id_User_client,\n    id_User_contractor,\n    User_name,\n    User_registration,\n    User_start,\n    User_end,\n    User_code,\n    User_manager,\n    User_details,\n    User_active,\n    User_status,\n    User_budget,\n    client_name,\n    User_location,\n    advance_payment,\n    contractor_name,\n    User_area,\n    User_type_d\n  } = req.body;\n  const editedUser = {\n    id_User_type,\n    id_User_client,\n    id_User_contractor,\n    User_name,\n    User_registration,\n    User_start,\n    User_end,\n    User_code,\n    User_manager,\n    User_details,\n    User_active,\n    User_status,\n    User_budget,\n    client_name,\n    User_location,\n    advance_payment,\n    contractor_name,\n    User_area,\n    User_type_d\n  };\n  await pool.query('UPDATE `veyron_arqbid`.`t_Users` SET ? WHERE `id_User` = ?;', [editedUser, id]).then(function (result) {\n    sendResponse(res, \"User Updated\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nproductCtrl.deleteUser = async (req, res) => {\n  const {\n    id\n  } = req.params; //DELETE FROM veyron_arqbid.t_Users WHERE id_User = ?;\n\n  await pool.query(\"UPDATE `veyron_arqbid`.`t_Users` SET `User_active` = '0' WHERE `id_User` = ?;\", [id]).then(function (result) {\n    sendResponse(res, \"Use,mr Deleted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nfunction sendResponse(res, action, tid, error) {\n  if (action == \"error\") console.log(error);\n  var result = {\n    action: action\n  };\n  if (tid !== undefined && tid !== null) result.tid = tid;\n  res.send(result);\n}\n\nmodule.exports = productCtrl;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users.controller.js"
      ],
      "names": [
        "pool",
        "require",
        "productCtrl",
        "getUsers",
        "req",
        "res",
        "Users",
        "query",
        "send",
        "console",
        "log",
        "createUser",
        "id_User_type",
        "id_User_client",
        "id_User_contractor",
        "User_name",
        "User_registration",
        "User_start",
        "User_end",
        "User_code",
        "User_manager",
        "User_details",
        "User_active",
        "User_status",
        "User_budget",
        "client_name",
        "User_location",
        "advance_payment",
        "contractor_name",
        "User_area",
        "User_type_d",
        "body",
        "newUser",
        "id_User",
        "then",
        "result",
        "sendResponse",
        "insertId",
        "catch",
        "error",
        "getUser",
        "id",
        "params",
        "editUser",
        "editedUser",
        "deleteUser",
        "action",
        "tid",
        "undefined",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "sourcesContent": [
        "const pool = require('../database');\r\n\r\nconst productCtrl = {}\r\n\r\nproductCtrl.getUsers = async (req, res) => {\r\n    const Users = await pool.query('SELECT * FROM veyron_arqbid.t_v_Users_active WHERE User_active = true;');\r\n    res.send(Users);\r\n    console.log(Users);\r\n};\r\n\r\nproductCtrl.createUser = async(req, res) => {\r\n    const {\r\n        id_User_type,\r\n        id_User_client,\r\n        id_User_contractor,\r\n        User_name,\r\n        User_registration,\r\n        User_start,\r\n        User_end,\r\n        User_code,\r\n        User_manager,\r\n        User_details,\r\n        User_active,\r\n        User_status,\r\n        User_budget,\r\n        client_name,\r\n        User_location,\r\n        advance_payment,\r\n        contractor_name,\r\n        User_area,\r\n        User_type_d} = req.body;\r\n    \r\n    const newUser = {                 \r\n        id_User:null,\r\n        id_User_type,\r\n        id_User_client,\r\n        id_User_contractor,\r\n        User_name,\r\n        User_registration,\r\n        User_start,\r\n        User_end,\r\n        User_code,\r\n        User_manager,\r\n        User_details,\r\n        User_active,\r\n        User_status,\r\n        User_budget,\r\n        client_name,\r\n        User_location,\r\n        advance_payment,\r\n        contractor_name,\r\n        User_area,\r\n        User_type_d          \r\n    };\r\n\r\n    await pool.query('INSERT INTO t_Users set ?', [newUser])\r\n    .then (function (result) {\r\n        sendResponse(res, \"User inserted\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n    \r\n    res.send('message: User Created...');\r\n    //console.log(req.body);\r\n};\r\n\r\nproductCtrl.getUser = async (req, res) => {\r\n    const { id } = req.params;\r\n    const Users = await pool.query('SELECT * FROM veyron_arqbid.t_v_Users_active WHERE User_active = true AND id_User = ?;', [id]);\r\n    res.send(Users);\r\n    console.log(Users);\r\n};\r\n\r\nproductCtrl.editUser = async(req, res) => {\r\n    const { id } = req.params;\r\n\r\n    const {\r\n        id_User_type,\r\n        id_User_client,\r\n        id_User_contractor,\r\n        User_name,\r\n        User_registration,\r\n        User_start,\r\n        User_end,\r\n        User_code,\r\n        User_manager,\r\n        User_details,\r\n        User_active,\r\n        User_status,\r\n        User_budget,\r\n        client_name,\r\n        User_location,\r\n        advance_payment,\r\n        contractor_name,\r\n        User_area,\r\n        User_type_d} = req.body;\r\n    \r\n    const editedUser = {                 \r\n        id_User_type,\r\n        id_User_client,\r\n        id_User_contractor,\r\n        User_name,\r\n        User_registration,\r\n        User_start,\r\n        User_end,\r\n        User_code,\r\n        User_manager,\r\n        User_details,\r\n        User_active,\r\n        User_status,\r\n        User_budget,\r\n        client_name,\r\n        User_location,\r\n        advance_payment,\r\n        contractor_name,\r\n        User_area,\r\n        User_type_d          \r\n    };\r\n\r\n    await pool.query('UPDATE `veyron_arqbid`.`t_Users` SET ? WHERE `id_User` = ?;', [editedUser, id])\r\n    .then (function (result) {\r\n        sendResponse(res, \"User Updated\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n};\r\n\r\nproductCtrl.deleteUser = async (req, res) => {\r\n    const { id } = req.params;\r\n    //DELETE FROM veyron_arqbid.t_Users WHERE id_User = ?;\r\n    await pool.query(\"UPDATE `veyron_arqbid`.`t_Users` SET `User_active` = '0' WHERE `id_User` = ?;\", [id]).then (function (result) {\r\n      sendResponse(res, \"Use,mr Deleted\", result.insertId);\r\n    })\r\n    .catch(function(error) {\r\n      sendResponse(res, \"error\", null, error); \r\n    });\r\n};\r\n\r\nfunction sendResponse(res, action, tid, error) {\r\n \r\n    if (action == \"error\")\r\n      console.log(error);\r\n   \r\n    var result = {\r\n      action: action\r\n    };\r\n    if (tid !== undefined && tid !== null)\r\n      result.tid = tid;\r\n   \r\n    res.send(result);\r\n  }\r\n\r\nmodule.exports =  productCtrl;"
      ]
    },
    "sourceType": "module",
    "mtime": 1614390921792
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\whatsapp.routes.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\whatsapp.routes.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\whatsapp.routes.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\whatsapp.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
        "sourceFileName": "whatsapp.routes.js"
      }
    },
    "ast": null,
    "code": "const {\n  Router\n} = require('express');\n\nconst router = Router();\n\nconst messageCtrl = require('../controller/messages.controller.js'); // List Services\n//router.get('/', messageCtrl.getServices);\n// Create a New Message\n\n\nrouter.post('/', messageCtrl.createService); // Read Service\n//router.get('/:id', messageCtrl.getService);\n// Edit Service\n//router.put('/:id', messageCtrl.editService);\n// Delete Service\n//router.delete('/:id', messageCtrl.deleteService);\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndoYXRzYXBwLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJSb3V0ZXIiLCJyZXF1aXJlIiwicm91dGVyIiwibWVzc2FnZUN0cmwiLCJwb3N0IiwiY3JlYXRlU2VydmljZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFhQyxPQUFPLENBQUMsU0FBRCxDQUExQjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE1BQU0sRUFBckI7O0FBR0EsTUFBTUcsV0FBVyxHQUFHRixPQUFPLENBQUMsc0NBQUQsQ0FBM0IsQyxDQUVBO0FBQ0E7QUFFQTs7O0FBQ0FDLE1BQU0sQ0FBQ0UsSUFBUCxDQUFZLEdBQVosRUFBaUJELFdBQVcsQ0FBQ0UsYUFBN0IsRSxDQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCTCxNQUFqQiIsInNvdXJjZVJvb3QiOiJGOlxcRG9jdW1lbnRzXFxBcnFCSURcXFBsYXRmb3JtXFxWZXlyb25fYXJxQklEX0FQSV9NeUVSTlxcc3JjXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgUm91dGVyIH0gPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuXHJcbmNvbnN0IG1lc3NhZ2VDdHJsID0gcmVxdWlyZSgnLi4vY29udHJvbGxlci9tZXNzYWdlcy5jb250cm9sbGVyLmpzJyk7XHJcblxyXG4vLyBMaXN0IFNlcnZpY2VzXHJcbi8vcm91dGVyLmdldCgnLycsIG1lc3NhZ2VDdHJsLmdldFNlcnZpY2VzKTtcclxuXHJcbi8vIENyZWF0ZSBhIE5ldyBNZXNzYWdlXHJcbnJvdXRlci5wb3N0KCcvJywgbWVzc2FnZUN0cmwuY3JlYXRlU2VydmljZSk7XHJcblxyXG4vLyBSZWFkIFNlcnZpY2VcclxuLy9yb3V0ZXIuZ2V0KCcvOmlkJywgbWVzc2FnZUN0cmwuZ2V0U2VydmljZSk7XHJcblxyXG4vLyBFZGl0IFNlcnZpY2VcclxuLy9yb3V0ZXIucHV0KCcvOmlkJywgbWVzc2FnZUN0cmwuZWRpdFNlcnZpY2UpO1xyXG5cclxuLy8gRGVsZXRlIFNlcnZpY2VcclxuLy9yb3V0ZXIuZGVsZXRlKCcvOmlkJywgbWVzc2FnZUN0cmwuZGVsZXRlU2VydmljZSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "whatsapp.routes.js"
      ],
      "names": [
        "Router",
        "require",
        "router",
        "messageCtrl",
        "post",
        "createService",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,SAAD,CAA1B;;AACA,MAAMC,MAAM,GAAGF,MAAM,EAArB;;AAGA,MAAMG,WAAW,GAAGF,OAAO,CAAC,sCAAD,CAA3B,C,CAEA;AACA;AAEA;;;AACAC,MAAM,CAACE,IAAP,CAAY,GAAZ,EAAiBD,WAAW,CAACE,aAA7B,E,CAEA;AACA;AAEA;AACA;AAEA;AACA;;AAEAC,MAAM,CAACC,OAAP,GAAiBL,MAAjB",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "sourcesContent": [
        "const { Router } = require('express');\r\nconst router = Router();\r\n\r\n\r\nconst messageCtrl = require('../controller/messages.controller.js');\r\n\r\n// List Services\r\n//router.get('/', messageCtrl.getServices);\r\n\r\n// Create a New Message\r\nrouter.post('/', messageCtrl.createService);\r\n\r\n// Read Service\r\n//router.get('/:id', messageCtrl.getService);\r\n\r\n// Edit Service\r\n//router.put('/:id', messageCtrl.editService);\r\n\r\n// Delete Service\r\n//router.delete('/:id', messageCtrl.deleteService);\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1611279106209
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\messages.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\messages.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\messages.controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\messages.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
        "sourceFileName": "messages.controller.js"
      }
    },
    "ast": null,
    "code": "const {\n  app\n} = require('../app');\n\nconst pool = require('../database');\n\nvar twilio = require('twilio');\n\nconst nodemailer = require(\"nodemailer\");\n\nconst messageCtrl = {};\n\nmessageCtrl.createService = async (req, res) => {\n  //await pool.query('INSERT INTO t_Services set ?', [newService]);\n  const {\n    message_body,\n    message_to\n  } = req.body; //console.log(req.body);   \n\n  const accountSid = 'ACfa17fbc2f5b2772e86089ab7f3a3486f'; // app.get('TWILIO_ACCOUNT_SID') \n\n  const authToken = '705bda56c883f71b95c11ba1d1499666'; // app.get('TWILIO_AUTH_TOKEN')\n\n  const client = require('twilio')(accountSid, authToken);\n\n  client.messages.create({\n    body: message_body,\n    from: 'whatsapp:+14155238886',\n    to: 'whatsapp:' + message_to\n  }).then(message => res.send(message.sid + '\\n' + message_body)).done(console.log(\"Mensaje Enviado: (\" + message_to + ')\\n' + message_body + '\\n'));\n};\n\nmessageCtrl.createEmail = async (req, res) => {\n  const {\n    email_from,\n    email_to,\n    email_subject,\n    email_text,\n    email__body\n  } = req.body; // Generate test SMTP service account from ethereal.email\n  // Only needed if you don't have a real mail account for testing\n\n  let testAccount = await nodemailer.createTestAccount(); // create reusable transporter object using the default SMTP transport\n\n  let transporter = nodemailer.createTransport({\n    host: \"smtp.ethereal.email\",\n    port: 587,\n    secure: false,\n    // true for 465, false for other ports\n    auth: {\n      user: testAccount.user,\n      // generated ethereal user\n      pass: testAccount.pass // generated ethereal password\n\n    }\n  }); // send mail with defined transport object\n\n  let info = await transporter.sendMail({\n    from: '\"Fred Foo 👻\" <foo@example.com>',\n    // sender address\n    to: \"bar@example.com, baz@example.com\",\n    // list of receivers\n    subject: \"Hello ✔\",\n    // Subject line\n    text: \"Hello world?\",\n    // plain text body\n    html: \"<b>Hello world?</b>\" // html body\n\n  });\n  console.log(\"Message sent: %s\", info.messageId); // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\n  // Preview only available when sending through an Ethereal account\n\n  console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info)); // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n}; //this.messageCtrl.createEmail().catch(console.error);\n\n\nfunction sendResponse(res, action, tid, error) {\n  if (action == \"error\") console.log(error);\n  var result = {\n    action: action\n  };\n  if (tid !== undefined && tid !== null) result.tid = tid;\n  res.send(result);\n}\n\nmodule.exports = messageCtrl;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "messages.controller.js"
      ],
      "names": [
        "app",
        "require",
        "pool",
        "twilio",
        "nodemailer",
        "messageCtrl",
        "createService",
        "req",
        "res",
        "message_body",
        "message_to",
        "body",
        "accountSid",
        "authToken",
        "client",
        "messages",
        "create",
        "from",
        "to",
        "then",
        "message",
        "send",
        "sid",
        "done",
        "console",
        "log",
        "createEmail",
        "email_from",
        "email_to",
        "email_subject",
        "email_text",
        "email__body",
        "testAccount",
        "createTestAccount",
        "transporter",
        "createTransport",
        "host",
        "port",
        "secure",
        "auth",
        "user",
        "pass",
        "info",
        "sendMail",
        "subject",
        "text",
        "html",
        "messageId",
        "getTestMessageUrl",
        "sendResponse",
        "action",
        "tid",
        "error",
        "result",
        "undefined",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "sourcesContent": [
        "const { app } = require('../app');\r\nconst pool = require('../database');\r\nvar twilio = require('twilio');\r\nconst nodemailer = require(\"nodemailer\");\r\n\r\nconst messageCtrl = {}\r\n\r\nmessageCtrl.createService = async(req, res) => {\r\n    \r\n    //await pool.query('INSERT INTO t_Services set ?', [newService]);\r\n\r\n    const {message_body, message_to} = req.body;\r\n    //console.log(req.body);   \r\n\r\n    const accountSid = 'ACfa17fbc2f5b2772e86089ab7f3a3486f'; // app.get('TWILIO_ACCOUNT_SID') \r\n    const authToken = '705bda56c883f71b95c11ba1d1499666'; // app.get('TWILIO_AUTH_TOKEN')\r\n    const client = require('twilio')(accountSid, authToken); \r\n    \r\n    client.messages \r\n    .create({ \r\n        body: message_body, \r\n        from: 'whatsapp:+14155238886',       \r\n        to: 'whatsapp:' + message_to \r\n    }) \r\n    .then(message => res.send(message.sid+'\\n'+message_body)) \r\n    .done(console.log(\"Mensaje Enviado: (\"+message_to+')\\n'+message_body+'\\n'));\r\n};\r\n\r\nmessageCtrl.createEmail = async(req, res) => {\r\n\r\n    const {email_from, email_to, email_subject, email_text, email__body} = req.body;\r\n    // Generate test SMTP service account from ethereal.email\r\n      // Only needed if you don't have a real mail account for testing\r\n      let testAccount = await nodemailer.createTestAccount();\r\n    \r\n      // create reusable transporter object using the default SMTP transport\r\n      let transporter = nodemailer.createTransport({\r\n        host: \"smtp.ethereal.email\",\r\n        port: 587,\r\n        secure: false, // true for 465, false for other ports\r\n        auth: {\r\n          user: testAccount.user, // generated ethereal user\r\n          pass: testAccount.pass, // generated ethereal password\r\n        },\r\n      });\r\n    \r\n      // send mail with defined transport object\r\n      let info = await transporter.sendMail({\r\n        from: '\"Fred Foo 👻\" <foo@example.com>', // sender address\r\n        to: \"bar@example.com, baz@example.com\", // list of receivers\r\n        subject: \"Hello ✔\", // Subject line\r\n        text: \"Hello world?\", // plain text body\r\n        html: \"<b>Hello world?</b>\", // html body\r\n      });\r\n    \r\n      console.log(\"Message sent: %s\", info.messageId);\r\n      // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\r\n    \r\n      // Preview only available when sending through an Ethereal account\r\n      console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info));\r\n      // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\r\n};\r\n    \r\n//this.messageCtrl.createEmail().catch(console.error);\r\n\r\nfunction sendResponse(res, action, tid, error) {\r\n \r\n  if (action == \"error\")\r\n    console.log(error);\r\n \r\n  var result = {\r\n    action: action\r\n  };\r\n  if (tid !== undefined && tid !== null)\r\n    result.tid = tid;\r\n \r\n  res.send(result);\r\n}\r\n\r\nmodule.exports =  messageCtrl;"
      ]
    },
    "sourceType": "module",
    "mtime": 1613085960969
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\tasks.routes.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\tasks.routes.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\tasks.routes.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\tasks.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
        "sourceFileName": "tasks.routes.js"
      }
    },
    "ast": null,
    "code": "const {\n  Router\n} = require('express');\n\nconst router = Router();\n\nconst taskCtrl = require('../controller/tasks.controller.js'); // List Tasks\n\n\nrouter.get('/', taskCtrl.getAllTasks); // List Tasks\n\nrouter.get('/past', taskCtrl.getPastTasks); // Read Past Task By User\n\nrouter.get('/past/:id', taskCtrl.getPastTaskByUser); // List Daily Tasks\n\nrouter.get('/daily', taskCtrl.getDailyTasks); // Read Daily Tasks by User\n\nrouter.get('/daily/:id', taskCtrl.getDailyTaskByUser); // Create a New Task\n\nrouter.post('/', taskCtrl.createTask); // Read Task\n\nrouter.get('/:id', taskCtrl.getTask); // Edit Task\n\nrouter.put('/:id', taskCtrl.editTask); // Delete Task\n\nrouter.delete('/:id', taskCtrl.deleteTask);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2tzLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJSb3V0ZXIiLCJyZXF1aXJlIiwicm91dGVyIiwidGFza0N0cmwiLCJnZXQiLCJnZXRBbGxUYXNrcyIsImdldFBhc3RUYXNrcyIsImdldFBhc3RUYXNrQnlVc2VyIiwiZ2V0RGFpbHlUYXNrcyIsImdldERhaWx5VGFza0J5VXNlciIsInBvc3QiLCJjcmVhdGVUYXNrIiwiZ2V0VGFzayIsInB1dCIsImVkaXRUYXNrIiwiZGVsZXRlIiwiZGVsZXRlVGFzayIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFhQyxPQUFPLENBQUMsU0FBRCxDQUExQjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE1BQU0sRUFBckI7O0FBR0EsTUFBTUcsUUFBUSxHQUFHRixPQUFPLENBQUMsbUNBQUQsQ0FBeEIsQyxDQUVBOzs7QUFDQUMsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQkQsUUFBUSxDQUFDRSxXQUF6QixFLENBR0E7O0FBQ0FILE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLE9BQVgsRUFBb0JELFFBQVEsQ0FBQ0csWUFBN0IsRSxDQUVBOztBQUNBSixNQUFNLENBQUNFLEdBQVAsQ0FBVyxXQUFYLEVBQXdCRCxRQUFRLENBQUNJLGlCQUFqQyxFLENBR0E7O0FBQ0FMLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLFFBQVgsRUFBcUJELFFBQVEsQ0FBQ0ssYUFBOUIsRSxDQUVBOztBQUNBTixNQUFNLENBQUNFLEdBQVAsQ0FBVyxZQUFYLEVBQXlCRCxRQUFRLENBQUNNLGtCQUFsQyxFLENBR0E7O0FBQ0FQLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLEdBQVosRUFBaUJQLFFBQVEsQ0FBQ1EsVUFBMUIsRSxDQUVBOztBQUNBVCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxNQUFYLEVBQW1CRCxRQUFRLENBQUNTLE9BQTVCLEUsQ0FFQTs7QUFDQVYsTUFBTSxDQUFDVyxHQUFQLENBQVcsTUFBWCxFQUFtQlYsUUFBUSxDQUFDVyxRQUE1QixFLENBRUE7O0FBQ0FaLE1BQU0sQ0FBQ2EsTUFBUCxDQUFjLE1BQWQsRUFBc0JaLFFBQVEsQ0FBQ2EsVUFBL0I7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCaEIsTUFBakIiLCJzb3VyY2VSb290IjoiRjpcXERvY3VtZW50c1xcQXJxQklEXFxQbGF0Zm9ybVxcVmV5cm9uX2FycUJJRF9BUElfTXlFUk5cXHNyY1xccm91dGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IFJvdXRlciB9ID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuXHJcblxyXG5jb25zdCB0YXNrQ3RybCA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXIvdGFza3MuY29udHJvbGxlci5qcycpO1xyXG5cclxuLy8gTGlzdCBUYXNrc1xyXG5yb3V0ZXIuZ2V0KCcvJywgdGFza0N0cmwuZ2V0QWxsVGFza3MpO1xyXG5cclxuXHJcbi8vIExpc3QgVGFza3Ncclxucm91dGVyLmdldCgnL3Bhc3QnLCB0YXNrQ3RybC5nZXRQYXN0VGFza3MpO1xyXG5cclxuLy8gUmVhZCBQYXN0IFRhc2sgQnkgVXNlclxyXG5yb3V0ZXIuZ2V0KCcvcGFzdC86aWQnLCB0YXNrQ3RybC5nZXRQYXN0VGFza0J5VXNlcik7XHJcblxyXG5cclxuLy8gTGlzdCBEYWlseSBUYXNrc1xyXG5yb3V0ZXIuZ2V0KCcvZGFpbHknLCB0YXNrQ3RybC5nZXREYWlseVRhc2tzKTtcclxuXHJcbi8vIFJlYWQgRGFpbHkgVGFza3MgYnkgVXNlclxyXG5yb3V0ZXIuZ2V0KCcvZGFpbHkvOmlkJywgdGFza0N0cmwuZ2V0RGFpbHlUYXNrQnlVc2VyKTtcclxuXHJcblxyXG4vLyBDcmVhdGUgYSBOZXcgVGFza1xyXG5yb3V0ZXIucG9zdCgnLycsIHRhc2tDdHJsLmNyZWF0ZVRhc2spO1xyXG5cclxuLy8gUmVhZCBUYXNrXHJcbnJvdXRlci5nZXQoJy86aWQnLCB0YXNrQ3RybC5nZXRUYXNrKTtcclxuXHJcbi8vIEVkaXQgVGFza1xyXG5yb3V0ZXIucHV0KCcvOmlkJywgdGFza0N0cmwuZWRpdFRhc2spO1xyXG5cclxuLy8gRGVsZXRlIFRhc2tcclxucm91dGVyLmRlbGV0ZSgnLzppZCcsIHRhc2tDdHJsLmRlbGV0ZVRhc2spO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "tasks.routes.js"
      ],
      "names": [
        "Router",
        "require",
        "router",
        "taskCtrl",
        "get",
        "getAllTasks",
        "getPastTasks",
        "getPastTaskByUser",
        "getDailyTasks",
        "getDailyTaskByUser",
        "post",
        "createTask",
        "getTask",
        "put",
        "editTask",
        "delete",
        "deleteTask",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,SAAD,CAA1B;;AACA,MAAMC,MAAM,GAAGF,MAAM,EAArB;;AAGA,MAAMG,QAAQ,GAAGF,OAAO,CAAC,mCAAD,CAAxB,C,CAEA;;;AACAC,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBD,QAAQ,CAACE,WAAzB,E,CAGA;;AACAH,MAAM,CAACE,GAAP,CAAW,OAAX,EAAoBD,QAAQ,CAACG,YAA7B,E,CAEA;;AACAJ,MAAM,CAACE,GAAP,CAAW,WAAX,EAAwBD,QAAQ,CAACI,iBAAjC,E,CAGA;;AACAL,MAAM,CAACE,GAAP,CAAW,QAAX,EAAqBD,QAAQ,CAACK,aAA9B,E,CAEA;;AACAN,MAAM,CAACE,GAAP,CAAW,YAAX,EAAyBD,QAAQ,CAACM,kBAAlC,E,CAGA;;AACAP,MAAM,CAACQ,IAAP,CAAY,GAAZ,EAAiBP,QAAQ,CAACQ,UAA1B,E,CAEA;;AACAT,MAAM,CAACE,GAAP,CAAW,MAAX,EAAmBD,QAAQ,CAACS,OAA5B,E,CAEA;;AACAV,MAAM,CAACW,GAAP,CAAW,MAAX,EAAmBV,QAAQ,CAACW,QAA5B,E,CAEA;;AACAZ,MAAM,CAACa,MAAP,CAAc,MAAd,EAAsBZ,QAAQ,CAACa,UAA/B;AAEAC,MAAM,CAACC,OAAP,GAAiBhB,MAAjB",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "sourcesContent": [
        "const { Router } = require('express');\r\nconst router = Router();\r\n\r\n\r\nconst taskCtrl = require('../controller/tasks.controller.js');\r\n\r\n// List Tasks\r\nrouter.get('/', taskCtrl.getAllTasks);\r\n\r\n\r\n// List Tasks\r\nrouter.get('/past', taskCtrl.getPastTasks);\r\n\r\n// Read Past Task By User\r\nrouter.get('/past/:id', taskCtrl.getPastTaskByUser);\r\n\r\n\r\n// List Daily Tasks\r\nrouter.get('/daily', taskCtrl.getDailyTasks);\r\n\r\n// Read Daily Tasks by User\r\nrouter.get('/daily/:id', taskCtrl.getDailyTaskByUser);\r\n\r\n\r\n// Create a New Task\r\nrouter.post('/', taskCtrl.createTask);\r\n\r\n// Read Task\r\nrouter.get('/:id', taskCtrl.getTask);\r\n\r\n// Edit Task\r\nrouter.put('/:id', taskCtrl.editTask);\r\n\r\n// Delete Task\r\nrouter.delete('/:id', taskCtrl.deleteTask);\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1611698977151
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\tasks.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\tasks.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\tasks.controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\tasks.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
        "sourceFileName": "tasks.controller.js"
      }
    },
    "ast": null,
    "code": "const pool = require('../database');\n\nconst {\n  app\n} = require('../app');\n\nconst taskCtrl = {};\n\nvar sleep = require('system-sleep');\n\ntaskCtrl.getAllTasks = async (req, res) => {\n  const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_v_tasks;'); // \n\n  res.send(Tasks);\n  console.log(Tasks);\n};\n\ntaskCtrl.getPastTasks = async (req, res) => {\n  const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_v_tasks_by_user WHERE task_done = 0 AND task_ack = 0 AND task_end <= now();'); // \n\n  res.send(Tasks);\n  console.log(Tasks);\n};\n\ntaskCtrl.getPastTaskByUser = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_v_tasks_by_user WHERE task_done = 0 AND task_ack = 0 AND task_end <= now() AND user_id = ? ;', id); // \n\n  res.send(Tasks);\n  console.log(Tasks);\n};\n\ntaskCtrl.getDailyTasks = async (req, res) => {\n  const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_v_tasks_by_user WHERE task_done = 0 AND task_ack = 0 AND (now() BETWEEN task_start  AND task_end);'); // \n\n  res.send(Tasks);\n  console.log(Tasks);\n};\n\ntaskCtrl.getDailyTaskByUser = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_v_tasks_by_user WHERE task_done = 0 AND task_ack = 0 AND (now() BETWEEN task_start  AND task_end) AND user_id = ? ;', id); // \n\n  res.send(Tasks);\n  console.log(Tasks);\n};\n\ntaskCtrl.createTask = async (req, res) => {\n  const {\n    id_Task_type,\n    id_Task_client,\n    id_Task_contractor,\n    Task_name,\n    Task_registration,\n    Task_start,\n    Task_end,\n    Task_code,\n    Task_manager,\n    Task_details,\n    Task_active,\n    Task_status,\n    Task_budget,\n    client_name,\n    Task_location,\n    advance_payment,\n    contractor_name,\n    Task_area,\n    Task_type_d\n  } = req.body;\n  const newTask = {\n    id_Task: null,\n    id_Task_type,\n    id_Task_client,\n    id_Task_contractor,\n    Task_name,\n    Task_registration,\n    Task_start,\n    Task_end,\n    Task_code,\n    Task_manager,\n    Task_details,\n    Task_active,\n    Task_status,\n    Task_budget,\n    client_name,\n    Task_location,\n    advance_payment,\n    contractor_name,\n    Task_area,\n    Task_type_d\n  };\n  await pool.query('INSERT INTO t_Tasks set ?', [newTask]).then(function (result) {\n    sendResponse(res, \"Task inserted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n  res.send('message: Task Created...'); //console.log(req.body);\n};\n\ntaskCtrl.getTask = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_v_Tasks_active WHERE Task_active = true AND id_Task = ?;', [id]);\n  res.send(Tasks);\n  console.log(Tasks);\n};\n\ntaskCtrl.editTask = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const {\n    id_Task_type,\n    id_Task_client,\n    id_Task_contractor,\n    Task_name,\n    Task_registration,\n    Task_start,\n    Task_end,\n    Task_code,\n    Task_manager,\n    Task_details,\n    Task_active,\n    Task_status,\n    Task_budget,\n    client_name,\n    Task_location,\n    advance_payment,\n    contractor_name,\n    Task_area,\n    Task_type_d\n  } = req.body;\n  const editedTask = {\n    id_Task_type,\n    id_Task_client,\n    id_Task_contractor,\n    Task_name,\n    Task_registration,\n    Task_start,\n    Task_end,\n    Task_code,\n    Task_manager,\n    Task_details,\n    Task_active,\n    Task_status,\n    Task_budget,\n    client_name,\n    Task_location,\n    advance_payment,\n    contractor_name,\n    Task_area,\n    Task_type_d\n  };\n  await pool.query('UPDATE `veyron_arqbid`.`t_Tasks` SET ? WHERE `id_Task` = ?;', [editedTask, id]).then(function (result) {\n    sendResponse(res, \"Task Updated\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\ntaskCtrl.deleteTask = async (req, res) => {\n  const {\n    id\n  } = req.params; //DELETE FROM veyron_arqbid.t_Tasks WHERE id_Task = ?;\n\n  await pool.query(\"UPDATE `veyron_arqbid`.`t_Tasks` SET `Task_active` = '0' WHERE `id_Task` = ?;\", [id]).then(function (result) {\n    sendResponse(res, \"Task Deleted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nvar cronJob = require('node-cron');\n\ncronJob.schedule('0 0 17 * * *', async function () {\n  var Today = new Date();\n  const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_v_tasks_by_user WHERE task_done = 0 AND task_ack = 0 AND task_end <= now();'); // \n\n  Tasks.forEach(Task => {\n    console.log(\"\");\n    sleep(10 * 1000); // sleep for 10 seconds\n\n    console.log(\"\");\n    const accountSid = 'ACfa17fbc2f5b2772e86089ab7f3a3486f';\n    const authToken = '705bda56c883f71b95c11ba1d1499666';\n\n    const client = require('twilio')(accountSid, authToken); //const message_to = '8441225528';\n    //const message_to = '8441794102';\n\n\n    const message_to = Task.user_phone; //'8443065027';    \n\n    const message_body = 'TAREA VENCIDA: ' + Task.user_name + '\\n*' + Task.task_name + '* / ' + Task.task_duration + '\\n*Task End:* ' + Task.task_end;\n    client.messages.create({\n      body: message_body,\n      from: 'whatsapp:+14155238886',\n      to: 'whatsapp:+521' + message_to\n    }).then(message => console.log(message.sid + '\\n' + Task.user_name + '\\n' + message_body + '\\n')).done();\n\n    async function init() {\n      console.log(1);\n      await sleep(1000);\n      console.log(2);\n    }\n\n    function sleep(ms) {\n      return new Promise(resolve => {\n        setTimeout(resolve, ms);\n      });\n    }\n  });\n}, {\n  scheduled: true\n});\n\nvar cronJobToday = require('node-cron');\n\ncronJobToday.schedule('0 0 8 * * *', async function () {\n  var Today = new Date();\n  const TasksToday = await pool.query('SELECT * FROM veyron_arqbid.t_v_tasks_by_user WHERE task_done = 0 AND task_ack = 0 AND (now() BETWEEN task_start  AND task_end);'); // \n\n  TasksToday.forEach(TaskToday => {\n    const accountSid = 'ACfa17fbc2f5b2772e86089ab7f3a3486f'; // \n\n    const authToken = '705bda56c883f71b95c11ba1d1499666'; // \n\n    const client = require('twilio')(accountSid, authToken); //const message_to = '8441225528';\n    //const message_to = '8441794102';\n\n\n    const message_to = TaskToday.user_phone; //'8443065027'; \n\n    const message_body = 'TAREA DIARIA: ' + TaskToday.user_name + '\\n*' + TaskToday.task_name + '* / ' + TaskToday.task_duration + '\\n*Task End:* ' + TaskToday.task_end;\n    client.messages.create({\n      body: message_body,\n      from: 'whatsapp:+14155238886',\n      to: 'whatsapp:+521' + message_to\n    }).then(message => console.log(message.sid + '\\n' + message_body + '\\n')).done();\n  });\n}, {\n  scheduled: true\n});\n\nfunction sendResponse(res, action, tid, error) {\n  if (action == \"error\") console.log(error);\n  var result = {\n    action: action\n  };\n  if (tid !== undefined && tid !== null) result.tid = tid;\n  res.send(result);\n}\n\nmodule.exports = taskCtrl;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "tasks.controller.js"
      ],
      "names": [
        "pool",
        "require",
        "app",
        "taskCtrl",
        "sleep",
        "getAllTasks",
        "req",
        "res",
        "Tasks",
        "query",
        "send",
        "console",
        "log",
        "getPastTasks",
        "getPastTaskByUser",
        "id",
        "params",
        "getDailyTasks",
        "getDailyTaskByUser",
        "createTask",
        "id_Task_type",
        "id_Task_client",
        "id_Task_contractor",
        "Task_name",
        "Task_registration",
        "Task_start",
        "Task_end",
        "Task_code",
        "Task_manager",
        "Task_details",
        "Task_active",
        "Task_status",
        "Task_budget",
        "client_name",
        "Task_location",
        "advance_payment",
        "contractor_name",
        "Task_area",
        "Task_type_d",
        "body",
        "newTask",
        "id_Task",
        "then",
        "result",
        "sendResponse",
        "insertId",
        "catch",
        "error",
        "getTask",
        "editTask",
        "editedTask",
        "deleteTask",
        "cronJob",
        "schedule",
        "Today",
        "Date",
        "forEach",
        "Task",
        "accountSid",
        "authToken",
        "client",
        "message_to",
        "user_phone",
        "message_body",
        "user_name",
        "task_name",
        "task_duration",
        "task_end",
        "messages",
        "create",
        "from",
        "to",
        "message",
        "sid",
        "done",
        "init",
        "ms",
        "Promise",
        "resolve",
        "setTimeout",
        "scheduled",
        "cronJobToday",
        "TasksToday",
        "TaskToday",
        "action",
        "tid",
        "undefined",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "sourcesContent": [
        "const pool = require('../database');\r\nconst { app } = require('../app');\r\n\r\nconst taskCtrl = {}\r\n\r\nvar sleep = require('system-sleep');\r\n\r\n\r\ntaskCtrl.getAllTasks = async (req, res) => {\r\n    const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_v_tasks;'); // \r\n    res.send(Tasks);\r\n    console.log(Tasks);\r\n};\r\n\r\ntaskCtrl.getPastTasks = async (req, res) => {\r\n    const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_v_tasks_by_user WHERE task_done = 0 AND task_ack = 0 AND task_end <= now();'); // \r\n    res.send(Tasks);\r\n    console.log(Tasks);\r\n};\r\n\r\ntaskCtrl.getPastTaskByUser = async (req, res) => {\r\n    const { id } = req.params;\r\n    const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_v_tasks_by_user WHERE task_done = 0 AND task_ack = 0 AND task_end <= now() AND user_id = ? ;', id); // \r\n    res.send(Tasks);\r\n    console.log(Tasks);\r\n};\r\n\r\ntaskCtrl.getDailyTasks = async (req, res) => {\r\n    const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_v_tasks_by_user WHERE task_done = 0 AND task_ack = 0 AND (now() BETWEEN task_start  AND task_end);'); // \r\n    res.send(Tasks);\r\n    console.log(Tasks);\r\n};\r\n\r\ntaskCtrl.getDailyTaskByUser = async (req, res) => {\r\n    const { id } = req.params;\r\n    const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_v_tasks_by_user WHERE task_done = 0 AND task_ack = 0 AND (now() BETWEEN task_start  AND task_end) AND user_id = ? ;', id); // \r\n    res.send(Tasks);\r\n    console.log(Tasks);\r\n};\r\n\r\n\r\ntaskCtrl.createTask = async (req, res) => {\r\n    const {\r\n        id_Task_type,\r\n        id_Task_client,\r\n        id_Task_contractor,\r\n        Task_name,\r\n        Task_registration,\r\n        Task_start,\r\n        Task_end,\r\n        Task_code,\r\n        Task_manager,\r\n        Task_details,\r\n        Task_active,\r\n        Task_status,\r\n        Task_budget,\r\n        client_name,\r\n        Task_location,\r\n        advance_payment,\r\n        contractor_name,\r\n        Task_area,\r\n        Task_type_d } = req.body;\r\n\r\n    const newTask = {\r\n        id_Task: null,\r\n        id_Task_type,\r\n        id_Task_client,\r\n        id_Task_contractor,\r\n        Task_name,\r\n        Task_registration,\r\n        Task_start,\r\n        Task_end,\r\n        Task_code,\r\n        Task_manager,\r\n        Task_details,\r\n        Task_active,\r\n        Task_status,\r\n        Task_budget,\r\n        client_name,\r\n        Task_location,\r\n        advance_payment,\r\n        contractor_name,\r\n        Task_area,\r\n        Task_type_d\r\n    };\r\n\r\n    await pool.query('INSERT INTO t_Tasks set ?', [newTask])\r\n    .then (function (result) {\r\n        sendResponse(res, \"Task inserted\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n\r\n    res.send('message: Task Created...');\r\n    //console.log(req.body);\r\n};\r\n\r\ntaskCtrl.getTask = async (req, res) => {\r\n    const { id } = req.params;\r\n    const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_v_Tasks_active WHERE Task_active = true AND id_Task = ?;', [id]);\r\n    res.send(Tasks);\r\n    console.log(Tasks);\r\n};\r\n\r\ntaskCtrl.editTask = async (req, res) => {\r\n    const { id } = req.params;\r\n\r\n    const {\r\n        id_Task_type,\r\n        id_Task_client,\r\n        id_Task_contractor,\r\n        Task_name,\r\n        Task_registration,\r\n        Task_start,\r\n        Task_end,\r\n        Task_code,\r\n        Task_manager,\r\n        Task_details,\r\n        Task_active,\r\n        Task_status,\r\n        Task_budget,\r\n        client_name,\r\n        Task_location,\r\n        advance_payment,\r\n        contractor_name,\r\n        Task_area,\r\n        Task_type_d } = req.body;\r\n\r\n    const editedTask = {\r\n        id_Task_type,\r\n        id_Task_client,\r\n        id_Task_contractor,\r\n        Task_name,\r\n        Task_registration,\r\n        Task_start,\r\n        Task_end,\r\n        Task_code,\r\n        Task_manager,\r\n        Task_details,\r\n        Task_active,\r\n        Task_status,\r\n        Task_budget,\r\n        client_name,\r\n        Task_location,\r\n        advance_payment,\r\n        contractor_name,\r\n        Task_area,\r\n        Task_type_d\r\n    };\r\n\r\n    await pool.query('UPDATE `veyron_arqbid`.`t_Tasks` SET ? WHERE `id_Task` = ?;', [editedTask, id])\r\n    .then (function (result) {\r\n        sendResponse(res, \"Task Updated\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n};\r\n\r\ntaskCtrl.deleteTask = async (req, res) => {\r\n    const { id } = req.params;\r\n    //DELETE FROM veyron_arqbid.t_Tasks WHERE id_Task = ?;\r\n    await pool.query(\"UPDATE `veyron_arqbid`.`t_Tasks` SET `Task_active` = '0' WHERE `id_Task` = ?;\", [id]).then (function (result) {\r\n      sendResponse(res, \"Task Deleted\", result.insertId);\r\n    })\r\n    .catch(function(error) {\r\n      sendResponse(res, \"error\", null, error); \r\n    });\r\n};\r\n \r\n\r\nvar cronJob = require('node-cron');\r\ncronJob.schedule('0 0 17 * * *', async function () {\r\n    \r\n    var Today = new Date();\r\n\r\n    const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_v_tasks_by_user WHERE task_done = 0 AND task_ack = 0 AND task_end <= now();'); // \r\n\r\n     Tasks.forEach(Task => {\r\n        \r\n        console.log(\"\");\r\n        sleep(10*1000); // sleep for 10 seconds\r\n        console.log(\"\");\r\n\r\n        \r\n        const accountSid = 'ACfa17fbc2f5b2772e86089ab7f3a3486f';\r\n        const authToken = '705bda56c883f71b95c11ba1d1499666';\r\n\r\n        const client = require('twilio')(accountSid, authToken);\r\n\r\n        //const message_to = '8441225528';\r\n        //const message_to = '8441794102';\r\n        const message_to = Task.user_phone; //'8443065027';    \r\n\r\n        const message_body = 'TAREA VENCIDA: ' + Task.user_name + '\\n*' + Task.task_name + '* / ' + Task.task_duration + '\\n*Task End:* ' + Task.task_end;\r\n\r\n        client.messages\r\n            .create({\r\n                body: message_body,\r\n                from: 'whatsapp:+14155238886',\r\n                to: 'whatsapp:+521' + message_to\r\n            })\r\n            .then(message => console.log(message.sid + '\\n' + Task.user_name +'\\n'+ message_body + '\\n'))\r\n            .done();\r\n\r\n            async function init() {\r\n                console.log(1);\r\n                await sleep(1000);\r\n                console.log(2);\r\n              }\r\n              \r\n              function sleep(ms) {\r\n                return new Promise((resolve) => {\r\n                  setTimeout(resolve, ms);\r\n                });\r\n              }\r\n\r\n    });\r\n}, { scheduled: true });\r\n\r\nvar cronJobToday = require('node-cron');\r\ncronJobToday.schedule('0 0 8 * * *', async function () {    \r\n    \r\n    var Today = new Date();\r\n\r\n    const TasksToday = await pool.query('SELECT * FROM veyron_arqbid.t_v_tasks_by_user WHERE task_done = 0 AND task_ack = 0 AND (now() BETWEEN task_start  AND task_end);'); // \r\n\r\n    TasksToday.forEach(TaskToday => {\r\n        \r\n        const accountSid = 'ACfa17fbc2f5b2772e86089ab7f3a3486f'; // \r\n        const authToken = '705bda56c883f71b95c11ba1d1499666'; // \r\n\r\n        const client = require('twilio')(accountSid, authToken);\r\n\r\n        //const message_to = '8441225528';\r\n        //const message_to = '8441794102';\r\n        const message_to = TaskToday.user_phone; //'8443065027'; \r\n\r\n        const message_body = 'TAREA DIARIA: ' + TaskToday.user_name + '\\n*' +TaskToday.task_name + '* / ' + TaskToday.task_duration + '\\n*Task End:* ' + TaskToday.task_end;\r\n\r\n        client.messages\r\n            .create({\r\n                body: message_body,\r\n                from: 'whatsapp:+14155238886',\r\n                to: 'whatsapp:+521' + message_to\r\n            })\r\n            .then(message => console.log(message.sid + '\\n' + message_body + '\\n'))\r\n            .done();\r\n\r\n    });\r\n}, { scheduled: true }); \r\n\r\nfunction sendResponse(res, action, tid, error) {\r\n \r\n    if (action == \"error\")\r\n      console.log(error);\r\n   \r\n    var result = {\r\n      action: action\r\n    };\r\n    if (tid !== undefined && tid !== null)\r\n      result.tid = tid;\r\n   \r\n    res.send(result);\r\n  }\r\n\r\nmodule.exports = taskCtrl;"
      ]
    },
    "sourceType": "module",
    "mtime": 1614188838988
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\gantt.routes.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\gantt.routes.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\gantt.routes.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\gantt.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
        "sourceFileName": "gantt.routes.js"
      }
    },
    "ast": null,
    "code": "const {\n  Router\n} = require('express');\n\nconst router = Router();\n\nconst ganttCtrl = require('../controller/gant.controller.js'); // List Tasks\n\n\nrouter.get('/', ganttCtrl.getGraphics); // Create a New Task\n\nrouter.post('/', ganttCtrl.saveNewTask); // Read Task\n\nrouter.get('/:id', ganttCtrl.getTasks); // Edit Task\n\nrouter.put('/:id', ganttCtrl.updateTask); // Delete Task\n\nrouter.delete('/:id', ganttCtrl.deleteTask);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbnR0LnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJSb3V0ZXIiLCJyZXF1aXJlIiwicm91dGVyIiwiZ2FudHRDdHJsIiwiZ2V0IiwiZ2V0R3JhcGhpY3MiLCJwb3N0Iiwic2F2ZU5ld1Rhc2siLCJnZXRUYXNrcyIsInB1dCIsInVwZGF0ZVRhc2siLCJkZWxldGUiLCJkZWxldGVUYXNrIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQWFDLE9BQU8sQ0FBQyxTQUFELENBQTFCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsTUFBTSxFQUFyQjs7QUFHQSxNQUFNRyxTQUFTLEdBQUdGLE9BQU8sQ0FBQyxrQ0FBRCxDQUF6QixDLENBRUE7OztBQUNBQyxNQUFNLENBQUNFLEdBQVAsQ0FBVyxHQUFYLEVBQWdCRCxTQUFTLENBQUNFLFdBQTFCLEUsQ0FFQTs7QUFDQUgsTUFBTSxDQUFDSSxJQUFQLENBQVksR0FBWixFQUFpQkgsU0FBUyxDQUFDSSxXQUEzQixFLENBRUE7O0FBQ0FMLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLE1BQVgsRUFBbUJELFNBQVMsQ0FBQ0ssUUFBN0IsRSxDQUVBOztBQUNBTixNQUFNLENBQUNPLEdBQVAsQ0FBVyxNQUFYLEVBQW1CTixTQUFTLENBQUNPLFVBQTdCLEUsQ0FFQTs7QUFDQVIsTUFBTSxDQUFDUyxNQUFQLENBQWMsTUFBZCxFQUFzQlIsU0FBUyxDQUFDUyxVQUFoQztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJaLE1BQWpCIiwic291cmNlUm9vdCI6IkY6XFxEb2N1bWVudHNcXEFycUJJRFxcUGxhdGZvcm1cXFZleXJvbl9hcnFCSURfQVBJX015RVJOXFxzcmNcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBSb3V0ZXIgfSA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XHJcblxyXG5cclxuY29uc3QgZ2FudHRDdHJsID0gcmVxdWlyZSgnLi4vY29udHJvbGxlci9nYW50LmNvbnRyb2xsZXIuanMnKTtcclxuXHJcbi8vIExpc3QgVGFza3Ncclxucm91dGVyLmdldCgnLycsIGdhbnR0Q3RybC5nZXRHcmFwaGljcyk7XHJcblxyXG4vLyBDcmVhdGUgYSBOZXcgVGFza1xyXG5yb3V0ZXIucG9zdCgnLycsIGdhbnR0Q3RybC5zYXZlTmV3VGFzayk7XHJcblxyXG4vLyBSZWFkIFRhc2tcclxucm91dGVyLmdldCgnLzppZCcsIGdhbnR0Q3RybC5nZXRUYXNrcyk7XHJcblxyXG4vLyBFZGl0IFRhc2tcclxucm91dGVyLnB1dCgnLzppZCcsIGdhbnR0Q3RybC51cGRhdGVUYXNrKTtcclxuXHJcbi8vIERlbGV0ZSBUYXNrXHJcbnJvdXRlci5kZWxldGUoJy86aWQnLCBnYW50dEN0cmwuZGVsZXRlVGFzayk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gantt.routes.js"
      ],
      "names": [
        "Router",
        "require",
        "router",
        "ganttCtrl",
        "get",
        "getGraphics",
        "post",
        "saveNewTask",
        "getTasks",
        "put",
        "updateTask",
        "delete",
        "deleteTask",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,SAAD,CAA1B;;AACA,MAAMC,MAAM,GAAGF,MAAM,EAArB;;AAGA,MAAMG,SAAS,GAAGF,OAAO,CAAC,kCAAD,CAAzB,C,CAEA;;;AACAC,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBD,SAAS,CAACE,WAA1B,E,CAEA;;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBH,SAAS,CAACI,WAA3B,E,CAEA;;AACAL,MAAM,CAACE,GAAP,CAAW,MAAX,EAAmBD,SAAS,CAACK,QAA7B,E,CAEA;;AACAN,MAAM,CAACO,GAAP,CAAW,MAAX,EAAmBN,SAAS,CAACO,UAA7B,E,CAEA;;AACAR,MAAM,CAACS,MAAP,CAAc,MAAd,EAAsBR,SAAS,CAACS,UAAhC;AAEAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "sourcesContent": [
        "const { Router } = require('express');\r\nconst router = Router();\r\n\r\n\r\nconst ganttCtrl = require('../controller/gant.controller.js');\r\n\r\n// List Tasks\r\nrouter.get('/', ganttCtrl.getGraphics);\r\n\r\n// Create a New Task\r\nrouter.post('/', ganttCtrl.saveNewTask);\r\n\r\n// Read Task\r\nrouter.get('/:id', ganttCtrl.getTasks);\r\n\r\n// Edit Task\r\nrouter.put('/:id', ganttCtrl.updateTask);\r\n\r\n// Delete Task\r\nrouter.delete('/:id', ganttCtrl.deleteTask);\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1612996101711
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\gant.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\gant.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\gant.controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\gant.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
        "sourceFileName": "gant.controller.js"
      }
    },
    "ast": null,
    "code": "const pool = require('../database');\n\nvar Promise = require('bluebird');\n\nrequire(\"date-format-lite\");\n\nconst ganttCtrl = {};\n\nganttCtrl.getGraphics = async (req, res) => {\n  Promise.all([pool.query(\"SELECT * FROM veyron_arqbid.t_v_tasks_ganttid;\"), //t_v_tasks_ganttid // WHERE id <= 10\n  pool.query(\"SELECT * FROM veyron_arqbid.t_v_task_links;\") //t_v_task_links // WHERE id <= 10\n  ]).then(function (results) {\n    var tasks = results[0],\n        links = results[1];\n\n    for (var i = 0; i < tasks.length; i++) {\n      //tasks[i].start_date = tasks[i].start_date.format(\"YYYY-MM-DD hh:mm:ss\");\n      tasks[i].open = true;\n    }\n\n    res.send({\n      data: tasks,\n      collections: {\n        links: links\n      }\n    });\n  }).catch(function (error) {\n    console.log(res, \"error\", null, error); //sendResponse\n  });\n};\n\nganttCtrl.getGraphic = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  Promise.all([pool.query(\"SELECT * FROM veyron_arqbid.t_v_tasks_ganttid WHERE id = ?;\", id), //t_v_tasks_ganttid // WHERE id <= 10\n  pool.query(\"SELECT * FROM veyron_arqbid.t_v_task_links;\") //t_v_task_links // WHERE id <= 10\n  ]).then(function (results) {\n    var tasks = results[0],\n        links = results[1];\n\n    for (var i = 0; i < tasks.length; i++) {\n      //tasks[i].start_date = tasks[i].start_date.format(\"YYYY-MM-DD hh:mm:ss\");\n      tasks[i].open = true;\n    }\n\n    res.send({\n      data: tasks,\n      collections: {\n        links: links\n      }\n    });\n  }).catch(function (error) {\n    console.log(res, \"error\", null, error); //sendResponse\n  });\n};\n\nganttCtrl.getTasks = async (req, res) => {\n  const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_project_tasks;'); // \n\n  res.send(Tasks);\n  console.log(Tasks);\n};\n\nganttCtrl.saveNewTask = async (req, res) => {\n  const {\n    id_project,\n    task_name,\n    task_duration,\n    task_start,\n    task_end,\n    percent_complete,\n    task_predecesor,\n    parent,\n    id_created_by,\n    task_done,\n    task_ack,\n    id_responsible,\n    task_registration,\n    created_at,\n    updated_at\n  } = req.body;\n  const newTask = {\n    id_task: null,\n    id_project,\n    task_name,\n    task_duration,\n    task_start: task_start.date(\"YYYY-MM-DD\"),\n    task_end: task_end.date(\"YYYY-MM-DD\"),\n    percent_complete,\n    task_predecesor,\n    parent,\n    id_created_by,\n    task_done,\n    task_ack,\n    id_responsible,\n    task_registration,\n    created_at: null,\n    updated_at: null\n  };\n  await pool.query(\"INSERT INTO veyron_arqbid.t_project_tasks SET ?;\", [newTask]).then(function (result) {\n    sendResponse(res, \"Task inserted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n}; // update a link\n\n\nganttCtrl.updateTask = async (req, res) => {\n  var id = req.params.id;\n  const {\n    id_project,\n    task_name,\n    task_duration,\n    task_start,\n    task_end,\n    percent_complete,\n    task_predecesor,\n    parent,\n    id_created_by,\n    task_done,\n    task_ack,\n    id_responsible,\n    task_registration,\n    created_at,\n    updated_at\n  } = req.body;\n  const editTask = {\n    id_project,\n    task_name,\n    task_duration,\n    task_start: task_start.date(\"YYYY-MM-DD\"),\n    task_end: task_end.date(\"YYYY-MM-DD\"),\n    percent_complete,\n    task_predecesor,\n    parent,\n    id_created_by,\n    task_done,\n    task_ack,\n    id_responsible,\n    task_registration,\n    created_at: null,\n    updated_at: null\n  };\n  link = getLink(req.body);\n  await pool.query(\"UPDATE veyron_arqbid.t_project_tasks SET ? WHERE id_task = ?\", [editTask, id]).then(function (result) {\n    sendResponse(res, \"{message:Tasks ${id} updated}\");\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n}; // delete a link\n\n\nganttCtrl.deleteTask = async (req, res) => {\n  var sid = req.params.id;\n  await pool.query(\"DELETE FROM veyron_arqbid.t_project_tasks WHERE id_task = ?\", [sid]).then(function (result) {\n    sendResponse(res, \"Task Deleted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nfunction getTask(data) {\n  return {\n    text: data.text,\n    start_date: data.start_date.date(\"YYYY-MM-DD\"),\n    duration: data.duration,\n    progress: data.progress || 0,\n    parent: data.parent\n  };\n}\n\nfunction getLink(data) {\n  return {\n    source: data.source,\n    target: data.target,\n    type: data.type\n  };\n}\n\nfunction sendResponse(res, action, tid, error) {\n  if (action == \"error\") console.log(error);\n  var result = {\n    action: action\n  };\n  if (tid !== undefined && tid !== null) result.tid = tid;\n  res.send(result);\n}\n\nmodule.exports = ganttCtrl;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gant.controller.js"
      ],
      "names": [
        "pool",
        "require",
        "Promise",
        "ganttCtrl",
        "getGraphics",
        "req",
        "res",
        "all",
        "query",
        "then",
        "results",
        "tasks",
        "links",
        "i",
        "length",
        "open",
        "send",
        "data",
        "collections",
        "catch",
        "error",
        "console",
        "log",
        "getGraphic",
        "id",
        "params",
        "getTasks",
        "Tasks",
        "saveNewTask",
        "id_project",
        "task_name",
        "task_duration",
        "task_start",
        "task_end",
        "percent_complete",
        "task_predecesor",
        "parent",
        "id_created_by",
        "task_done",
        "task_ack",
        "id_responsible",
        "task_registration",
        "created_at",
        "updated_at",
        "body",
        "newTask",
        "id_task",
        "date",
        "result",
        "sendResponse",
        "insertId",
        "updateTask",
        "editTask",
        "link",
        "getLink",
        "deleteTask",
        "sid",
        "getTask",
        "text",
        "start_date",
        "duration",
        "progress",
        "source",
        "target",
        "type",
        "action",
        "tid",
        "undefined",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "sourcesContent": [
        "const pool = require('../database');\r\nvar Promise = require('bluebird');\r\nrequire(\"date-format-lite\");\r\n\r\nconst ganttCtrl = {}\r\n\r\nganttCtrl.getGraphics = async (req, res) => {\r\n    Promise.all([\r\n        pool.query(\"SELECT * FROM veyron_arqbid.t_v_tasks_ganttid;\"), //t_v_tasks_ganttid // WHERE id <= 10\r\n        pool.query(\"SELECT * FROM veyron_arqbid.t_v_task_links;\") //t_v_task_links // WHERE id <= 10\r\n      ]).then(function(results){\r\n        var tasks = results[0],\r\n        links = results[1];\r\n     \r\n        for (var i = 0; i < tasks.length; i++) {\r\n          //tasks[i].start_date = tasks[i].start_date.format(\"YYYY-MM-DD hh:mm:ss\");\r\n          tasks[i].open = true;\r\n        }\r\n     \r\n        res.send({\r\n          data: tasks,\r\n          collections: { links: links }\r\n        });\r\n     \r\n      }).catch(function(error) {\r\n        console.log(res, \"error\", null, error); //sendResponse\r\n      });\r\n};\r\n\r\n\r\nganttCtrl.getGraphic = async (req, res) => {\r\n  const { id } = req.params;\r\n  Promise.all([\r\n      pool.query(\"SELECT * FROM veyron_arqbid.t_v_tasks_ganttid WHERE id = ?;\", id), //t_v_tasks_ganttid // WHERE id <= 10\r\n      pool.query(\"SELECT * FROM veyron_arqbid.t_v_task_links;\") //t_v_task_links // WHERE id <= 10\r\n    ]).then(function(results){\r\n      var tasks = results[0],\r\n      links = results[1];\r\n   \r\n      for (var i = 0; i < tasks.length; i++) {\r\n        //tasks[i].start_date = tasks[i].start_date.format(\"YYYY-MM-DD hh:mm:ss\");\r\n        tasks[i].open = true;\r\n      }\r\n   \r\n      res.send({\r\n        data: tasks,\r\n        collections: { links: links }\r\n      });\r\n   \r\n    }).catch(function(error) {\r\n      console.log(res, \"error\", null, error); //sendResponse\r\n    });\r\n};\r\n\r\nganttCtrl.getTasks = async (req, res) => {\r\n  const Tasks = await pool.query('SELECT * FROM veyron_arqbid.t_project_tasks;'); // \r\n  res.send(Tasks);\r\n  console.log(Tasks);\r\n};\r\n\r\nganttCtrl.saveNewTask = async (req, res) => {  \r\n  const {\r\n    id_project,\r\n    task_name,\r\n    task_duration,\r\n    task_start,\r\n    task_end,\r\n    percent_complete,\r\n    task_predecesor,\r\n    parent,\r\n    id_created_by,\r\n    task_done,\r\n    task_ack,\r\n    id_responsible,\r\n    task_registration,\r\n    created_at,\r\n    updated_at } = req.body;\r\n\r\n  const newTask = {\r\n    id_task:null, \r\n    id_project,\r\n    task_name,\r\n    task_duration,\r\n    task_start: task_start.date(\"YYYY-MM-DD\"),\r\n    task_end: task_end.date(\"YYYY-MM-DD\"),\r\n    percent_complete,\r\n    task_predecesor,\r\n    parent,\r\n    id_created_by,\r\n    task_done,\r\n    task_ack,\r\n    id_responsible,\r\n    task_registration,\r\n    created_at:null,\r\n    updated_at:null\r\n  };\r\n\r\n  await pool.query(\"INSERT INTO veyron_arqbid.t_project_tasks SET ?;\", [newTask])  \r\n  .then (function (result) {\r\n    sendResponse(res, \"Task inserted\", result.insertId);\r\n  })\r\n  .catch(function(error) {\r\n    sendResponse(res, \"error\", null, error); \r\n  });\r\n};\r\n\r\n// update a link\r\nganttCtrl.updateTask = async (req, res) => {\r\n  var id = req.params.id;\r\n  \r\n  const {    \r\n    id_project,\r\n    task_name,\r\n    task_duration,\r\n    task_start,\r\n    task_end,\r\n    percent_complete,\r\n    task_predecesor,\r\n    parent,\r\n    id_created_by,\r\n    task_done,\r\n    task_ack,\r\n    id_responsible,\r\n    task_registration,\r\n    created_at,\r\n    updated_at } = req.body;\r\n\r\n  const editTask = { \r\n    id_project,\r\n    task_name,\r\n    task_duration,\r\n    task_start: task_start.date(\"YYYY-MM-DD\"),\r\n    task_end: task_end.date(\"YYYY-MM-DD\"),\r\n    percent_complete,\r\n    task_predecesor,\r\n    parent,\r\n    id_created_by,\r\n    task_done,\r\n    task_ack,\r\n    id_responsible,\r\n    task_registration,\r\n    created_at:null,\r\n    updated_at:null\r\n  };\r\n  \r\n  \r\n  link = getLink(req.body);\r\n \r\n  await pool.query(\"UPDATE veyron_arqbid.t_project_tasks SET ? WHERE id_task = ?\", [editTask, id])\r\n  .then (function (result) {\r\n    sendResponse(res, \"{message:Tasks ${id} updated}\");\r\n  })\r\n  .catch(function(error) {\r\n    sendResponse(res, \"error\", null, error); \r\n  });\r\n};\r\n\r\n// delete a link\r\nganttCtrl.deleteTask = async (req, res) => {\r\n  var sid = req.params.id;\r\n  await pool.query(\"DELETE FROM veyron_arqbid.t_project_tasks WHERE id_task = ?\",[sid])\r\n  .then (function (result) {\r\n    sendResponse(res, \"Task Deleted\", result.insertId);\r\n  })\r\n  .catch(function(error) {\r\n    sendResponse(res, \"error\", null, error); \r\n  });\r\n};\r\n\r\nfunction getTask(data) {\r\n  return {\r\n    text: data.text,\r\n    start_date: data.start_date.date(\"YYYY-MM-DD\"),\r\n    duration: data.duration,\r\n    progress: data.progress || 0,\r\n    parent: data.parent\r\n  };\r\n}\r\n \r\nfunction getLink(data) {\r\n  return {\r\n    source: data.source,\r\n    target: data.target,\r\n    type: data.type\r\n  };\r\n}\r\n \r\nfunction sendResponse(res, action, tid, error) {\r\n \r\n  if (action == \"error\")\r\n    console.log(error);\r\n \r\n  var result = {\r\n    action: action\r\n  };\r\n  if (tid !== undefined && tid !== null)\r\n    result.tid = tid;\r\n \r\n  res.send(result);\r\n}\r\n\r\nmodule.exports =  ganttCtrl;"
      ]
    },
    "sourceType": "module",
    "mtime": 1614188692277
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\files.routes.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\files.routes.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\files.routes.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\files.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
        "sourceFileName": "files.routes.js"
      }
    },
    "ast": null,
    "code": "const {\n  Router\n} = require('express');\n\nconst router = Router();\n\nconst fileCtrl = require('../controller/files.controller.js'); // List Files\n\n\nrouter.get('/', fileCtrl.getAllFiles); // Create a New File\n\nrouter.post('/', fileCtrl.createFile); // Read File\n\nrouter.get('/:id', fileCtrl.getFile); // Edit File\n\nrouter.put('/:id', fileCtrl.editFile); // Delete File\n\nrouter.delete('/:id', fileCtrl.deleteFile);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGVzLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJSb3V0ZXIiLCJyZXF1aXJlIiwicm91dGVyIiwiZmlsZUN0cmwiLCJnZXQiLCJnZXRBbGxGaWxlcyIsInBvc3QiLCJjcmVhdGVGaWxlIiwiZ2V0RmlsZSIsInB1dCIsImVkaXRGaWxlIiwiZGVsZXRlIiwiZGVsZXRlRmlsZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFhQyxPQUFPLENBQUMsU0FBRCxDQUExQjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE1BQU0sRUFBckI7O0FBRUEsTUFBTUcsUUFBUSxHQUFHRixPQUFPLENBQUMsbUNBQUQsQ0FBeEIsQyxDQUVBOzs7QUFDQUMsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQkQsUUFBUSxDQUFDRSxXQUF6QixFLENBRUE7O0FBQ0FILE1BQU0sQ0FBQ0ksSUFBUCxDQUFZLEdBQVosRUFBaUJILFFBQVEsQ0FBQ0ksVUFBMUIsRSxDQUVBOztBQUNBTCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxNQUFYLEVBQW1CRCxRQUFRLENBQUNLLE9BQTVCLEUsQ0FFQTs7QUFDQU4sTUFBTSxDQUFDTyxHQUFQLENBQVcsTUFBWCxFQUFtQk4sUUFBUSxDQUFDTyxRQUE1QixFLENBRUE7O0FBQ0FSLE1BQU0sQ0FBQ1MsTUFBUCxDQUFjLE1BQWQsRUFBc0JSLFFBQVEsQ0FBQ1MsVUFBL0I7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixNQUFqQiIsInNvdXJjZVJvb3QiOiJGOlxcRG9jdW1lbnRzXFxBcnFCSURcXFBsYXRmb3JtXFxWZXlyb25fYXJxQklEX0FQSV9NeUVSTlxcc3JjXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgUm91dGVyIH0gPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuY29uc3QgZmlsZUN0cmwgPSByZXF1aXJlKCcuLi9jb250cm9sbGVyL2ZpbGVzLmNvbnRyb2xsZXIuanMnKTtcclxuXHJcbi8vIExpc3QgRmlsZXNcclxucm91dGVyLmdldCgnLycsIGZpbGVDdHJsLmdldEFsbEZpbGVzKTtcclxuXHJcbi8vIENyZWF0ZSBhIE5ldyBGaWxlXHJcbnJvdXRlci5wb3N0KCcvJywgZmlsZUN0cmwuY3JlYXRlRmlsZSk7XHJcblxyXG4vLyBSZWFkIEZpbGVcclxucm91dGVyLmdldCgnLzppZCcsIGZpbGVDdHJsLmdldEZpbGUpO1xyXG5cclxuLy8gRWRpdCBGaWxlXHJcbnJvdXRlci5wdXQoJy86aWQnLCBmaWxlQ3RybC5lZGl0RmlsZSk7XHJcblxyXG4vLyBEZWxldGUgRmlsZVxyXG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgZmlsZUN0cmwuZGVsZXRlRmlsZSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "files.routes.js"
      ],
      "names": [
        "Router",
        "require",
        "router",
        "fileCtrl",
        "get",
        "getAllFiles",
        "post",
        "createFile",
        "getFile",
        "put",
        "editFile",
        "delete",
        "deleteFile",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,SAAD,CAA1B;;AACA,MAAMC,MAAM,GAAGF,MAAM,EAArB;;AAEA,MAAMG,QAAQ,GAAGF,OAAO,CAAC,mCAAD,CAAxB,C,CAEA;;;AACAC,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBD,QAAQ,CAACE,WAAzB,E,CAEA;;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBH,QAAQ,CAACI,UAA1B,E,CAEA;;AACAL,MAAM,CAACE,GAAP,CAAW,MAAX,EAAmBD,QAAQ,CAACK,OAA5B,E,CAEA;;AACAN,MAAM,CAACO,GAAP,CAAW,MAAX,EAAmBN,QAAQ,CAACO,QAA5B,E,CAEA;;AACAR,MAAM,CAACS,MAAP,CAAc,MAAd,EAAsBR,QAAQ,CAACS,UAA/B;AAEAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "sourcesContent": [
        "const { Router } = require('express');\r\nconst router = Router();\r\n\r\nconst fileCtrl = require('../controller/files.controller.js');\r\n\r\n// List Files\r\nrouter.get('/', fileCtrl.getAllFiles);\r\n\r\n// Create a New File\r\nrouter.post('/', fileCtrl.createFile);\r\n\r\n// Read File\r\nrouter.get('/:id', fileCtrl.getFile);\r\n\r\n// Edit File\r\nrouter.put('/:id', fileCtrl.editFile);\r\n\r\n// Delete File\r\nrouter.delete('/:id', fileCtrl.deleteFile);\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1614390594693
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\Files.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\Files.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\Files.controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\Files.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
        "sourceFileName": "Files.controller.js"
      }
    },
    "ast": null,
    "code": "const pool = require('../database');\n\nconst FileCtrl = {};\n\nFileCtrl.getAllFiles = async (req, res) => {\n  const Files = await pool.query('SELECT * FROM veyron_arqbid.t_trs_files_project;'); // \n\n  res.send(Files);\n  console.log(Files);\n};\n\nFileCtrl.createFile = async (req, res) => {\n  const {\n    id_file,\n    id_project,\n    id_task,\n    id_userUploaded,\n    active,\n    deleted_by,\n    name,\n    file_path,\n    mime,\n    size,\n    md5_file\n  } = req.body;\n  const newFile = {\n    id_file: null,\n    id_project,\n    id_task,\n    id_userUploaded,\n    active,\n    deleted_by,\n    name,\n    file_path,\n    mime,\n    size,\n    md5_file\n  };\n  await pool.query('INSERT INTO `veyron_arqbid`.`t_trs_files_project` set ?', [newFile]).then(function (result) {\n    sendResponse(res, \"File inserted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n  res.send('message: File Created...'); //console.log(req.body);\n};\n\nFileCtrl.getFile = async (req, res) => {\n  const {\n    id_file\n  } = req.params;\n  const Files = await pool.query('SELECT * FROM `veyron_arqbid`.`t_trs_files_project` WHERE id_file = ?;', [id_file]);\n  res.send(Files);\n  console.log(Files);\n};\n\nFileCtrl.editFile = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const {\n    id_project,\n    id_task,\n    id_userUploaded,\n    active,\n    deleted_by,\n    name,\n    file_path,\n    mime,\n    size,\n    md5_file\n  } = req.body;\n  const editedFile = {\n    id_project,\n    id_task,\n    id_userUploaded,\n    active,\n    deleted_by,\n    name,\n    file_path,\n    mime,\n    size,\n    md5_file\n  };\n  await pool.query('UPDATE `veyron_arqbid`.`t_trs_files_project` SET ? WHERE `id_file` = ?;', [editedFile, id]).then(function (result) {\n    sendResponse(res, \"File Updated\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nFileCtrl.deleteFile = async (req, res) => {\n  const {\n    id\n  } = req.params; //DELETE FROM veyron_arqbid.t_Files WHERE id_File = ?;\n\n  await pool.query(\"UPDATE `veyron_arqbid`.`t_trs_files_project` SET `active` = '0' WHERE `id_file` = ?;\", [id]).then(function (result) {\n    sendResponse(res, \"File Deleted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nfunction sendResponse(res, action, tid, error) {\n  if (action == \"error\") console.log(error);\n  var result = {\n    action: action\n  };\n  if (tid !== undefined && tid !== null) result.tid = tid;\n  res.send(result);\n}\n\nmodule.exports = FileCtrl;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Files.controller.js"
      ],
      "names": [
        "pool",
        "require",
        "FileCtrl",
        "getAllFiles",
        "req",
        "res",
        "Files",
        "query",
        "send",
        "console",
        "log",
        "createFile",
        "id_file",
        "id_project",
        "id_task",
        "id_userUploaded",
        "active",
        "deleted_by",
        "name",
        "file_path",
        "mime",
        "size",
        "md5_file",
        "body",
        "newFile",
        "then",
        "result",
        "sendResponse",
        "insertId",
        "catch",
        "error",
        "getFile",
        "params",
        "editFile",
        "id",
        "editedFile",
        "deleteFile",
        "action",
        "tid",
        "undefined",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "sourcesContent": [
        "const pool = require('../database');\r\n\r\nconst FileCtrl = {}\r\n\r\nFileCtrl.getAllFiles = async (req, res) => {\r\n    const Files = await pool.query('SELECT * FROM veyron_arqbid.t_trs_files_project;'); // \r\n    res.send(Files);\r\n    console.log(Files);\r\n};\r\n\r\nFileCtrl.createFile = async (req, res) => {\r\n    const {\r\n        id_file, \r\n        id_project, \r\n        id_task, \r\n        id_userUploaded, \r\n        active, \r\n        deleted_by, \r\n        name, \r\n        file_path, \r\n        mime, \r\n        size, \r\n        md5_file } = req.body;\r\n\r\n    const newFile = {\r\n        id_file:null, \r\n        id_project, \r\n        id_task, \r\n        id_userUploaded, \r\n        active, \r\n        deleted_by, \r\n        name, \r\n        file_path, \r\n        mime, \r\n        size, \r\n        md5_file\r\n    };\r\n\r\n    await pool.query('INSERT INTO `veyron_arqbid`.`t_trs_files_project` set ?', [newFile]).then (function (result) {\r\n        sendResponse(res, \"File inserted\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n\r\n    res.send('message: File Created...');\r\n    //console.log(req.body);\r\n};\r\n\r\nFileCtrl.getFile = async (req, res) => {\r\n    const { id_file } = req.params;\r\n    const Files = await pool.query('SELECT * FROM `veyron_arqbid`.`t_trs_files_project` WHERE id_file = ?;', [id_file]);\r\n    res.send(Files);\r\n    console.log(Files);\r\n};\r\n\r\nFileCtrl.editFile = async (req, res) => {\r\n    const { id } = req.params;\r\n\r\n    const {\r\n        id_project, \r\n        id_task, \r\n        id_userUploaded, \r\n        active, \r\n        deleted_by, \r\n        name, \r\n        file_path, \r\n        mime, \r\n        size, \r\n        md5_file } = req.body;\r\n\r\n    const editedFile = {\r\n        id_project, \r\n        id_task, \r\n        id_userUploaded, \r\n        active, \r\n        deleted_by, \r\n        name, \r\n        file_path, \r\n        mime, \r\n        size, \r\n        md5_file\r\n    };\r\n\r\n    await pool.query('UPDATE `veyron_arqbid`.`t_trs_files_project` SET ? WHERE `id_file` = ?;', [editedFile, id])\r\n    .then (function (result) {\r\n        sendResponse(res, \"File Updated\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n};\r\n\r\nFileCtrl.deleteFile = async (req, res) => {\r\n    const { id } = req.params;\r\n    //DELETE FROM veyron_arqbid.t_Files WHERE id_File = ?;\r\n    await pool.query(\"UPDATE `veyron_arqbid`.`t_trs_files_project` SET `active` = '0' WHERE `id_file` = ?;\", [id]).then (function (result) {\r\n      sendResponse(res, \"File Deleted\", result.insertId);\r\n    })\r\n    .catch(function(error) {\r\n      sendResponse(res, \"error\", null, error); \r\n    });\r\n};\r\n\r\nfunction sendResponse(res, action, tid, error) {\r\n \r\n    if (action == \"error\")\r\n      console.log(error);\r\n   \r\n    var result = {\r\n      action: action\r\n    };\r\n    if (tid !== undefined && tid !== null)\r\n      result.tid = tid;\r\n   \r\n    res.send(result);\r\n  }\r\n\r\nmodule.exports = FileCtrl;"
      ]
    },
    "sourceType": "module",
    "mtime": 1614188641829
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\contractors.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\contractors.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\contractors.controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\contractors.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
        "sourceFileName": "contractors.controller.js"
      }
    },
    "ast": null,
    "code": "const pool = require('../database');\n\nconst contractorCtrl = {};\n\ncontractorCtrl.getContractors = async (req, res) => {\n  const Contractors = await pool.query('SELECT * FROM veyron_arqbid.t_contractor WHERE contractor_active = true AND id_contractor_type = 2;');\n  res.send(Contractors);\n  console.log(Contractors);\n};\n\ncontractorCtrl.createContractor = async (req, res) => {\n  const {\n    id_contractor,\n    id_contractor_type = 2,\n    contractor_name,\n    contractor_legal_name,\n    contractor_charge,\n    contractor_phone_c,\n    contractor_street,\n    contractor_colonia,\n    contractor_city,\n    contractor_State,\n    contractor_email,\n    contractor_phone,\n    contractor_location,\n    contractor_provider,\n    contractor_active,\n    contractor_website,\n    created_at,\n    updated_at\n  } = req.body;\n  const newContractor = {\n    id_contractor: null,\n    id_contractor_type: 2,\n    contractor_name,\n    contractor_legal_name,\n    contractor_charge,\n    contractor_phone_c,\n    contractor_street,\n    contractor_colonia,\n    contractor_city,\n    contractor_State,\n    contractor_email,\n    contractor_phone,\n    contractor_location,\n    contractor_provider,\n    contractor_active: 1,\n    contractor_website,\n    created_at: Date,\n    updated_at: Date\n  };\n  await pool.query('INSERT INTO `veyron_arqbid`.`t_contractor` set ?', [newContractor]).then(function (result) {\n    sendResponse(res, \"Contractor inserted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\ncontractorCtrl.getContractor = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const Contractors = await pool.query('SELECT * FROM veyron_arqbid.t_contractor WHERE id_Contractor = ?;', [id]);\n  res.send(Contractors);\n  console.log(Contractors);\n};\n\ncontractorCtrl.editContractor = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const {\n    id_contractor_type,\n    contractor_name,\n    contractor_legal_name,\n    contractor_charge,\n    contractor_phone_c,\n    contractor_street,\n    contractor_colonia,\n    contractor_city,\n    contractor_State,\n    contractor_email,\n    contractor_phone,\n    contractor_location,\n    contractor_provider,\n    contractor_website\n  } = req.body;\n  const editedContractor = {\n    id_contractor_type: 2,\n    contractor_name,\n    contractor_legal_name,\n    contractor_charge,\n    contractor_phone_c,\n    contractor_street,\n    contractor_colonia,\n    contractor_city,\n    contractor_State,\n    contractor_email,\n    contractor_phone,\n    contractor_location,\n    contractor_provider,\n    contractor_website\n  };\n  const Contractors = await pool.query(\"UPDATE `veyron_arqbid`.`t_contractor` SET ? WHERE id_Contractor = ?;\", [editedContractor, id]).then(function (result) {\n    sendResponse(res, \"Contractor Updated\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\ncontractorCtrl.deleteContractor = async (req, res) => {\n  const {\n    id\n  } = req.params; //DELETE FROM veyron_arqbid.t_Contractors WHERE id_Contractor = ?;\n\n  const Contractors = await pool.query(\"UPDATE veyron_arqbid.t_contractor SET contractor_active = '0' WHERE id_Contractor = ?;\", [id]).then(function (result) {\n    sendResponse(res, \"Contractor Deleted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nfunction sendResponse(res, action, tid, error) {\n  if (action == \"error\") console.log(error);\n  var result = {\n    action: action\n  };\n  if (tid !== undefined && tid !== null) result.tid = tid;\n  res.send(result);\n}\n\nmodule.exports = contractorCtrl;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "contractors.controller.js"
      ],
      "names": [
        "pool",
        "require",
        "contractorCtrl",
        "getContractors",
        "req",
        "res",
        "Contractors",
        "query",
        "send",
        "console",
        "log",
        "createContractor",
        "id_contractor",
        "id_contractor_type",
        "contractor_name",
        "contractor_legal_name",
        "contractor_charge",
        "contractor_phone_c",
        "contractor_street",
        "contractor_colonia",
        "contractor_city",
        "contractor_State",
        "contractor_email",
        "contractor_phone",
        "contractor_location",
        "contractor_provider",
        "contractor_active",
        "contractor_website",
        "created_at",
        "updated_at",
        "body",
        "newContractor",
        "Date",
        "then",
        "result",
        "sendResponse",
        "insertId",
        "catch",
        "error",
        "getContractor",
        "id",
        "params",
        "editContractor",
        "editedContractor",
        "deleteContractor",
        "action",
        "tid",
        "undefined",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "sourcesContent": [
        "const pool = require('../database');\r\n\r\nconst contractorCtrl = {}\r\n\r\ncontractorCtrl.getContractors = async (req, res) => {\r\n    const Contractors = await pool.query('SELECT * FROM veyron_arqbid.t_contractor WHERE contractor_active = true AND id_contractor_type = 2;');\r\n    res.send(Contractors);\r\n    console.log(Contractors);\r\n};\r\n\r\ncontractorCtrl.createContractor = async(req, res) => {\r\n    const {\r\n        id_contractor,\r\n        id_contractor_type=2,\r\n        contractor_name,\r\n        contractor_legal_name,\r\n        contractor_charge,\r\n        contractor_phone_c,\r\n        contractor_street,\r\n        contractor_colonia,\r\n        contractor_city,\r\n        contractor_State,\r\n        contractor_email,\r\n        contractor_phone,\r\n        contractor_location,\r\n        contractor_provider,\r\n        contractor_active,\r\n        contractor_website,\r\n        created_at,\r\n        updated_at} = req.body;\r\n    \r\n    const newContractor = {                 \r\n        id_contractor:null,\r\n        id_contractor_type:2,\r\n        contractor_name,\r\n        contractor_legal_name,\r\n        contractor_charge,\r\n        contractor_phone_c,\r\n        contractor_street,\r\n        contractor_colonia,\r\n        contractor_city,\r\n        contractor_State,\r\n        contractor_email,\r\n        contractor_phone,\r\n        contractor_location,\r\n        contractor_provider,\r\n        contractor_active:1,\r\n        contractor_website,\r\n        created_at:Date,\r\n        updated_at:Date          \r\n    };\r\n\r\n    await pool.query('INSERT INTO `veyron_arqbid`.`t_contractor` set ?', [newContractor])\r\n    .then (function (result) {\r\n        sendResponse(res, \"Contractor inserted\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n};\r\n\r\ncontractorCtrl.getContractor = async (req, res) => {\r\n    const { id } = req.params;\r\n    const Contractors = await pool.query('SELECT * FROM veyron_arqbid.t_contractor WHERE id_Contractor = ?;', [id]);\r\n    res.send(Contractors);\r\n    console.log(Contractors);\r\n};\r\n\r\ncontractorCtrl.editContractor = async(req, res) => {\r\n    const { id } = req.params;\r\n\r\n    const {\r\n        id_contractor_type,\r\n        contractor_name,\r\n        contractor_legal_name,\r\n        contractor_charge,\r\n        contractor_phone_c,\r\n        contractor_street,\r\n        contractor_colonia,\r\n        contractor_city,\r\n        contractor_State,\r\n        contractor_email,\r\n        contractor_phone,\r\n        contractor_location,\r\n        contractor_provider,\r\n        contractor_website\r\n        } = req.body;\r\n    \r\n    const editedContractor = {                 \r\n        id_contractor_type:2,\r\n        contractor_name,\r\n        contractor_legal_name,\r\n        contractor_charge,\r\n        contractor_phone_c,\r\n        contractor_street,\r\n        contractor_colonia,\r\n        contractor_city,\r\n        contractor_State,\r\n        contractor_email,\r\n        contractor_phone,\r\n        contractor_location,\r\n        contractor_provider,\r\n        contractor_website       \r\n    };\r\n\r\n    const Contractors = await pool.query(\"UPDATE `veyron_arqbid`.`t_contractor` SET ? WHERE id_Contractor = ?;\", [editedContractor, id])\r\n    .then (function (result) {\r\n        sendResponse(res, \"Contractor Updated\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n};\r\n\r\ncontractorCtrl.deleteContractor = async (req, res) => {\r\n    const { id } = req.params;\r\n    //DELETE FROM veyron_arqbid.t_Contractors WHERE id_Contractor = ?;\r\n    const Contractors = await pool.query(\"UPDATE veyron_arqbid.t_contractor SET contractor_active = '0' WHERE id_Contractor = ?;\", [id])\r\n    .then (function (result) {\r\n      sendResponse(res, \"Contractor Deleted\", result.insertId);\r\n    })\r\n    .catch(function(error) {\r\n      sendResponse(res, \"error\", null, error); \r\n    });\r\n};\r\n\r\nfunction sendResponse(res, action, tid, error) {\r\n \r\n    if (action == \"error\")\r\n      console.log(error);\r\n   \r\n    var result = {\r\n      action: action\r\n    };\r\n    if (tid !== undefined && tid !== null)\r\n      result.tid = tid;\r\n   \r\n    res.send(result);\r\n  }\r\n\r\nmodule.exports =  contractorCtrl;"
      ]
    },
    "sourceType": "module",
    "mtime": 1614188616147
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\routes\\\\provider.routes.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\provider.routes.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\provider.routes.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\provider.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
        "sourceFileName": "provider.routes.js"
      }
    },
    "ast": null,
    "code": "const {\n  Router\n} = require('express');\n\nconst router = Router();\n\nconst contractorCtrl = require('../controller/provider.controller.js'); // List Contractors\n\n\nrouter.get('/', contractorCtrl.getContractors); // Create a New Contractor\n\nrouter.post('/', contractorCtrl.createContractor); // Read Contractor\n\nrouter.get('/:id', contractorCtrl.getContractor); // Edit Contractor\n\nrouter.put('/:id', contractorCtrl.editContractor); // Delete Contractor\n\nrouter.delete('/:id', contractorCtrl.deleteContractor);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3ZpZGVyLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJSb3V0ZXIiLCJyZXF1aXJlIiwicm91dGVyIiwiY29udHJhY3RvckN0cmwiLCJnZXQiLCJnZXRDb250cmFjdG9ycyIsInBvc3QiLCJjcmVhdGVDb250cmFjdG9yIiwiZ2V0Q29udHJhY3RvciIsInB1dCIsImVkaXRDb250cmFjdG9yIiwiZGVsZXRlIiwiZGVsZXRlQ29udHJhY3RvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFhQyxPQUFPLENBQUMsU0FBRCxDQUExQjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE1BQU0sRUFBckI7O0FBR0EsTUFBTUcsY0FBYyxHQUFHRixPQUFPLENBQUMsc0NBQUQsQ0FBOUIsQyxDQUVBOzs7QUFDQUMsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQkQsY0FBYyxDQUFDRSxjQUEvQixFLENBRUE7O0FBQ0FILE1BQU0sQ0FBQ0ksSUFBUCxDQUFZLEdBQVosRUFBaUJILGNBQWMsQ0FBQ0ksZ0JBQWhDLEUsQ0FFQTs7QUFDQUwsTUFBTSxDQUFDRSxHQUFQLENBQVcsTUFBWCxFQUFtQkQsY0FBYyxDQUFDSyxhQUFsQyxFLENBRUE7O0FBQ0FOLE1BQU0sQ0FBQ08sR0FBUCxDQUFXLE1BQVgsRUFBbUJOLGNBQWMsQ0FBQ08sY0FBbEMsRSxDQUVBOztBQUNBUixNQUFNLENBQUNTLE1BQVAsQ0FBYyxNQUFkLEVBQXNCUixjQUFjLENBQUNTLGdCQUFyQztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJaLE1BQWpCIiwic291cmNlUm9vdCI6IkY6XFxEb2N1bWVudHNcXEFycUJJRFxcUGxhdGZvcm1cXFZleXJvbl9hcnFCSURfQVBJX015RVJOXFxzcmNcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBSb3V0ZXIgfSA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XHJcblxyXG5cclxuY29uc3QgY29udHJhY3RvckN0cmwgPSByZXF1aXJlKCcuLi9jb250cm9sbGVyL3Byb3ZpZGVyLmNvbnRyb2xsZXIuanMnKTtcclxuXHJcbi8vIExpc3QgQ29udHJhY3RvcnNcclxucm91dGVyLmdldCgnLycsIGNvbnRyYWN0b3JDdHJsLmdldENvbnRyYWN0b3JzKTtcclxuXHJcbi8vIENyZWF0ZSBhIE5ldyBDb250cmFjdG9yXHJcbnJvdXRlci5wb3N0KCcvJywgY29udHJhY3RvckN0cmwuY3JlYXRlQ29udHJhY3Rvcik7XHJcblxyXG4vLyBSZWFkIENvbnRyYWN0b3Jcclxucm91dGVyLmdldCgnLzppZCcsIGNvbnRyYWN0b3JDdHJsLmdldENvbnRyYWN0b3IpO1xyXG5cclxuLy8gRWRpdCBDb250cmFjdG9yXHJcbnJvdXRlci5wdXQoJy86aWQnLCBjb250cmFjdG9yQ3RybC5lZGl0Q29udHJhY3Rvcik7XHJcblxyXG4vLyBEZWxldGUgQ29udHJhY3RvclxyXG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgY29udHJhY3RvckN0cmwuZGVsZXRlQ29udHJhY3Rvcik7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "provider.routes.js"
      ],
      "names": [
        "Router",
        "require",
        "router",
        "contractorCtrl",
        "get",
        "getContractors",
        "post",
        "createContractor",
        "getContractor",
        "put",
        "editContractor",
        "delete",
        "deleteContractor",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,SAAD,CAA1B;;AACA,MAAMC,MAAM,GAAGF,MAAM,EAArB;;AAGA,MAAMG,cAAc,GAAGF,OAAO,CAAC,sCAAD,CAA9B,C,CAEA;;;AACAC,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgBD,cAAc,CAACE,cAA/B,E,CAEA;;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBH,cAAc,CAACI,gBAAhC,E,CAEA;;AACAL,MAAM,CAACE,GAAP,CAAW,MAAX,EAAmBD,cAAc,CAACK,aAAlC,E,CAEA;;AACAN,MAAM,CAACO,GAAP,CAAW,MAAX,EAAmBN,cAAc,CAACO,cAAlC,E,CAEA;;AACAR,MAAM,CAACS,MAAP,CAAc,MAAd,EAAsBR,cAAc,CAACS,gBAArC;AAEAC,MAAM,CAACC,OAAP,GAAiBZ,MAAjB",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\routes\\",
      "sourcesContent": [
        "const { Router } = require('express');\r\nconst router = Router();\r\n\r\n\r\nconst contractorCtrl = require('../controller/provider.controller.js');\r\n\r\n// List Contractors\r\nrouter.get('/', contractorCtrl.getContractors);\r\n\r\n// Create a New Contractor\r\nrouter.post('/', contractorCtrl.createContractor);\r\n\r\n// Read Contractor\r\nrouter.get('/:id', contractorCtrl.getContractor);\r\n\r\n// Edit Contractor\r\nrouter.put('/:id', contractorCtrl.editContractor);\r\n\r\n// Delete Contractor\r\nrouter.delete('/:id', contractorCtrl.deleteContractor);\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1612999109671
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\provider.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\provider.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\provider.controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\provider.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
        "sourceFileName": "provider.controller.js"
      }
    },
    "ast": null,
    "code": "const pool = require('../database');\n\nconst contractorCtrl = {};\n\ncontractorCtrl.getContractors = async (req, res) => {\n  const Contractors = await pool.query('SELECT * FROM veyron_arqbid.t_contractor WHERE contractor_active = true AND id_contractor_type = 3;');\n  res.send(Contractors);\n  console.log(Contractors);\n};\n\ncontractorCtrl.createContractor = async (req, res) => {\n  const {\n    id_contractor,\n    id_contractor_type = 3,\n    contractor_name,\n    contractor_legal_name,\n    contractor_charge,\n    contractor_phone_c,\n    contractor_street,\n    contractor_colonia,\n    contractor_city,\n    contractor_State,\n    contractor_email,\n    contractor_phone,\n    contractor_location,\n    contractor_provider,\n    contractor_active,\n    contractor_website,\n    created_at,\n    updated_at\n  } = req.body;\n  const newContractor = {\n    id_contractor: null,\n    id_contractor_type: 3,\n    contractor_name,\n    contractor_legal_name,\n    contractor_charge,\n    contractor_phone_c,\n    contractor_street,\n    contractor_colonia,\n    contractor_city,\n    contractor_State,\n    contractor_email,\n    contractor_phone,\n    contractor_location,\n    contractor_provider,\n    contractor_active: 1,\n    contractor_website,\n    created_at: Date,\n    updated_at: Date\n  };\n  await pool.query('INSERT INTO `veyron_arqbid`.`t_contractor` set ?', [newContractor]).then(function (result) {\n    sendResponse(res, \"Contractor inserted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n  res.send('message: Contractor Created...'); //console.log(req.body);\n};\n\ncontractorCtrl.getContractor = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const Contractors = await pool.query('SELECT * FROM veyron_arqbid.t_contractor WHERE id_Contractor = ?;', [id]);\n  res.send(Contractors);\n  console.log(Contractors);\n};\n\ncontractorCtrl.editContractor = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const {\n    id_contractor_type,\n    contractor_name,\n    contractor_legal_name,\n    contractor_charge,\n    contractor_phone_c,\n    contractor_street,\n    contractor_colonia,\n    contractor_city,\n    contractor_State,\n    contractor_email,\n    contractor_phone,\n    contractor_location,\n    contractor_provider,\n    contractor_website\n  } = req.body;\n  const editedContractor = {\n    id_contractor_type: 3,\n    contractor_name,\n    contractor_legal_name,\n    contractor_charge,\n    contractor_phone_c,\n    contractor_street,\n    contractor_colonia,\n    contractor_city,\n    contractor_State,\n    contractor_email,\n    contractor_phone,\n    contractor_location,\n    contractor_provider,\n    contractor_website\n  };\n  await pool.query(\"UPDATE `veyron_arqbid`.`t_contractor` SET ? WHERE id_Contractor = ?;\", [editedContractor, id]).then(function (result) {\n    sendResponse(res, \"Provider Updated\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\ncontractorCtrl.deleteContractor = async (req, res) => {\n  const {\n    id\n  } = req.params; //DELETE FROM veyron_arqbid.t_Contractors WHERE id_Contractor = ?;\n\n  const Contractors = await pool.query(\"UPDATE veyron_arqbid.t_contractor SET contractor_active = '0' WHERE id_Contractor = ?;\", [id]).then(function (result) {\n    sendResponse(res, \"Provider Deleted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nfunction sendResponse(res, action, tid, error) {\n  if (action == \"error\") console.log(error);\n  var result = {\n    action: action\n  };\n  if (tid !== undefined && tid !== null) result.tid = tid;\n  res.send(result);\n}\n\nmodule.exports = contractorCtrl;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "provider.controller.js"
      ],
      "names": [
        "pool",
        "require",
        "contractorCtrl",
        "getContractors",
        "req",
        "res",
        "Contractors",
        "query",
        "send",
        "console",
        "log",
        "createContractor",
        "id_contractor",
        "id_contractor_type",
        "contractor_name",
        "contractor_legal_name",
        "contractor_charge",
        "contractor_phone_c",
        "contractor_street",
        "contractor_colonia",
        "contractor_city",
        "contractor_State",
        "contractor_email",
        "contractor_phone",
        "contractor_location",
        "contractor_provider",
        "contractor_active",
        "contractor_website",
        "created_at",
        "updated_at",
        "body",
        "newContractor",
        "Date",
        "then",
        "result",
        "sendResponse",
        "insertId",
        "catch",
        "error",
        "getContractor",
        "id",
        "params",
        "editContractor",
        "editedContractor",
        "deleteContractor",
        "action",
        "tid",
        "undefined",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "sourcesContent": [
        "const pool = require('../database');\r\n\r\nconst contractorCtrl = {}\r\n\r\ncontractorCtrl.getContractors = async (req, res) => {\r\n    const Contractors = await pool.query('SELECT * FROM veyron_arqbid.t_contractor WHERE contractor_active = true AND id_contractor_type = 3;');\r\n    res.send(Contractors);\r\n    console.log(Contractors);\r\n};\r\n\r\ncontractorCtrl.createContractor = async(req, res) => {\r\n    const {\r\n        id_contractor,\r\n        id_contractor_type=3,\r\n        contractor_name,\r\n        contractor_legal_name,\r\n        contractor_charge,\r\n        contractor_phone_c,\r\n        contractor_street,\r\n        contractor_colonia,\r\n        contractor_city,\r\n        contractor_State,\r\n        contractor_email,\r\n        contractor_phone,\r\n        contractor_location,\r\n        contractor_provider,\r\n        contractor_active,\r\n        contractor_website,\r\n        created_at,\r\n        updated_at} = req.body;\r\n    \r\n    const newContractor = {                 \r\n        id_contractor:null,\r\n        id_contractor_type:3,\r\n        contractor_name,\r\n        contractor_legal_name,\r\n        contractor_charge,\r\n        contractor_phone_c,\r\n        contractor_street,\r\n        contractor_colonia,\r\n        contractor_city,\r\n        contractor_State,\r\n        contractor_email,\r\n        contractor_phone,\r\n        contractor_location,\r\n        contractor_provider,\r\n        contractor_active:1,\r\n        contractor_website,\r\n        created_at:Date,\r\n        updated_at:Date          \r\n    };\r\n\r\n    await pool.query('INSERT INTO `veyron_arqbid`.`t_contractor` set ?', [newContractor])\r\n    .then (function (result) {\r\n        sendResponse(res, \"Contractor inserted\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n    \r\n    res.send('message: Contractor Created...');\r\n    //console.log(req.body);\r\n};\r\n\r\ncontractorCtrl.getContractor = async (req, res) => {\r\n    const { id } = req.params;\r\n    const Contractors = await pool.query('SELECT * FROM veyron_arqbid.t_contractor WHERE id_Contractor = ?;', [id]);\r\n    res.send(Contractors);\r\n    console.log(Contractors);\r\n};\r\n\r\ncontractorCtrl.editContractor = async(req, res) => {\r\n    const { id } = req.params;\r\n\r\n    const {\r\n        id_contractor_type,\r\n        contractor_name,\r\n        contractor_legal_name,\r\n        contractor_charge,\r\n        contractor_phone_c,\r\n        contractor_street,\r\n        contractor_colonia,\r\n        contractor_city,\r\n        contractor_State,\r\n        contractor_email,\r\n        contractor_phone,\r\n        contractor_location,\r\n        contractor_provider,\r\n        contractor_website\r\n        } = req.body;\r\n    \r\n    const editedContractor = {                 \r\n        id_contractor_type:3,\r\n        contractor_name,\r\n        contractor_legal_name,\r\n        contractor_charge,\r\n        contractor_phone_c,\r\n        contractor_street,\r\n        contractor_colonia,\r\n        contractor_city,\r\n        contractor_State,\r\n        contractor_email,\r\n        contractor_phone,\r\n        contractor_location,\r\n        contractor_provider,\r\n        contractor_website       \r\n    };\r\n\r\n    await pool.query(\"UPDATE `veyron_arqbid`.`t_contractor` SET ? WHERE id_Contractor = ?;\", [editedContractor, id])\r\n    .then (function (result) {\r\n        sendResponse(res, \"Provider Updated\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n};\r\n\r\ncontractorCtrl.deleteContractor = async (req, res) => {\r\n    const { id } = req.params;\r\n    //DELETE FROM veyron_arqbid.t_Contractors WHERE id_Contractor = ?;\r\n    const Contractors = await pool.query(\"UPDATE veyron_arqbid.t_contractor SET contractor_active = '0' WHERE id_Contractor = ?;\", [id]).then (function (result) {\r\n      sendResponse(res, \"Provider Deleted\", result.insertId);\r\n    })\r\n    .catch(function(error) {\r\n      sendResponse(res, \"error\", null, error); \r\n    });\r\n};\r\n\r\nfunction sendResponse(res, action, tid, error) {\r\n \r\n    if (action == \"error\")\r\n      console.log(error);\r\n   \r\n    var result = {\r\n      action: action\r\n    };\r\n    if (tid !== undefined && tid !== null)\r\n      result.tid = tid;\r\n   \r\n    res.send(result);\r\n  }\r\n\r\nmodule.exports =  contractorCtrl;"
      ]
    },
    "sourceType": "module",
    "mtime": 1614188773382
  },
  "{\"sourceRoot\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"filename\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\\\\src\\\\controller\\\\files.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"F:\\\\Documents\\\\ArqBID\\\\Platform\\\\Veyron_arqBID_API_MyERN\",\"plugins\":[],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\files.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\files.controller.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\files.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
        "sourceFileName": "files.controller.js"
      }
    },
    "ast": null,
    "code": "const pool = require('../database');\n\nconst FileCtrl = {};\n\nFileCtrl.getAllFiles = async (req, res) => {\n  const Files = await pool.query('SELECT * FROM veyron_arqbid.t_trs_files_project;'); // \n\n  res.send(Files);\n  console.log(Files);\n};\n\nFileCtrl.createFile = async (req, res) => {\n  const {\n    id_file,\n    id_project,\n    id_task,\n    id_userUploaded,\n    active,\n    deleted_by,\n    name,\n    file_path,\n    mime,\n    size,\n    md5_file\n  } = req.body;\n  const newFile = {\n    id_file: null,\n    id_project,\n    id_task,\n    id_userUploaded,\n    active,\n    deleted_by,\n    name,\n    file_path,\n    mime,\n    size,\n    md5_file\n  };\n  await pool.query('INSERT INTO `veyron_arqbid`.`t_trs_files_project` set ?', [newFile]).then(function (result) {\n    sendResponse(res, \"File inserted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n  res.send('message: File Created...'); //console.log(req.body);\n};\n\nFileCtrl.getFile = async (req, res) => {\n  const {\n    id_file\n  } = req.params;\n  const Files = await pool.query('SELECT * FROM `veyron_arqbid`.`t_trs_files_project` WHERE id_file = ?;', [id_file]);\n  res.send(Files);\n  console.log(Files);\n};\n\nFileCtrl.editFile = async (req, res) => {\n  const {\n    id\n  } = req.params;\n  const {\n    id_project,\n    id_task,\n    id_userUploaded,\n    active,\n    deleted_by,\n    name,\n    file_path,\n    mime,\n    size,\n    md5_file\n  } = req.body;\n  const editedFile = {\n    id_project,\n    id_task,\n    id_userUploaded,\n    active,\n    deleted_by,\n    name,\n    file_path,\n    mime,\n    size,\n    md5_file\n  };\n  await pool.query('UPDATE `veyron_arqbid`.`t_trs_files_project` SET ? WHERE `id_file` = ?;', [editedFile, id]).then(function (result) {\n    sendResponse(res, \"File Updated\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nFileCtrl.deleteFile = async (req, res) => {\n  const {\n    id\n  } = req.params; //DELETE FROM veyron_arqbid.t_Files WHERE id_File = ?;\n\n  await pool.query(\"UPDATE `veyron_arqbid`.`t_trs_files_project` SET `active` = '0' WHERE `id_file` = ?;\", [id]).then(function (result) {\n    sendResponse(res, \"File Deleted\", result.insertId);\n  }).catch(function (error) {\n    sendResponse(res, \"error\", null, error);\n  });\n};\n\nfunction sendResponse(res, action, tid, error) {\n  if (action == \"error\") console.log(error);\n  var result = {\n    action: action\n  };\n  if (tid !== undefined && tid !== null) result.tid = tid;\n  res.send(result);\n}\n\nmodule.exports = FileCtrl;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "files.controller.js"
      ],
      "names": [
        "pool",
        "require",
        "FileCtrl",
        "getAllFiles",
        "req",
        "res",
        "Files",
        "query",
        "send",
        "console",
        "log",
        "createFile",
        "id_file",
        "id_project",
        "id_task",
        "id_userUploaded",
        "active",
        "deleted_by",
        "name",
        "file_path",
        "mime",
        "size",
        "md5_file",
        "body",
        "newFile",
        "then",
        "result",
        "sendResponse",
        "insertId",
        "catch",
        "error",
        "getFile",
        "params",
        "editFile",
        "id",
        "editedFile",
        "deleteFile",
        "action",
        "tid",
        "undefined",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "F:\\Documents\\ArqBID\\Platform\\Veyron_arqBID_API_MyERN\\src\\controller\\",
      "sourcesContent": [
        "const pool = require('../database');\r\n\r\nconst FileCtrl = {}\r\n\r\nFileCtrl.getAllFiles = async (req, res) => {\r\n    const Files = await pool.query('SELECT * FROM veyron_arqbid.t_trs_files_project;'); // \r\n    res.send(Files);\r\n    console.log(Files);\r\n};\r\n\r\nFileCtrl.createFile = async (req, res) => {\r\n    const {\r\n        id_file, \r\n        id_project, \r\n        id_task, \r\n        id_userUploaded, \r\n        active, \r\n        deleted_by, \r\n        name, \r\n        file_path, \r\n        mime, \r\n        size, \r\n        md5_file } = req.body;\r\n\r\n    const newFile = {\r\n        id_file:null, \r\n        id_project, \r\n        id_task, \r\n        id_userUploaded, \r\n        active, \r\n        deleted_by, \r\n        name, \r\n        file_path, \r\n        mime, \r\n        size, \r\n        md5_file\r\n    };\r\n\r\n    await pool.query('INSERT INTO `veyron_arqbid`.`t_trs_files_project` set ?', [newFile]).then (function (result) {\r\n        sendResponse(res, \"File inserted\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n\r\n    res.send('message: File Created...');\r\n    //console.log(req.body);\r\n};\r\n\r\nFileCtrl.getFile = async (req, res) => {\r\n    const { id_file } = req.params;\r\n    const Files = await pool.query('SELECT * FROM `veyron_arqbid`.`t_trs_files_project` WHERE id_file = ?;', [id_file]);\r\n    res.send(Files);\r\n    console.log(Files);\r\n};\r\n\r\nFileCtrl.editFile = async (req, res) => {\r\n    const { id } = req.params;\r\n\r\n    const {\r\n        id_project, \r\n        id_task, \r\n        id_userUploaded, \r\n        active, \r\n        deleted_by, \r\n        name, \r\n        file_path, \r\n        mime, \r\n        size, \r\n        md5_file } = req.body;\r\n\r\n    const editedFile = {\r\n        id_project, \r\n        id_task, \r\n        id_userUploaded, \r\n        active, \r\n        deleted_by, \r\n        name, \r\n        file_path, \r\n        mime, \r\n        size, \r\n        md5_file\r\n    };\r\n\r\n    await pool.query('UPDATE `veyron_arqbid`.`t_trs_files_project` SET ? WHERE `id_file` = ?;', [editedFile, id])\r\n    .then (function (result) {\r\n        sendResponse(res, \"File Updated\", result.insertId);\r\n      })\r\n      .catch(function(error) {\r\n        sendResponse(res, \"error\", null, error); \r\n      });\r\n};\r\n\r\nFileCtrl.deleteFile = async (req, res) => {\r\n    const { id } = req.params;\r\n    //DELETE FROM veyron_arqbid.t_Files WHERE id_File = ?;\r\n    await pool.query(\"UPDATE `veyron_arqbid`.`t_trs_files_project` SET `active` = '0' WHERE `id_file` = ?;\", [id]).then (function (result) {\r\n      sendResponse(res, \"File Deleted\", result.insertId);\r\n    })\r\n    .catch(function(error) {\r\n      sendResponse(res, \"error\", null, error); \r\n    });\r\n};\r\n\r\nfunction sendResponse(res, action, tid, error) {\r\n \r\n    if (action == \"error\")\r\n      console.log(error);\r\n   \r\n    var result = {\r\n      action: action\r\n    };\r\n    if (tid !== undefined && tid !== null)\r\n      result.tid = tid;\r\n   \r\n    res.send(result);\r\n  }\r\n\r\nmodule.exports = FileCtrl;"
      ]
    },
    "sourceType": "module",
    "mtime": 1614188641829
  }
}